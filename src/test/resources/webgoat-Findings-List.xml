<?xml version="1.0" encoding="UTF-8"?>
<XanitizerFindingsList xanitizerVersion="version 2.3.0, build no. 84 of 01.07.16" xanitizerVersionShort="2.3.0" timeStamp="2016-07-01 16:42:25" timeStampLong="1467384145644" allFindings="3636" findingsNotRemovedByFilter="938" problemFindingsNotRemovedByFilter="912">


  <finding id="3391" kind="GENERIC">
    <problemType>Class defines equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>189</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):189

Findbugs Description:
 This class overrides equals(Object), but does not override hashCode(), and inherits the implementation of hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't think instances of this class will ever be inserted into a HashMap/HashTable, the recommended hashCode implementation to use is: 
public int hashCode() {
  assert false : "hashCode not designed";
  return 42; // any arbitrary constant will do
  }

- In method org.owasp.webgoat.lessons.AbstractLesson.equals(Object)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.AbstractLesson.equals(Object)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/AbstractLesson.java]]></originalAbsFile>
    <node lineNo="189" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="3408" kind="GENERIC">
    <problemType>Class defines equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Category</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Category</class>
    <file>Category.java</file>
    <line>166</line>
    <description><![CDATA[
Category.java (<Source Code>/org/owasp/webgoat/lessons):166

Findbugs Description:
 This class overrides equals(Object), but does not override hashCode(), and inherits the implementation of hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't think instances of this class will ever be inserted into a HashMap/HashTable, the recommended hashCode implementation to use is: 
public int hashCode() {
  assert false : "hashCode not designed";
  return 42; // any arbitrary constant will do
  }

- In method org.owasp.webgoat.lessons.Category.equals(Object)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Category.equals(Object)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Category.java]]></originalAbsFile>
    <node lineNo="166" classFQN="org.owasp.webgoat.lessons.Category" xFilePersistence="org.owasp.webgoat.lessons.Category"/>
  </finding>


  <finding id="3394" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AccessControlMatrix</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AccessControlMatrix</class>
    <file>AccessControlMatrix.java</file>
    <line>48</line>
    <description><![CDATA[
AccessControlMatrix.java (<Source Code>/org/owasp/webgoat/lessons):48

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/AccessControlMatrix.java]]></originalAbsFile>
    <node lineNo="48" classFQN="org.owasp.webgoat.lessons.AccessControlMatrix" xFilePersistence="org.owasp.webgoat.lessons.AccessControlMatrix"/>
  </finding>


  <finding id="3395" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BackDoors</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BackDoors</class>
    <file>BackDoors.java</file>
    <line>56</line>
    <description><![CDATA[
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):56

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BackDoors.java]]></originalAbsFile>
    <node lineNo="56" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
  </finding>


  <finding id="3399" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BasicAuthentication</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BasicAuthentication</class>
    <file>BasicAuthentication.java</file>
    <line>49</line>
    <description><![CDATA[
BasicAuthentication.java (<Source Code>/org/owasp/webgoat/lessons):49

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BasicAuthentication.java]]></originalAbsFile>
    <node lineNo="49" classFQN="org.owasp.webgoat.lessons.BasicAuthentication" xFilePersistence="org.owasp.webgoat.lessons.BasicAuthentication"/>
  </finding>


  <finding id="3400" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindNumericSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindNumericSqlInjection</class>
    <file>BlindNumericSqlInjection.java</file>
    <line>54</line>
    <description><![CDATA[
BlindNumericSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BlindNumericSqlInjection.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.BlindNumericSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.BlindNumericSqlInjection"/>
  </finding>


  <finding id="3402" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindScript</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindScript</class>
    <file>BlindScript.java</file>
    <line>65</line>
    <description><![CDATA[
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):65

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BlindScript.java]]></originalAbsFile>
    <node lineNo="65" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
  </finding>


  <finding id="3404" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindStringSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindStringSqlInjection</class>
    <file>BlindStringSqlInjection.java</file>
    <line>54</line>
    <description><![CDATA[
BlindStringSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BlindStringSqlInjection.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.BlindStringSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.BlindStringSqlInjection"/>
  </finding>


  <finding id="3406" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BypassHtmlFieldRestrictions</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BypassHtmlFieldRestrictions</class>
    <file>BypassHtmlFieldRestrictions.java</file>
    <line>59</line>
    <description><![CDATA[
BypassHtmlFieldRestrictions.java (<Source Code>/org/owasp/webgoat/lessons):59

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BypassHtmlFieldRestrictions.java]]></originalAbsFile>
    <node lineNo="59" classFQN="org.owasp.webgoat.lessons.BypassHtmlFieldRestrictions" xFilePersistence="org.owasp.webgoat.lessons.BypassHtmlFieldRestrictions"/>
  </finding>


  <finding id="3407" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CSRF</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>CSRF</class>
    <file>CSRF.java</file>
    <line>66</line>
    <description><![CDATA[
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):66

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/CSRF.java]]></originalAbsFile>
    <node lineNo="66" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
  </finding>


  <finding id="3409" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>74</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):74

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Challenge2Screen.java]]></originalAbsFile>
    <node lineNo="74" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="3414" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ClientSideFiltering.ClientSideFiltering</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.ClientSideFiltering</package>
    <class>ClientSideFiltering</class>
    <file>ClientSideFiltering.java</file>
    <line>32</line>
    <description><![CDATA[
ClientSideFiltering.java (<Source Code>/org/owasp/webgoat/lessons/ClientSideFiltering):32

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/ClientSideFiltering/ClientSideFiltering.java]]></originalAbsFile>
    <node lineNo="32" classFQN="org.owasp.webgoat.lessons.ClientSideFiltering.ClientSideFiltering" xFilePersistence="org.owasp.webgoat.lessons.ClientSideFiltering.ClientSideFiltering"/>
  </finding>


  <finding id="3415" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ClientSideValidation</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ClientSideValidation</class>
    <file>ClientSideValidation.java</file>
    <line>26</line>
    <description><![CDATA[
ClientSideValidation.java (<Source Code>/org/owasp/webgoat/lessons):26

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/ClientSideValidation.java]]></originalAbsFile>
    <node lineNo="26" classFQN="org.owasp.webgoat.lessons.ClientSideValidation" xFilePersistence="org.owasp.webgoat.lessons.ClientSideValidation"/>
  </finding>


  <finding id="3416" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CommandInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>CommandInjection</class>
    <file>CommandInjection.java</file>
    <line>52</line>
    <description><![CDATA[
CommandInjection.java (<Source Code>/org/owasp/webgoat/lessons):52

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/CommandInjection.java]]></originalAbsFile>
    <node lineNo="52" classFQN="org.owasp.webgoat.lessons.CommandInjection" xFilePersistence="org.owasp.webgoat.lessons.CommandInjection"/>
  </finding>


  <finding id="3417" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ConcurrencyCart</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ConcurrencyCart</class>
    <file>ConcurrencyCart.java</file>
    <line>59</line>
    <description><![CDATA[
ConcurrencyCart.java (<Source Code>/org/owasp/webgoat/lessons):59

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/ConcurrencyCart.java]]></originalAbsFile>
    <node lineNo="59" classFQN="org.owasp.webgoat.lessons.ConcurrencyCart" xFilePersistence="org.owasp.webgoat.lessons.ConcurrencyCart"/>
  </finding>


  <finding id="3418" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.CrossSiteScripting</package>
    <class>CrossSiteScripting</class>
    <file>CrossSiteScripting.java</file>
    <line>60</line>
    <description><![CDATA[
CrossSiteScripting.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):60

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/CrossSiteScripting/CrossSiteScripting.java]]></originalAbsFile>
    <node lineNo="60" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting"/>
  </finding>


  <finding id="3420" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CsrfPromptByPass</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>CsrfPromptByPass</class>
    <file>CsrfPromptByPass.java</file>
    <line>50</line>
    <description><![CDATA[
CsrfPromptByPass.java (<Source Code>/org/owasp/webgoat/lessons):50

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/CsrfPromptByPass.java]]></originalAbsFile>
    <node lineNo="50" classFQN="org.owasp.webgoat.lessons.CsrfPromptByPass" xFilePersistence="org.owasp.webgoat.lessons.CsrfPromptByPass"/>
  </finding>


  <finding id="3421" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CsrfTokenByPass</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>CsrfTokenByPass</class>
    <file>CsrfTokenByPass.java</file>
    <line>60</line>
    <description><![CDATA[
CsrfTokenByPass.java (<Source Code>/org/owasp/webgoat/lessons):60

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/CsrfTokenByPass.java]]></originalAbsFile>
    <node lineNo="60" classFQN="org.owasp.webgoat.lessons.CsrfTokenByPass" xFilePersistence="org.owasp.webgoat.lessons.CsrfTokenByPass"/>
  </finding>


  <finding id="3422" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DBCrossSiteScripting.DBCrossSiteScripting</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.DBCrossSiteScripting</package>
    <class>DBCrossSiteScripting</class>
    <file>DBCrossSiteScripting.java</file>
    <line>54</line>
    <description><![CDATA[
DBCrossSiteScripting.java (<Source Code>/org/owasp/webgoat/lessons/DBCrossSiteScripting):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DBCrossSiteScripting/DBCrossSiteScripting.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.DBCrossSiteScripting.DBCrossSiteScripting" xFilePersistence="org.owasp.webgoat.lessons.DBCrossSiteScripting.DBCrossSiteScripting"/>
  </finding>


  <finding id="3423" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DBSQLInjection.DBSQLInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.DBSQLInjection</package>
    <class>DBSQLInjection</class>
    <file>DBSQLInjection.java</file>
    <line>52</line>
    <description><![CDATA[
DBSQLInjection.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):52

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DBSQLInjection/DBSQLInjection.java]]></originalAbsFile>
    <node lineNo="52" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.DBSQLInjection" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.DBSQLInjection"/>
  </finding>


  <finding id="3424" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOMInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOMInjection</class>
    <file>DOMInjection.java</file>
    <line>54</line>
    <description><![CDATA[
DOMInjection.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DOMInjection.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.DOMInjection" xFilePersistence="org.owasp.webgoat.lessons.DOMInjection"/>
  </finding>


  <finding id="3425" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOMXSS</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOMXSS</class>
    <file>DOMXSS.java</file>
    <line>22</line>
    <description><![CDATA[
DOMXSS.java (<Source Code>/org/owasp/webgoat/lessons):22

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DOMXSS.java]]></originalAbsFile>
    <node lineNo="22" classFQN="org.owasp.webgoat.lessons.DOMXSS" xFilePersistence="org.owasp.webgoat.lessons.DOMXSS"/>
  </finding>


  <finding id="3426" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>57</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):57

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DOS_Login.java]]></originalAbsFile>
    <node lineNo="57" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="3433" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DangerousEval</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DangerousEval</class>
    <file>DangerousEval.java</file>
    <line>54</line>
    <description><![CDATA[
DangerousEval.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DangerousEval.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.DangerousEval" xFilePersistence="org.owasp.webgoat.lessons.DangerousEval"/>
  </finding>


  <finding id="3436" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>67</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):67

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Encoding.java]]></originalAbsFile>
    <node lineNo="67" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="3442" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.FailOpenAuthentication</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>FailOpenAuthentication</class>
    <file>FailOpenAuthentication.java</file>
    <line>42</line>
    <description><![CDATA[
FailOpenAuthentication.java (<Source Code>/org/owasp/webgoat/lessons):42

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/FailOpenAuthentication.java]]></originalAbsFile>
    <node lineNo="42" classFQN="org.owasp.webgoat.lessons.FailOpenAuthentication" xFilePersistence="org.owasp.webgoat.lessons.FailOpenAuthentication"/>
  </finding>


  <finding id="3443" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ForcedBrowsing</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ForcedBrowsing</class>
    <file>ForcedBrowsing.java</file>
    <line>51</line>
    <description><![CDATA[
ForcedBrowsing.java (<Source Code>/org/owasp/webgoat/lessons):51

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/ForcedBrowsing.java]]></originalAbsFile>
    <node lineNo="51" classFQN="org.owasp.webgoat.lessons.ForcedBrowsing" xFilePersistence="org.owasp.webgoat.lessons.ForcedBrowsing"/>
  </finding>


  <finding id="3444" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ForgotPassword</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ForgotPassword</class>
    <file>ForgotPassword.java</file>
    <line>54</line>
    <description><![CDATA[
ForgotPassword.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/ForgotPassword.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.ForgotPassword" xFilePersistence="org.owasp.webgoat.lessons.ForgotPassword"/>
  </finding>


  <finding id="3447" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.GoatHillsFinancial.GoatHillsFinancial</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.GoatHillsFinancial</package>
    <class>GoatHillsFinancial</class>
    <file>GoatHillsFinancial.java</file>
    <line>49</line>
    <description><![CDATA[
GoatHillsFinancial.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):49

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/GoatHillsFinancial/GoatHillsFinancial.java]]></originalAbsFile>
    <node lineNo="49" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.GoatHillsFinancial" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.GoatHillsFinancial"/>
  </finding>


  <finding id="3450" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HiddenFieldTampering</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HiddenFieldTampering</class>
    <file>HiddenFieldTampering.java</file>
    <line>61</line>
    <description><![CDATA[
HiddenFieldTampering.java (<Source Code>/org/owasp/webgoat/lessons):61

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/HiddenFieldTampering.java]]></originalAbsFile>
    <node lineNo="61" classFQN="org.owasp.webgoat.lessons.HiddenFieldTampering" xFilePersistence="org.owasp.webgoat.lessons.HiddenFieldTampering"/>
  </finding>


  <finding id="3451" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HowToWork</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HowToWork</class>
    <file>HowToWork.java</file>
    <line>40</line>
    <description><![CDATA[
HowToWork.java (<Source Code>/org/owasp/webgoat/lessons):40

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/HowToWork.java]]></originalAbsFile>
    <node lineNo="40" classFQN="org.owasp.webgoat.lessons.HowToWork" xFilePersistence="org.owasp.webgoat.lessons.HowToWork"/>
  </finding>


  <finding id="3452" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HtmlClues</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HtmlClues</class>
    <file>HtmlClues.java</file>
    <line>55</line>
    <description><![CDATA[
HtmlClues.java (<Source Code>/org/owasp/webgoat/lessons):55

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/HtmlClues.java]]></originalAbsFile>
    <node lineNo="55" classFQN="org.owasp.webgoat.lessons.HtmlClues" xFilePersistence="org.owasp.webgoat.lessons.HtmlClues"/>
  </finding>


  <finding id="3453" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpBasics</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpBasics</class>
    <file>HttpBasics.java</file>
    <line>45</line>
    <description><![CDATA[
HttpBasics.java (<Source Code>/org/owasp/webgoat/lessons):45

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/HttpBasics.java]]></originalAbsFile>
    <node lineNo="45" classFQN="org.owasp.webgoat.lessons.HttpBasics" xFilePersistence="org.owasp.webgoat.lessons.HttpBasics"/>
  </finding>


  <finding id="3455" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpOnly</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpOnly</class>
    <file>HttpOnly.java</file>
    <line>50</line>
    <description><![CDATA[
HttpOnly.java (<Source Code>/org/owasp/webgoat/lessons):50

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/HttpOnly.java]]></originalAbsFile>
    <node lineNo="50" classFQN="org.owasp.webgoat.lessons.HttpOnly" xFilePersistence="org.owasp.webgoat.lessons.HttpOnly"/>
  </finding>


  <finding id="3456" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpSplitting</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpSplitting</class>
    <file>HttpSplitting.java</file>
    <line>47</line>
    <description><![CDATA[
HttpSplitting.java (<Source Code>/org/owasp/webgoat/lessons):47

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/HttpSplitting.java]]></originalAbsFile>
    <node lineNo="47" classFQN="org.owasp.webgoat.lessons.HttpSplitting" xFilePersistence="org.owasp.webgoat.lessons.HttpSplitting"/>
  </finding>


  <finding id="3457" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.InsecureLogin</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>InsecureLogin</class>
    <file>InsecureLogin.java</file>
    <line>26</line>
    <description><![CDATA[
InsecureLogin.java (<Source Code>/org/owasp/webgoat/lessons):26

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/InsecureLogin.java]]></originalAbsFile>
    <node lineNo="26" classFQN="org.owasp.webgoat.lessons.InsecureLogin" xFilePersistence="org.owasp.webgoat.lessons.InsecureLogin"/>
  </finding>


  <finding id="3458" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.JSONInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>JSONInjection</class>
    <file>JSONInjection.java</file>
    <line>52</line>
    <description><![CDATA[
JSONInjection.java (<Source Code>/org/owasp/webgoat/lessons):52

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/JSONInjection.java]]></originalAbsFile>
    <node lineNo="52" classFQN="org.owasp.webgoat.lessons.JSONInjection" xFilePersistence="org.owasp.webgoat.lessons.JSONInjection"/>
  </finding>


  <finding id="3459" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.JavaScriptValidation</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>JavaScriptValidation</class>
    <file>JavaScriptValidation.java</file>
    <line>51</line>
    <description><![CDATA[
JavaScriptValidation.java (<Source Code>/org/owasp/webgoat/lessons):51

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/JavaScriptValidation.java]]></originalAbsFile>
    <node lineNo="51" classFQN="org.owasp.webgoat.lessons.JavaScriptValidation" xFilePersistence="org.owasp.webgoat.lessons.JavaScriptValidation"/>
  </finding>


  <finding id="3460" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.LogSpoofing</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>LogSpoofing</class>
    <file>LogSpoofing.java</file>
    <line>55</line>
    <description><![CDATA[
LogSpoofing.java (<Source Code>/org/owasp/webgoat/lessons):55

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/LogSpoofing.java]]></originalAbsFile>
    <node lineNo="55" classFQN="org.owasp.webgoat.lessons.LogSpoofing" xFilePersistence="org.owasp.webgoat.lessons.LogSpoofing"/>
  </finding>


  <finding id="3465" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>59</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):59

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="59" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3473" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin1</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin1</class>
    <file>MultiLevelLogin1.java</file>
    <line>58</line>
    <description><![CDATA[
MultiLevelLogin1.java (<Source Code>/org/owasp/webgoat/lessons):58

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MultiLevelLogin1.java]]></originalAbsFile>
    <node lineNo="58" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin1" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin1"/>
  </finding>


  <finding id="3474" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin2</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin2</class>
    <file>MultiLevelLogin2.java</file>
    <line>58</line>
    <description><![CDATA[
MultiLevelLogin2.java (<Source Code>/org/owasp/webgoat/lessons):58

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MultiLevelLogin2.java]]></originalAbsFile>
    <node lineNo="58" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin2" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin2"/>
  </finding>


  <finding id="3475" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.NewLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>NewLesson</class>
    <file>NewLesson.java</file>
    <line>39</line>
    <description><![CDATA[
NewLesson.java (<Source Code>/org/owasp/webgoat/lessons):39

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/NewLesson.java]]></originalAbsFile>
    <node lineNo="39" classFQN="org.owasp.webgoat.lessons.NewLesson" xFilePersistence="org.owasp.webgoat.lessons.NewLesson"/>
  </finding>


  <finding id="3476" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.OffByOne</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>OffByOne</class>
    <file>OffByOne.java</file>
    <line>52</line>
    <description><![CDATA[
OffByOne.java (<Source Code>/org/owasp/webgoat/lessons):52

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/OffByOne.java]]></originalAbsFile>
    <node lineNo="52" classFQN="org.owasp.webgoat.lessons.OffByOne" xFilePersistence="org.owasp.webgoat.lessons.OffByOne"/>
  </finding>


  <finding id="3477" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.PasswordStrength</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>PasswordStrength</class>
    <file>PasswordStrength.java</file>
    <line>53</line>
    <description><![CDATA[
PasswordStrength.java (<Source Code>/org/owasp/webgoat/lessons):53

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/PasswordStrength.java]]></originalAbsFile>
    <node lineNo="53" classFQN="org.owasp.webgoat.lessons.PasswordStrength" xFilePersistence="org.owasp.webgoat.lessons.PasswordStrength"/>
  </finding>


  <finding id="3478" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.PathBasedAccessControl</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>PathBasedAccessControl</class>
    <file>PathBasedAccessControl.java</file>
    <line>52</line>
    <description><![CDATA[
PathBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons):52

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/PathBasedAccessControl.java]]></originalAbsFile>
    <node lineNo="52" classFQN="org.owasp.webgoat.lessons.PathBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.PathBasedAccessControl"/>
  </finding>


  <finding id="3479" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Phishing</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Phishing</class>
    <file>Phishing.java</file>
    <line>54</line>
    <description><![CDATA[
Phishing.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Phishing.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.Phishing" xFilePersistence="org.owasp.webgoat.lessons.Phishing"/>
  </finding>


  <finding id="3529" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.admin.ProductsAdminScreen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.admin</package>
    <class>ProductsAdminScreen</class>
    <file>ProductsAdminScreen.java</file>
    <line>46</line>
    <description><![CDATA[
ProductsAdminScreen.java (<Source Code>/org/owasp/webgoat/lessons/admin):46

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/admin/ProductsAdminScreen.java]]></originalAbsFile>
    <node lineNo="46" classFQN="org.owasp.webgoat.lessons.admin.ProductsAdminScreen" xFilePersistence="org.owasp.webgoat.lessons.admin.ProductsAdminScreen"/>
  </finding>


  <finding id="3480" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ReflectedXSS</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ReflectedXSS</class>
    <file>ReflectedXSS.java</file>
    <line>56</line>
    <description><![CDATA[
ReflectedXSS.java (<Source Code>/org/owasp/webgoat/lessons):56

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/ReflectedXSS.java]]></originalAbsFile>
    <node lineNo="56" classFQN="org.owasp.webgoat.lessons.ReflectedXSS" xFilePersistence="org.owasp.webgoat.lessons.ReflectedXSS"/>
  </finding>


  <finding id="3530" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.admin.RefreshDBScreen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.admin</package>
    <class>RefreshDBScreen</class>
    <file>RefreshDBScreen.java</file>
    <line>46</line>
    <description><![CDATA[
RefreshDBScreen.java (<Source Code>/org/owasp/webgoat/lessons/admin):46

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/admin/RefreshDBScreen.java]]></originalAbsFile>
    <node lineNo="46" classFQN="org.owasp.webgoat.lessons.admin.RefreshDBScreen" xFilePersistence="org.owasp.webgoat.lessons.admin.RefreshDBScreen"/>
  </finding>


  <finding id="3481" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.RemoteAdminFlaw</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>RemoteAdminFlaw</class>
    <file>RemoteAdminFlaw.java</file>
    <line>42</line>
    <description><![CDATA[
RemoteAdminFlaw.java (<Source Code>/org/owasp/webgoat/lessons):42

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/RemoteAdminFlaw.java]]></originalAbsFile>
    <node lineNo="42" classFQN="org.owasp.webgoat.lessons.RemoteAdminFlaw" xFilePersistence="org.owasp.webgoat.lessons.RemoteAdminFlaw"/>
  </finding>


  <finding id="3531" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.admin.ReportCardScreen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.admin</package>
    <class>ReportCardScreen</class>
    <file>ReportCardScreen.java</file>
    <line>54</line>
    <description><![CDATA[
ReportCardScreen.java (<Source Code>/org/owasp/webgoat/lessons/admin):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/admin/ReportCardScreen.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.admin.ReportCardScreen" xFilePersistence="org.owasp.webgoat.lessons.admin.ReportCardScreen"/>
  </finding>


  <finding id="3482" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.RoleBasedAccessControl</package>
    <class>RoleBasedAccessControl</class>
    <file>RoleBasedAccessControl.java</file>
    <line>53</line>
    <description><![CDATA[
RoleBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):53

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/RoleBasedAccessControl/RoleBasedAccessControl.java]]></originalAbsFile>
    <node lineNo="53" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl"/>
  </finding>


  <finding id="3487" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.SQLInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>SQLInjection</class>
    <file>SQLInjection.java</file>
    <line>53</line>
    <description><![CDATA[
SQLInjection.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):53

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SQLInjection/SQLInjection.java]]></originalAbsFile>
    <node lineNo="53" classFQN="org.owasp.webgoat.lessons.SQLInjection.SQLInjection" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.SQLInjection"/>
  </finding>


  <finding id="3490" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SameOriginPolicyProtection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SameOriginPolicyProtection</class>
    <file>SameOriginPolicyProtection.java</file>
    <line>20</line>
    <description><![CDATA[
SameOriginPolicyProtection.java (<Source Code>/org/owasp/webgoat/lessons):20

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SameOriginPolicyProtection.java]]></originalAbsFile>
    <node lineNo="20" classFQN="org.owasp.webgoat.lessons.SameOriginPolicyProtection" xFilePersistence="org.owasp.webgoat.lessons.SameOriginPolicyProtection"/>
  </finding>


  <finding id="3491" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SessionFixation</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SessionFixation</class>
    <file>SessionFixation.java</file>
    <line>60</line>
    <description><![CDATA[
SessionFixation.java (<Source Code>/org/owasp/webgoat/lessons):60

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SessionFixation.java]]></originalAbsFile>
    <node lineNo="60" classFQN="org.owasp.webgoat.lessons.SessionFixation" xFilePersistence="org.owasp.webgoat.lessons.SessionFixation"/>
  </finding>


  <finding id="3493" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SilentTransactions</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SilentTransactions</class>
    <file>SilentTransactions.java</file>
    <line>56</line>
    <description><![CDATA[
SilentTransactions.java (<Source Code>/org/owasp/webgoat/lessons):56

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SilentTransactions.java]]></originalAbsFile>
    <node lineNo="56" classFQN="org.owasp.webgoat.lessons.SilentTransactions" xFilePersistence="org.owasp.webgoat.lessons.SilentTransactions"/>
  </finding>


  <finding id="3494" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SoapRequest</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SoapRequest</class>
    <file>SoapRequest.java</file>
    <line>62</line>
    <description><![CDATA[
SoapRequest.java (<Source Code>/org/owasp/webgoat/lessons):62

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SoapRequest.java]]></originalAbsFile>
    <node lineNo="62" classFQN="org.owasp.webgoat.lessons.SoapRequest" xFilePersistence="org.owasp.webgoat.lessons.SoapRequest"/>
  </finding>


  <finding id="3495" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlAddData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlAddData</class>
    <file>SqlAddData.java</file>
    <line>56</line>
    <description><![CDATA[
SqlAddData.java (<Source Code>/org/owasp/webgoat/lessons):56

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlAddData.java]]></originalAbsFile>
    <node lineNo="56" classFQN="org.owasp.webgoat.lessons.SqlAddData" xFilePersistence="org.owasp.webgoat.lessons.SqlAddData"/>
  </finding>


  <finding id="3498" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlModifyData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlModifyData</class>
    <file>SqlModifyData.java</file>
    <line>56</line>
    <description><![CDATA[
SqlModifyData.java (<Source Code>/org/owasp/webgoat/lessons):56

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlModifyData.java]]></originalAbsFile>
    <node lineNo="56" classFQN="org.owasp.webgoat.lessons.SqlModifyData" xFilePersistence="org.owasp.webgoat.lessons.SqlModifyData"/>
  </finding>


  <finding id="3501" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlNumericInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlNumericInjection</class>
    <file>SqlNumericInjection.java</file>
    <line>58</line>
    <description><![CDATA[
SqlNumericInjection.java (<Source Code>/org/owasp/webgoat/lessons):58

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlNumericInjection.java]]></originalAbsFile>
    <node lineNo="58" classFQN="org.owasp.webgoat.lessons.SqlNumericInjection" xFilePersistence="org.owasp.webgoat.lessons.SqlNumericInjection"/>
  </finding>


  <finding id="3503" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlStringInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlStringInjection</class>
    <file>SqlStringInjection.java</file>
    <line>54</line>
    <description><![CDATA[
SqlStringInjection.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlStringInjection.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.SqlStringInjection" xFilePersistence="org.owasp.webgoat.lessons.SqlStringInjection"/>
  </finding>


  <finding id="3506" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.StoredXss</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>StoredXss</class>
    <file>StoredXss.java</file>
    <line>59</line>
    <description><![CDATA[
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):59

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/StoredXss.java]]></originalAbsFile>
    <node lineNo="59" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
  </finding>


  <finding id="3532" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.admin.SummaryReportCardScreen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.admin</package>
    <class>SummaryReportCardScreen</class>
    <file>SummaryReportCardScreen.java</file>
    <line>55</line>
    <description><![CDATA[
SummaryReportCardScreen.java (<Source Code>/org/owasp/webgoat/lessons/admin):55

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/admin/SummaryReportCardScreen.java]]></originalAbsFile>
    <node lineNo="55" classFQN="org.owasp.webgoat.lessons.admin.SummaryReportCardScreen" xFilePersistence="org.owasp.webgoat.lessons.admin.SummaryReportCardScreen"/>
  </finding>


  <finding id="3507" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ThreadSafetyProblem</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ThreadSafetyProblem</class>
    <file>ThreadSafetyProblem.java</file>
    <line>50</line>
    <description><![CDATA[
ThreadSafetyProblem.java (<Source Code>/org/owasp/webgoat/lessons):50

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/ThreadSafetyProblem.java]]></originalAbsFile>
    <node lineNo="50" classFQN="org.owasp.webgoat.lessons.ThreadSafetyProblem" xFilePersistence="org.owasp.webgoat.lessons.ThreadSafetyProblem"/>
  </finding>


  <finding id="3509" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.TomcatSetup</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>TomcatSetup</class>
    <file>TomcatSetup.java</file>
    <line>40</line>
    <description><![CDATA[
TomcatSetup.java (<Source Code>/org/owasp/webgoat/lessons):40

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/TomcatSetup.java]]></originalAbsFile>
    <node lineNo="40" classFQN="org.owasp.webgoat.lessons.TomcatSetup" xFilePersistence="org.owasp.webgoat.lessons.TomcatSetup"/>
  </finding>


  <finding id="3510" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.TraceXSS</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>TraceXSS</class>
    <file>TraceXSS.java</file>
    <line>54</line>
    <description><![CDATA[
TraceXSS.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/TraceXSS.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.TraceXSS" xFilePersistence="org.owasp.webgoat.lessons.TraceXSS"/>
  </finding>


  <finding id="3511" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.UncheckedEmail</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>UncheckedEmail</class>
    <file>UncheckedEmail.java</file>
    <line>68</line>
    <description><![CDATA[
UncheckedEmail.java (<Source Code>/org/owasp/webgoat/lessons):68

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/UncheckedEmail.java]]></originalAbsFile>
    <node lineNo="68" classFQN="org.owasp.webgoat.lessons.UncheckedEmail" xFilePersistence="org.owasp.webgoat.lessons.UncheckedEmail"/>
  </finding>


  <finding id="3512" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.UsefulTools</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>UsefulTools</class>
    <file>UsefulTools.java</file>
    <line>40</line>
    <description><![CDATA[
UsefulTools.java (<Source Code>/org/owasp/webgoat/lessons):40

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/UsefulTools.java]]></originalAbsFile>
    <node lineNo="40" classFQN="org.owasp.webgoat.lessons.UsefulTools" xFilePersistence="org.owasp.webgoat.lessons.UsefulTools"/>
  </finding>


  <finding id="3533" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.admin.UserAdminScreen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.admin</package>
    <class>UserAdminScreen</class>
    <file>UserAdminScreen.java</file>
    <line>46</line>
    <description><![CDATA[
UserAdminScreen.java (<Source Code>/org/owasp/webgoat/lessons/admin):46

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/admin/UserAdminScreen.java]]></originalAbsFile>
    <node lineNo="46" classFQN="org.owasp.webgoat.lessons.admin.UserAdminScreen" xFilePersistence="org.owasp.webgoat.lessons.admin.UserAdminScreen"/>
  </finding>


  <finding id="3534" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.admin.ViewDatabase</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.admin</package>
    <class>ViewDatabase</class>
    <file>ViewDatabase.java</file>
    <line>48</line>
    <description><![CDATA[
ViewDatabase.java (<Source Code>/org/owasp/webgoat/lessons/admin):48

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/admin/ViewDatabase.java]]></originalAbsFile>
    <node lineNo="48" classFQN="org.owasp.webgoat.lessons.admin.ViewDatabase" xFilePersistence="org.owasp.webgoat.lessons.admin.ViewDatabase"/>
  </finding>


  <finding id="3513" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WSDLScanning</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WSDLScanning</class>
    <file>WSDLScanning.java</file>
    <line>71</line>
    <description><![CDATA[
WSDLScanning.java (<Source Code>/org/owasp/webgoat/lessons):71

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WSDLScanning.java]]></originalAbsFile>
    <node lineNo="71" classFQN="org.owasp.webgoat.lessons.WSDLScanning" xFilePersistence="org.owasp.webgoat.lessons.WSDLScanning"/>
  </finding>


  <finding id="3514" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakAuthenticationCookie</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakAuthenticationCookie</class>
    <file>WeakAuthenticationCookie.java</file>
    <line>54</line>
    <description><![CDATA[
WeakAuthenticationCookie.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WeakAuthenticationCookie.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.WeakAuthenticationCookie" xFilePersistence="org.owasp.webgoat.lessons.WeakAuthenticationCookie"/>
  </finding>


  <finding id="3516" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>54</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WeakSessionID.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="3522" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSAXInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSAXInjection</class>
    <file>WsSAXInjection.java</file>
    <line>62</line>
    <description><![CDATA[
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):62

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WsSAXInjection.java]]></originalAbsFile>
    <node lineNo="62" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
  </finding>


  <finding id="3524" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSqlInjection</class>
    <file>WsSqlInjection.java</file>
    <line>61</line>
    <description><![CDATA[
WsSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):61

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WsSqlInjection.java]]></originalAbsFile>
    <node lineNo="61" classFQN="org.owasp.webgoat.lessons.WsSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSqlInjection"/>
  </finding>


  <finding id="3526" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XMLInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XMLInjection</class>
    <file>XMLInjection.java</file>
    <line>54</line>
    <description><![CDATA[
XMLInjection.java (<Source Code>/org/owasp/webgoat/lessons):54

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/XMLInjection.java]]></originalAbsFile>
    <node lineNo="54" classFQN="org.owasp.webgoat.lessons.XMLInjection" xFilePersistence="org.owasp.webgoat.lessons.XMLInjection"/>
  </finding>


  <finding id="3528" kind="GENERIC">
    <problemType>Class inherits equals() and uses Object.hashCode()</problemType>
    <problemTypeId>HE_INHERITS_EQUALS_USE_HASHCODE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Bad Practice</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XPATHInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XPATHInjection</class>
    <file>XPATHInjection.java</file>
    <line>70</line>
    <description><![CDATA[
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):70

Findbugs Description:
 This class inherits equals(Object) from an abstract superclass, and hashCode() from java.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).  Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. 
If you don't want to define a hashCode method, and/or don't believe the object will ever be put into a HashMap/Hashtable, define the hashCode() method to throw UnsupportedOperationException.]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/XPATHInjection.java]]></originalAbsFile>
    <node lineNo="70" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
  </finding>


  <finding id="3390" kind="GENERIC">
    <problemType>Method call passes null for nonnull parameter</problemType>
    <problemTypeId>NP_NULL_PARAM_DEREF</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Correctness</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>200</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):200

Findbugs Description:
 This method call passes a null value for a nonnull method parameter. Either the parameter is annotated as a parameter that should always be nonnull, or analysis has shown that it will always be dereferenced. 

- In method org.owasp.webgoat.HammerHead.doPost(HttpServletRequest, HttpServletResponse)
- Called method org.owasp.webgoat.session.WebSession.returnConnection(WebSession)
- Argument 1 might be null but must not be null
- Value loaded from mySession

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.HammerHead.doPost(HttpServletRequest, HttpServletResponse)
- Called method org.owasp.webgoat.session.WebSession.returnConnection(WebSession)
- Argument 1 might be null but must not be null
- Value loaded from mySession
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/HammerHead.java]]></originalAbsFile>
    <node lineNo="200" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="3403" kind="GENERIC">
    <problemType>Possible null pointer dereference in method on exception path</problemType>
    <problemTypeId>NP_NULL_ON_SOME_PATH_EXCEPTION</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Correctness</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindScript</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindScript</class>
    <file>BlindScript.java</file>
    <line>110</line>
    <description><![CDATA[
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):110

Findbugs Description:
 A reference value which is null on some exception control path is dereferenced here.  This may lead to a NullPointerException when the code is executed.  Note that because FindBugs currently does not prune infeasible exception paths, this may be a false warning. 
 Also note that FindBugs considers the default case of a switch statement to be an exception path, since the default case is often infeasible.

- In method org.owasp.webgoat.lessons.BlindScript.createContent(WebSession)
- Value loaded from person

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.BlindScript.createContent(WebSession)
- Value loaded from person
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BlindScript.java]]></originalAbsFile>
    <node lineNo="110" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
  </finding>


  <finding id="3437" kind="GENERIC">
    <problemType>Possible null pointer dereference in method on exception path</problemType>
    <problemTypeId>NP_NULL_ON_SOME_PATH_EXCEPTION</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Correctness</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>472</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):472

Findbugs Description:
 A reference value which is null on some exception control path is dereferenced here.  This may lead to a NullPointerException when the code is executed.  Note that because FindBugs currently does not prune infeasible exception paths, this may be a false warning. 
 Also note that FindBugs considers the default case of a switch statement to be an exception path, since the default case is often infeasible.

- In method org.owasp.webgoat.lessons.Encoding.hashMD5(String)
- Value loaded from md

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Encoding.hashMD5(String)
- Value loaded from md
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Encoding.java]]></originalAbsFile>
    <node lineNo="472" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="3438" kind="GENERIC">
    <problemType>Possible null pointer dereference in method on exception path</problemType>
    <problemTypeId>NP_NULL_ON_SOME_PATH_EXCEPTION</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Correctness</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>496</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):496

Findbugs Description:
 A reference value which is null on some exception control path is dereferenced here.  This may lead to a NullPointerException when the code is executed.  Note that because FindBugs currently does not prune infeasible exception paths, this may be a false warning. 
 Also note that FindBugs considers the default case of a switch statement to be an exception path, since the default case is often infeasible.

- In method org.owasp.webgoat.lessons.Encoding.hashSHA(String)
- Value loaded from md

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Encoding.hashSHA(String)
- Value loaded from md
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Encoding.java]]></originalAbsFile>
    <node lineNo="496" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="3454" kind="GENERIC">
    <problemType>Possible null pointer dereference in method on exception path</problemType>
    <problemTypeId>NP_NULL_ON_SOME_PATH_EXCEPTION</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Correctness</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpBasics</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpBasics</class>
    <file>HttpBasics.java</file>
    <line>79</line>
    <description><![CDATA[
HttpBasics.java (<Source Code>/org/owasp/webgoat/lessons):79

Findbugs Description:
 A reference value which is null on some exception control path is dereferenced here.  This may lead to a NullPointerException when the code is executed.  Note that because FindBugs currently does not prune infeasible exception paths, this may be a false warning. 
 Also note that FindBugs considers the default case of a switch statement to be an exception path, since the default case is often infeasible.

- In method org.owasp.webgoat.lessons.HttpBasics.createContent(WebSession)
- Value loaded from person

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.HttpBasics.createContent(WebSession)
- Value loaded from person
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/HttpBasics.java]]></originalAbsFile>
    <node lineNo="79" classFQN="org.owasp.webgoat.lessons.HttpBasics" xFilePersistence="org.owasp.webgoat.lessons.HttpBasics"/>
  </finding>


  <finding id="3540" kind="GENERIC">
    <problemType>Possible null pointer dereference in method on exception path</problemType>
    <problemTypeId>NP_NULL_ON_SOME_PATH_EXCEPTION</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Correctness</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.WebgoatProperties</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>WebgoatProperties</class>
    <file>WebgoatProperties.java</file>
    <line>120</line>
    <description><![CDATA[
WebgoatProperties.java (<Source Code>/org/owasp/webgoat/session):120

Findbugs Description:
 A reference value which is null on some exception control path is dereferenced here.  This may lead to a NullPointerException when the code is executed.  Note that because FindBugs currently does not prune infeasible exception paths, this may be a false warning. 
 Also note that FindBugs considers the default case of a switch statement to be an exception path, since the default case is often infeasible.

- In method org.owasp.webgoat.session.WebgoatProperties.main(String[])
- Value loaded from properties

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.session.WebgoatProperties.main(String[])
- Value loaded from properties
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/session/WebgoatProperties.java]]></originalAbsFile>
    <node lineNo="120" classFQN="org.owasp.webgoat.session.WebgoatProperties" xFilePersistence="org.owasp.webgoat.session.WebgoatProperties"/>
  </finding>


  <finding id="3389" kind="GENERIC">
    <problemType>Load of known null value</problemType>
    <problemTypeId>NP_LOAD_OF_KNOWN_NULL_VALUE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Dodgy Code</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>471</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):471

Findbugs Description:
 The variable referenced at this point is known to be null due to an earlier check against null. Although this is valid, it might be a mistake (perhaps you intended to refer to a different variable, or perhaps the earlier check to see if the variable is null should have been a check to see if it was nonnull). 

- In method org.owasp.webgoat.HammerHead.writeScreen(WebSession, Screen, HttpServletResponse)
- Value loaded from s

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.HammerHead.writeScreen(WebSession, Screen, HttpServletResponse)
- Value loaded from s
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/HammerHead.java]]></originalAbsFile>
    <node lineNo="471" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="3387" kind="GENERIC">
    <problemType>Field isn't final and can't be protected from malicious code</problemType>
    <problemTypeId>MS_CANNOT_BE_FINAL</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Malicious Code Vulnerabilities</category>
    <rating>7.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Course</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Course</class>
    <file>Course.java</file>
    <line>56</line>
    <description><![CDATA[
Course.java (<Source Code>/org/owasp/webgoat/session):56

Findbugs Description:
 A mutable static field could be changed by malicious code or by accident from another package. Unfortunately, the way the field is used doesn't allow any easy fix to this problem.

- Field org.owasp.webgoat.HammerHead.propertiesPath

]]></description>
    <extraDescription><![CDATA[
- Field org.owasp.webgoat.HammerHead.propertiesPath
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/session/Course.java]]></originalAbsFile>
    <node lineNo="56" classFQN="org.owasp.webgoat.session.Course" xFilePersistence="org.owasp.webgoat.session.Course"/>
  </finding>


  <finding id="3419" kind="GENERIC">
    <problemType>Field isn't final but should be</problemType>
    <problemTypeId>MS_SHOULD_BE_FINAL</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Malicious Code Vulnerabilities</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.CrossSiteScripting</package>
    <class>FindProfile</class>
    <file>FindProfile.java</file>
    <line>214</line>
    <description><![CDATA[
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):214

Findbugs Description:
 This static field public but not final, and could be changed by malicious code or by accident from another package. The field could be made final to avoid this vulnerability.

- Field org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile.patterns

]]></description>
    <extraDescription><![CDATA[
- Field org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile.patterns
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/CrossSiteScripting/FindProfile.java]]></originalAbsFile>
    <node lineNo="214" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
  </finding>


  <finding id="3520" kind="GENERIC">
    <problemType>Field isn't final but should be</problemType>
    <problemTypeId>MS_SHOULD_BE_FINAL</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Malicious Code Vulnerabilities</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>75</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):75

Findbugs Description:
 This static field public but not final, and could be changed by malicious code or by accident from another package. The field could be made final to avoid this vulnerability.

- Field org.owasp.webgoat.lessons.WeakSessionID.sessionList

]]></description>
    <extraDescription><![CDATA[
- Field org.owasp.webgoat.lessons.WeakSessionID.sessionList
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WeakSessionID.java]]></originalAbsFile>
    <node lineNo="75" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="3527" kind="GENERIC">
    <problemType>Field isn't final but should be</problemType>
    <problemTypeId>MS_SHOULD_BE_FINAL</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Malicious Code Vulnerabilities</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XMLInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XMLInjection</class>
    <file>XMLInjection.java</file>
    <line>61</line>
    <description><![CDATA[
XMLInjection.java (<Source Code>/org/owasp/webgoat/lessons):61

Findbugs Description:
 This static field public but not final, and could be changed by malicious code or by accident from another package. The field could be made final to avoid this vulnerability.

- Field org.owasp.webgoat.lessons.XMLInjection.rewardsMap

]]></description>
    <extraDescription><![CDATA[
- Field org.owasp.webgoat.lessons.XMLInjection.rewardsMap
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/XMLInjection.java]]></originalAbsFile>
    <node lineNo="61" classFQN="org.owasp.webgoat.lessons.XMLInjection" xFilePersistence="org.owasp.webgoat.lessons.XMLInjection"/>
  </finding>


  <finding id="3388" kind="GENERIC">
    <problemType>Field should be package protected</problemType>
    <problemTypeId>MS_PKGPROTECT</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Malicious Code Vulnerabilities</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>0</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):0

Findbugs Description:
 A mutable static field could be changed by malicious code or by accident. The field could be made package protected to avoid this vulnerability.

- Field org.owasp.webgoat.HammerHead.httpDateFormat

]]></description>
    <extraDescription><![CDATA[
- Field org.owasp.webgoat.HammerHead.httpDateFormat
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/HammerHead.java]]></originalAbsFile>
    <node lineNo="0" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="3519" kind="GENERIC">
    <problemType>Field should be package protected</problemType>
    <problemTypeId>MS_PKGPROTECT</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Malicious Code Vulnerabilities</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>77</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):77

Findbugs Description:
 A mutable static field could be changed by malicious code or by accident. The field could be made package protected to avoid this vulnerability.

- Field org.owasp.webgoat.lessons.WeakSessionID.seq

]]></description>
    <extraDescription><![CDATA[
- Field org.owasp.webgoat.lessons.WeakSessionID.seq
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WeakSessionID.java]]></originalAbsFile>
    <node lineNo="77" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="3518" kind="GENERIC">
    <problemType>Field should be package protected</problemType>
    <problemTypeId>MS_PKGPROTECT</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Malicious Code Vulnerabilities</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>79</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):79

Findbugs Description:
 A mutable static field could be changed by malicious code or by accident. The field could be made package protected to avoid this vulnerability.

- Field org.owasp.webgoat.lessons.WeakSessionID.lastTime

]]></description>
    <extraDescription><![CDATA[
- Field org.owasp.webgoat.lessons.WeakSessionID.lastTime
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WeakSessionID.java]]></originalAbsFile>
    <node lineNo="79" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="3434" kind="GENERIC">
    <problemType>Cipher With No Integrity</problemType>
    <problemTypeId>CIPHER_INTEGRITY</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>325</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):325

Findbugs Description:
 The ciphertext produced is susceptible to alteration by an adversary. This mean that the cipher provides no way to detect that the data has been tampered with. If the ciphertext can be controlled by an attacker, it could be altered without detection.  
 The solution is to used a cipher that includes a Hash based Message Authentication Code (HMAC) to sign the data. Combining a HMAC function to the existing cipher is prone to error [1]. Specifically, it is always recommended that you be able to verify the HMAC first, and only if the data is unmodified, do you then perform any cryptographic functions on the data.  
 Code at risk:
 AES in CBC mode
 
Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText); 
 Triple DES with ECB mode
 
Cipher c = Cipher.getInstance("DESede/ECB/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);  
 Solution: 
Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);  
 In the example solution above, the GCM mode introduces an HMAC into the resulting encrypted data, providing integrity of the result.  
 
 References
 Wikipedia: Authenticated encryption
 NIST: Authenticated Encryption Modes
 Moxie Marlinspike's blog: The Cryptographic Doom Principle
 CWE-353: Missing Support for Integrity Check 

- In method org.owasp.webgoat.lessons.Encoding.decryptString(String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Encoding.decryptString(String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Encoding.java]]></originalAbsFile>
    <node lineNo="325" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="3435" kind="GENERIC">
    <problemType>Cipher With No Integrity</problemType>
    <problemTypeId>CIPHER_INTEGRITY</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>370</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):370

Findbugs Description:
 The ciphertext produced is susceptible to alteration by an adversary. This mean that the cipher provides no way to detect that the data has been tampered with. If the ciphertext can be controlled by an attacker, it could be altered without detection.  
 The solution is to used a cipher that includes a Hash based Message Authentication Code (HMAC) to sign the data. Combining a HMAC function to the existing cipher is prone to error [1]. Specifically, it is always recommended that you be able to verify the HMAC first, and only if the data is unmodified, do you then perform any cryptographic functions on the data.  
 Code at risk:
 AES in CBC mode
 
Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText); 
 Triple DES with ECB mode
 
Cipher c = Cipher.getInstance("DESede/ECB/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);  
 Solution: 
Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);  
 In the example solution above, the GCM mode introduces an HMAC into the resulting encrypted data, providing integrity of the result.  
 
 References
 Wikipedia: Authenticated encryption
 NIST: Authenticated Encryption Modes
 Moxie Marlinspike's blog: The Cryptographic Doom Principle
 CWE-353: Missing Support for Integrity Check 

- In method org.owasp.webgoat.lessons.Encoding.encryptString(String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Encoding.encryptString(String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Encoding.java]]></originalAbsFile>
    <node lineNo="370" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="3439" kind="GENERIC">
    <problemType>Cipher is Susceptible to Padding Oracle</problemType>
    <problemTypeId>PADDING_ORACLE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>325</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):325

Findbugs Description:
 This specific mode of CBC with PKCS5Padding is susceptible to padding oracle attacks. An adversary could potentially decrypt the message if the system exposed the difference between plaintext with invalid padding or valid padding. The distinction between valid and invalid padding is usually revealed through distinct error messages being returned for each condition.  
 Code at risk: 
Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);  
 Solution: 
Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);  
 
 References
 Padding Oracles for the masses (by Matias Soler)
 Wikipedia: Authenticated encryption
 NIST: Authenticated Encryption Modes
 CAPEC: Padding Oracle Crypto Attack
 CWE-696: Incorrect Behavior Order 

- In method org.owasp.webgoat.lessons.Encoding.decryptString(String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Encoding.decryptString(String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Encoding.java]]></originalAbsFile>
    <node lineNo="325" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="3440" kind="GENERIC">
    <problemType>Cipher is Susceptible to Padding Oracle</problemType>
    <problemTypeId>PADDING_ORACLE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>370</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):370

Findbugs Description:
 This specific mode of CBC with PKCS5Padding is susceptible to padding oracle attacks. An adversary could potentially decrypt the message if the system exposed the difference between plaintext with invalid padding or valid padding. The distinction between valid and invalid padding is usually revealed through distinct error messages being returned for each condition.  
 Code at risk: 
Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);  
 Solution: 
Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);  
 
 References
 Padding Oracles for the masses (by Matias Soler)
 Wikipedia: Authenticated encryption
 NIST: Authenticated Encryption Modes
 CAPEC: Padding Oracle Crypto Attack
 CWE-696: Incorrect Behavior Order 

- In method org.owasp.webgoat.lessons.Encoding.encryptString(String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Encoding.encryptString(String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Encoding.java]]></originalAbsFile>
    <node lineNo="370" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="3410" kind="GENERIC">
    <problemType>Cookie without the secure flag</problemType>
    <problemTypeId>INSECURE_COOKIE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>171</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):171

Findbugs Description:
 A new cookie is created without the Secure flag set. The Secure flag is a directive to the browser to make sure that the cookie is not sent for insecure communication (http://).  
 Code at risk:
 

Cookie cookie = new Cookie("userName",userName);
response.addCookie(cookie);
  
 Solution (Specific configuration):
 

Cookie cookie = new Cookie("userName",userName);
cookie.setSecure(true);
cookie.setHttpOnly(true);
  
 Solution (Servlet 3.0 configuration):
 

<web-app xmlns="http://java.sun.com/xml/ns/javaee" version="3.0">
[...]
<session-config>
 <cookie-config>
  <http-only>true</http-only>
  <secure>true</secure>
 </cookie-config>
</session-config>
</web-app>
  
 
 Reference
 CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute
 CWE-315: Cleartext Storage of Sensitive Information in a Cookie
 CWE-311: Missing Encryption of Sensitive Data
 OWASP: Secure Flag
 Rapid7: Missing Secure Flag From SSL Cookie 

- In method org.owasp.webgoat.lessons.Challenge2Screen.doStage1(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Challenge2Screen.doStage1(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Challenge2Screen.java]]></originalAbsFile>
    <node lineNo="171" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="3411" kind="GENERIC">
    <problemType>Cookie without the secure flag</problemType>
    <problemTypeId>INSECURE_COOKIE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>194</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):194

Findbugs Description:
 A new cookie is created without the Secure flag set. The Secure flag is a directive to the browser to make sure that the cookie is not sent for insecure communication (http://).  
 Code at risk:
 

Cookie cookie = new Cookie("userName",userName);
response.addCookie(cookie);
  
 Solution (Specific configuration):
 

Cookie cookie = new Cookie("userName",userName);
cookie.setSecure(true);
cookie.setHttpOnly(true);
  
 Solution (Servlet 3.0 configuration):
 

<web-app xmlns="http://java.sun.com/xml/ns/javaee" version="3.0">
[...]
<session-config>
 <cookie-config>
  <http-only>true</http-only>
  <secure>true</secure>
 </cookie-config>
</session-config>
</web-app>
  
 
 Reference
 CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute
 CWE-315: Cleartext Storage of Sensitive Information in a Cookie
 CWE-311: Missing Encryption of Sensitive Data
 OWASP: Secure Flag
 Rapid7: Missing Secure Flag From SSL Cookie 

- In method org.owasp.webgoat.lessons.Challenge2Screen.doStage2(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Challenge2Screen.doStage2(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Challenge2Screen.java]]></originalAbsFile>
    <node lineNo="194" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="3515" kind="GENERIC">
    <problemType>Cookie without the secure flag</problemType>
    <problemTypeId>INSECURE_COOKIE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakAuthenticationCookie</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakAuthenticationCookie</class>
    <file>WeakAuthenticationCookie.java</file>
    <line>144</line>
    <description><![CDATA[
WeakAuthenticationCookie.java (<Source Code>/org/owasp/webgoat/lessons):144

Findbugs Description:
 A new cookie is created without the Secure flag set. The Secure flag is a directive to the browser to make sure that the cookie is not sent for insecure communication (http://).  
 Code at risk:
 

Cookie cookie = new Cookie("userName",userName);
response.addCookie(cookie);
  
 Solution (Specific configuration):
 

Cookie cookie = new Cookie("userName",userName);
cookie.setSecure(true);
cookie.setHttpOnly(true);
  
 Solution (Servlet 3.0 configuration):
 

<web-app xmlns="http://java.sun.com/xml/ns/javaee" version="3.0">
[...]
<session-config>
 <cookie-config>
  <http-only>true</http-only>
  <secure>true</secure>
 </cookie-config>
</session-config>
</web-app>
  
 
 Reference
 CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute
 CWE-315: Cleartext Storage of Sensitive Information in a Cookie
 CWE-311: Missing Encryption of Sensitive Data
 OWASP: Secure Flag
 Rapid7: Missing Secure Flag From SSL Cookie 

- In method org.owasp.webgoat.lessons.WeakAuthenticationCookie.checkParams(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.WeakAuthenticationCookie.checkParams(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WeakAuthenticationCookie.java]]></originalAbsFile>
    <node lineNo="144" classFQN="org.owasp.webgoat.lessons.WeakAuthenticationCookie" xFilePersistence="org.owasp.webgoat.lessons.WeakAuthenticationCookie"/>
  </finding>


  <finding id="3517" kind="GENERIC">
    <problemType>Cookie without the secure flag</problemType>
    <problemTypeId>INSECURE_COOKIE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>199</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):199

Findbugs Description:
 A new cookie is created without the Secure flag set. The Secure flag is a directive to the browser to make sure that the cookie is not sent for insecure communication (http://).  
 Code at risk:
 

Cookie cookie = new Cookie("userName",userName);
response.addCookie(cookie);
  
 Solution (Specific configuration):
 

Cookie cookie = new Cookie("userName",userName);
cookie.setSecure(true);
cookie.setHttpOnly(true);
  
 Solution (Servlet 3.0 configuration):
 

<web-app xmlns="http://java.sun.com/xml/ns/javaee" version="3.0">
[...]
<session-config>
 <cookie-config>
  <http-only>true</http-only>
  <secure>true</secure>
 </cookie-config>
</session-config>
</web-app>
  
 
 Reference
 CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute
 CWE-315: Cleartext Storage of Sensitive Information in a Cookie
 CWE-311: Missing Encryption of Sensitive Data
 OWASP: Secure Flag
 Rapid7: Missing Secure Flag From SSL Cookie 

- In method org.owasp.webgoat.lessons.WeakSessionID.makeLogin(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.WeakSessionID.makeLogin(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WeakSessionID.java]]></originalAbsFile>
    <node lineNo="199" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="3536" kind="GENERIC">
    <problemType>Empty database password</problemType>
    <problemTypeId>DMI_EMPTY_DB_PASSWORD</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>10.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.DatabaseUtilities</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>DatabaseUtilities</class>
    <file>DatabaseUtilities.java</file>
    <line>112</line>
    <description><![CDATA[
DatabaseUtilities.java (<Source Code>/org/owasp/webgoat/session):112

Findbugs Description:
This code creates a database connect using a blank or empty password. This indicates that the database is not protected by a password. 

- In method org.owasp.webgoat.session.DatabaseUtilities.getHsqldbConnection(String, WebgoatContext)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.session.DatabaseUtilities.getHsqldbConnection(String, WebgoatContext)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/session/DatabaseUtilities.java]]></originalAbsFile>
    <node lineNo="112" classFQN="org.owasp.webgoat.session.DatabaseUtilities" xFilePersistence="org.owasp.webgoat.session.DatabaseUtilities"/>
  </finding>


  <finding id="3537" kind="GENERIC">
    <problemType>Hard Coded Password</problemType>
    <problemTypeId>HARD_CODE_PASSWORD</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.DatabaseUtilities</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>DatabaseUtilities</class>
    <file>DatabaseUtilities.java</file>
    <line>112</line>
    <description><![CDATA[
DatabaseUtilities.java (<Source Code>/org/owasp/webgoat/session):112

Findbugs Description:
 Passwords should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores. (Hard coded keys are reported separately by Hard Coded Key pattern)  
 
Vulnerable Code:
 
private String SECRET_PASSWORD = "letMeIn!";

Properties props = new Properties();
props.put(Context.SECURITY_CREDENTIALS, "p@ssw0rd");  
 
 References
 CWE-259: Use of Hard-coded Password 

- In method org.owasp.webgoat.session.DatabaseUtilities.getHsqldbConnection(String, WebgoatContext)
- Called method java.sql.DriverManager.getConnection(String, String, String)
- Hard coded parameter number (in reverse order) is 1
- Value

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.session.DatabaseUtilities.getHsqldbConnection(String, WebgoatContext)
- Called method java.sql.DriverManager.getConnection(String, String, String)
- Hard coded parameter number (in reverse order) is 1
- Value
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/session/DatabaseUtilities.java]]></originalAbsFile>
    <node lineNo="112" classFQN="org.owasp.webgoat.session.DatabaseUtilities" xFilePersistence="org.owasp.webgoat.session.DatabaseUtilities"/>
  </finding>


  <finding id="3441" kind="GENERIC">
    <problemType>MessageDigest Is Weak</problemType>
    <problemTypeId>WEAK_MESSAGE_DIGEST</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>465</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):465

Findbugs Description:
The algorithm used is not a recommended MessageDigest. 
NIST recommends the use of SHA-1, SHA-224*, SHA-256, SHA-384, SHA-512, SHA-512/224, or SHA-512/256. 
* SHA-224 algorithm is not provided by  SUN provider. 
Upgrade your implementation to use one of the approved algorithms. Use an algorithm that is sufficiently strong for your specific security needs. 
 
 References
 NIST Approved Hashing Algorithms
 CWE-327: Use of a Broken or Risky Cryptographic Algorithm 

- In method org.owasp.webgoat.lessons.Encoding.hashMD5(String)
- Value MD5

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Encoding.hashMD5(String)
- Value MD5
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Encoding.java]]></originalAbsFile>
    <node lineNo="465" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="3393" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>638</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):638

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.AbstractLesson.isAuthorized(WebSession, String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.AbstractLesson.isAuthorized(WebSession, String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/AbstractLesson.java]]></originalAbsFile>
    <node lineNo="638" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="3413" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>221</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):221

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.Challenge2Screen.doStage2(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Challenge2Screen.doStage2(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Challenge2Screen.java]]></originalAbsFile>
    <node lineNo="221" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="3432" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>106</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):106

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DOS_Login.java]]></originalAbsFile>
    <node lineNo="106" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="3446" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.GoatHillsFinancial</package>
    <class>DefaultLessonAction</class>
    <file>DefaultLessonAction.java</file>
    <line>252</line>
    <description><![CDATA[
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):252

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction.isAuthorized(WebSession, int, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction.isAuthorized(WebSession, int, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/GoatHillsFinancial/DefaultLessonAction.java]]></originalAbsFile>
    <node lineNo="252" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
  </finding>


  <finding id="3449" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.GoatHillsFinancial.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.GoatHillsFinancial</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>127</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):127

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.GoatHillsFinancial.Login.login(WebSession, int, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.GoatHillsFinancial.Login.login(WebSession, int, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/GoatHillsFinancial/Login.java]]></originalAbsFile>
    <node lineNo="127" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
  </finding>


  <finding id="3485" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>131</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):131

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.SQLInjection.Login.login(WebSession, String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SQLInjection.Login.login(WebSession, String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SQLInjection/Login.java]]></originalAbsFile>
    <node lineNo="131" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
  </finding>


  <finding id="3486" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>166</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):166

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.SQLInjection.Login.login_BACKUP(WebSession, String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SQLInjection.Login.login_BACKUP(WebSession, String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SQLInjection/Login.java]]></originalAbsFile>
    <node lineNo="166" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
  </finding>


  <finding id="3470" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>150</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):150

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="150" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3472" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>302</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):302

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.restartLesson(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.restartLesson(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="302" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3471" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>463</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):463

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="463" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3497" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlAddData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlAddData</class>
    <file>SqlAddData.java</file>
    <line>100</line>
    <description><![CDATA[
SqlAddData.java (<Source Code>/org/owasp/webgoat/lessons):100

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.SqlAddData.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SqlAddData.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlAddData.java]]></originalAbsFile>
    <node lineNo="100" classFQN="org.owasp.webgoat.lessons.SqlAddData" xFilePersistence="org.owasp.webgoat.lessons.SqlAddData"/>
  </finding>


  <finding id="3500" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlModifyData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlModifyData</class>
    <file>SqlModifyData.java</file>
    <line>108</line>
    <description><![CDATA[
SqlModifyData.java (<Source Code>/org/owasp/webgoat/lessons):108

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.SqlModifyData.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SqlModifyData.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlModifyData.java]]></originalAbsFile>
    <node lineNo="108" classFQN="org.owasp.webgoat.lessons.SqlModifyData" xFilePersistence="org.owasp.webgoat.lessons.SqlModifyData"/>
  </finding>


  <finding id="3505" kind="GENERIC">
    <problemType>Nonconstant string passed to execute method on an SQL statement</problemType>
    <problemTypeId>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlStringInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlStringInjection</class>
    <file>SqlStringInjection.java</file>
    <line>101</line>
    <description><![CDATA[
SqlStringInjection.java (<Source Code>/org/owasp/webgoat/lessons):101

Findbugs Description:
The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. Consider using a prepared statement instead. It is more efficient and less vulnerable to SQL injection attacks. 

- In method org.owasp.webgoat.lessons.SqlStringInjection.injectableQuery(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SqlStringInjection.injectableQuery(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlStringInjection.java]]></originalAbsFile>
    <node lineNo="101" classFQN="org.owasp.webgoat.lessons.SqlStringInjection" xFilePersistence="org.owasp.webgoat.lessons.SqlStringInjection"/>
  </finding>


  <finding id="3392" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>638</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):638

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.AbstractLesson.isAuthorized(WebSession, String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.AbstractLesson.isAuthorized(WebSession, String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/AbstractLesson.java]]></originalAbsFile>
    <node lineNo="638" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="3396" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BackDoors</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BackDoors</class>
    <file>BackDoors.java</file>
    <line>141</line>
    <description><![CDATA[
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):141

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.BackDoors.concept1(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.BackDoors.concept1(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BackDoors.java]]></originalAbsFile>
    <node lineNo="141" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
  </finding>


  <finding id="3397" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BackDoors</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BackDoors</class>
    <file>BackDoors.java</file>
    <line>148</line>
    <description><![CDATA[
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):148

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.BackDoors.concept1(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.BackDoors.concept1(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BackDoors.java]]></originalAbsFile>
    <node lineNo="148" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
  </finding>


  <finding id="3398" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BackDoors</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BackDoors</class>
    <file>BackDoors.java</file>
    <line>180</line>
    <description><![CDATA[
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):180

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.BackDoors.concept2(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.BackDoors.concept2(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BackDoors.java]]></originalAbsFile>
    <node lineNo="180" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
  </finding>


  <finding id="3401" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindNumericSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindNumericSqlInjection</class>
    <file>BlindNumericSqlInjection.java</file>
    <line>114</line>
    <description><![CDATA[
BlindNumericSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):114

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.BlindNumericSqlInjection.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.BlindNumericSqlInjection.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BlindNumericSqlInjection.java]]></originalAbsFile>
    <node lineNo="114" classFQN="org.owasp.webgoat.lessons.BlindNumericSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.BlindNumericSqlInjection"/>
  </finding>


  <finding id="3405" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindStringSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindStringSqlInjection</class>
    <file>BlindStringSqlInjection.java</file>
    <line>114</line>
    <description><![CDATA[
BlindStringSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):114

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.BlindStringSqlInjection.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.BlindStringSqlInjection.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/BlindStringSqlInjection.java]]></originalAbsFile>
    <node lineNo="114" classFQN="org.owasp.webgoat.lessons.BlindStringSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.BlindStringSqlInjection"/>
  </finding>


  <finding id="3412" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>221</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):221

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.Challenge2Screen.doStage2(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.Challenge2Screen.doStage2(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/Challenge2Screen.java]]></originalAbsFile>
    <node lineNo="221" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="3427" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>106</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):106

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DOS_Login.java]]></originalAbsFile>
    <node lineNo="106" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="3428" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>122</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):122

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DOS_Login.java]]></originalAbsFile>
    <node lineNo="122" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="3429" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>126</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):126

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DOS_Login.java]]></originalAbsFile>
    <node lineNo="126" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="3430" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>134</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):134

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DOS_Login.java]]></originalAbsFile>
    <node lineNo="134" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="3431" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>146</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):146

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.DOS_Login.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/DOS_Login.java]]></originalAbsFile>
    <node lineNo="146" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="3445" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.GoatHillsFinancial</package>
    <class>DefaultLessonAction</class>
    <file>DefaultLessonAction.java</file>
    <line>252</line>
    <description><![CDATA[
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):252

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction.isAuthorized(WebSession, int, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction.isAuthorized(WebSession, int, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/GoatHillsFinancial/DefaultLessonAction.java]]></originalAbsFile>
    <node lineNo="252" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
  </finding>


  <finding id="3448" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.GoatHillsFinancial.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.GoatHillsFinancial</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>127</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):127

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.GoatHillsFinancial.Login.login(WebSession, int, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.GoatHillsFinancial.Login.login(WebSession, int, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/GoatHillsFinancial/Login.java]]></originalAbsFile>
    <node lineNo="127" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
  </finding>


  <finding id="3483" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>131</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):131

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.SQLInjection.Login.login(WebSession, String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SQLInjection.Login.login(WebSession, String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SQLInjection/Login.java]]></originalAbsFile>
    <node lineNo="131" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
  </finding>


  <finding id="3484" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>166</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):166

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.SQLInjection.Login.login_BACKUP(WebSession, String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SQLInjection.Login.login_BACKUP(WebSession, String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SQLInjection/Login.java]]></originalAbsFile>
    <node lineNo="166" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
  </finding>


  <finding id="3466" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>150</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):150

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="150" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3469" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>302</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):302

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.restartLesson(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.restartLesson(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="302" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3467" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>463</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):463

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="463" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3468" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>471</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):471

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="471" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3496" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlAddData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlAddData</class>
    <file>SqlAddData.java</file>
    <line>100</line>
    <description><![CDATA[
SqlAddData.java (<Source Code>/org/owasp/webgoat/lessons):100

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.SqlAddData.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SqlAddData.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlAddData.java]]></originalAbsFile>
    <node lineNo="100" classFQN="org.owasp.webgoat.lessons.SqlAddData" xFilePersistence="org.owasp.webgoat.lessons.SqlAddData"/>
  </finding>


  <finding id="3499" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlModifyData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlModifyData</class>
    <file>SqlModifyData.java</file>
    <line>108</line>
    <description><![CDATA[
SqlModifyData.java (<Source Code>/org/owasp/webgoat/lessons):108

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.SqlModifyData.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SqlModifyData.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlModifyData.java]]></originalAbsFile>
    <node lineNo="108" classFQN="org.owasp.webgoat.lessons.SqlModifyData" xFilePersistence="org.owasp.webgoat.lessons.SqlModifyData"/>
  </finding>


  <finding id="3502" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlNumericInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlNumericInjection</class>
    <file>SqlNumericInjection.java</file>
    <line>119</line>
    <description><![CDATA[
SqlNumericInjection.java (<Source Code>/org/owasp/webgoat/lessons):119

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.SqlNumericInjection.injectableQuery(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SqlNumericInjection.injectableQuery(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlNumericInjection.java]]></originalAbsFile>
    <node lineNo="119" classFQN="org.owasp.webgoat.lessons.SqlNumericInjection" xFilePersistence="org.owasp.webgoat.lessons.SqlNumericInjection"/>
  </finding>


  <finding id="3504" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlStringInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlStringInjection</class>
    <file>SqlStringInjection.java</file>
    <line>101</line>
    <description><![CDATA[
SqlStringInjection.java (<Source Code>/org/owasp/webgoat/lessons):101

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.SqlStringInjection.injectableQuery(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SqlStringInjection.injectableQuery(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SqlStringInjection.java]]></originalAbsFile>
    <node lineNo="101" classFQN="org.owasp.webgoat.lessons.SqlStringInjection" xFilePersistence="org.owasp.webgoat.lessons.SqlStringInjection"/>
  </finding>


  <finding id="3508" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ThreadSafetyProblem</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ThreadSafetyProblem</class>
    <file>ThreadSafetyProblem.java</file>
    <line>98</line>
    <description><![CDATA[
ThreadSafetyProblem.java (<Source Code>/org/owasp/webgoat/lessons):98

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.ThreadSafetyProblem.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.ThreadSafetyProblem.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/ThreadSafetyProblem.java]]></originalAbsFile>
    <node lineNo="98" classFQN="org.owasp.webgoat.lessons.ThreadSafetyProblem" xFilePersistence="org.owasp.webgoat.lessons.ThreadSafetyProblem"/>
  </finding>


  <finding id="3535" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.admin.ViewDatabase</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.admin</package>
    <class>ViewDatabase</class>
    <file>ViewDatabase.java</file>
    <line>82</line>
    <description><![CDATA[
ViewDatabase.java (<Source Code>/org/owasp/webgoat/lessons/admin):82

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.admin.ViewDatabase.createContent(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.admin.ViewDatabase.createContent(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/admin/ViewDatabase.java]]></originalAbsFile>
    <node lineNo="82" classFQN="org.owasp.webgoat.lessons.admin.ViewDatabase" xFilePersistence="org.owasp.webgoat.lessons.admin.ViewDatabase"/>
  </finding>


  <finding id="3488" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.ViewProfile</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>ViewProfile</class>
    <file>ViewProfile.java</file>
    <line>108</line>
    <description><![CDATA[
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):108

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.SQLInjection.ViewProfile.getEmployeeProfile(WebSession, String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SQLInjection.ViewProfile.getEmployeeProfile(WebSession, String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SQLInjection/ViewProfile.java]]></originalAbsFile>
    <node lineNo="108" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
  </finding>


  <finding id="3489" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.ViewProfile</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>ViewProfile</class>
    <file>ViewProfile.java</file>
    <line>157</line>
    <description><![CDATA[
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):157

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.SQLInjection.ViewProfile.getEmployeeProfile_BACKUP(WebSession, String, String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SQLInjection.ViewProfile.getEmployeeProfile_BACKUP(WebSession, String, String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SQLInjection/ViewProfile.java]]></originalAbsFile>
    <node lineNo="157" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
  </finding>


  <finding id="3525" kind="GENERIC">
    <problemType>Potential JDBC Injection</problemType>
    <problemTypeId>SQL_INJECTION_JDBC</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSqlInjection</class>
    <file>WsSqlInjection.java</file>
    <line>233</line>
    <description><![CDATA[
WsSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):233

Findbugs Description:
 The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.  
 Vulnerable Code:
 
Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");  
 Solution:
 
Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);  
 References (JDBC)
 Oracle Documentation: The Java Tutorials > Prepared Statements
 References (SQL injection)
 WASC-19: SQL Injection
 CAPEC-66: SQL Injection
 CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
 OWASP: Top 10 2013-A1-Injection
 OWASP: SQL Injection Prevention Cheat Sheet
 OWASP: Query Parameterization Cheat Sheet
 

- In method org.owasp.webgoat.lessons.WsSqlInjection.getResults(String)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.WsSqlInjection.getResults(String)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WsSqlInjection.java]]></originalAbsFile>
    <node lineNo="233" classFQN="org.owasp.webgoat.lessons.WsSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSqlInjection"/>
  </finding>


  <finding id="3492" kind="GENERIC">
    <problemType>Predictable Pseudo Random Number Generator</problemType>
    <problemTypeId>PREDICTABLE_RANDOM</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SessionFixation</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SessionFixation</class>
    <file>SessionFixation.java</file>
    <line>72</line>
    <description><![CDATA[
SessionFixation.java (<Source Code>/org/owasp/webgoat/lessons):72

Findbugs Description:
The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:  
a CSRF token 
a password reset token (sent by email) 
any other secret value  
 A quick fix could be to replace the use of java.util.Random with something stronger, such as java.security.SecureRandom.  
 Vulnerable Code:
 
String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}  
 Solution: 
import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}  
 
 References
 Cracking Random Number Generators - Part 1 (http://jazzy.id.au)
 CERT: MSC02-J. Generate strong random numbers
 CWE-330: Use of Insufficiently Random Values
 Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation) 

- In method org.owasp.webgoat.lessons.SessionFixation.<static initializer for SessionFixation>()
- Value java.util.Random

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.SessionFixation.<static initializer for SessionFixation>()
- Value java.util.Random
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/SessionFixation.java]]></originalAbsFile>
    <node lineNo="72" classFQN="org.owasp.webgoat.lessons.SessionFixation" xFilePersistence="org.owasp.webgoat.lessons.SessionFixation"/>
  </finding>


  <finding id="3521" kind="GENERIC">
    <problemType>Predictable Pseudo Random Number Generator</problemType>
    <problemTypeId>PREDICTABLE_RANDOM</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>77</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):77

Findbugs Description:
The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:  
a CSRF token 
a password reset token (sent by email) 
any other secret value  
 A quick fix could be to replace the use of java.util.Random with something stronger, such as java.security.SecureRandom.  
 Vulnerable Code:
 
String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}  
 Solution: 
import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}  
 
 References
 Cracking Random Number Generators - Part 1 (http://jazzy.id.au)
 CERT: MSC02-J. Generate strong random numbers
 CWE-330: Use of Insufficiently Random Values
 Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation) 

- In method org.owasp.webgoat.lessons.WeakSessionID.<static initializer for WeakSessionID>()
- Value java.lang.Math.random()

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.WeakSessionID.<static initializer for WeakSessionID>()
- Value java.lang.Math.random()
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WeakSessionID.java]]></originalAbsFile>
    <node lineNo="77" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="3539" kind="GENERIC">
    <problemType>Regex DOS (ReDOS)</problemType>
    <problemTypeId>REDOS</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.ParameterParser</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>ParameterParser</class>
    <file>ParameterParser.java</file>
    <line>973</line>
    <description><![CDATA[
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):973

Findbugs Description:
 Regular expressions (regexs) are frequently subject to Denial of Service (DOS) attacks (called ReDOS). This is due to the fact that regex engines may take a large amount of time when analyzing certain strings, depending on how the regex is defined. 
 For example, for the regex: ^(a+)+$, the input "aaaaaaaaaaaaaaaaX" will cause the regex engine to analyze 65536 different paths.[1] Example taken from OWASP references 
 Therefore, it is possible that a single request may cause a large amount of computation on the server side. The problem with this regex, and others like it, is that there are two different ways the same input character can be accepted by the Regex due to the + (or a *) inside the parenthesis, and the + (or a *) outside the parenthesis. The way this is written, either + could consume the character 'a'. To fix this, the regex should be rewritten to eliminate the ambiguity. For example, this could simply be rewritten as: ^a+$, which is presumably what the author meant anyway (any number of a's). Assuming that's what the original regex meant, this new regex can be evaluated quickly, and is not subject to ReDOS.  
 
 References
 Sebastian Kubeck's Weblog: Detecting and Preventing ReDoS Vulnerabilities
 [1] OWASP: Regular expression Denial of Service
 CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion') 

- Value ^[\\w-]+(?:\\.[\\w-]+)*@(?:[\\w-]+\\.)+[a-zA-Z]{2,7}$
- In method org.owasp.webgoat.session.ParameterParser.<static initializer for ParameterParser>()

]]></description>
    <extraDescription><![CDATA[
- Value ^[\\w-]+(?:\\.[\\w-]+)*@(?:[\\w-]+\\.)+[a-zA-Z]{2,7}$
- In method org.owasp.webgoat.session.ParameterParser.<static initializer for ParameterParser>()
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/session/ParameterParser.java]]></originalAbsFile>
    <node lineNo="973" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
  </finding>


  <finding id="3538" kind="GENERIC">
    <problemType>Regex DOS (ReDOS)</problemType>
    <problemTypeId>REDOS</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.ParameterParser</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>ParameterParser</class>
    <file>ParameterParser.java</file>
    <line>1,001</line>
    <description><![CDATA[
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):1001

Findbugs Description:
 Regular expressions (regexs) are frequently subject to Denial of Service (DOS) attacks (called ReDOS). This is due to the fact that regex engines may take a large amount of time when analyzing certain strings, depending on how the regex is defined. 
 For example, for the regex: ^(a+)+$, the input "aaaaaaaaaaaaaaaaX" will cause the regex engine to analyze 65536 different paths.[1] Example taken from OWASP references 
 Therefore, it is possible that a single request may cause a large amount of computation on the server side. The problem with this regex, and others like it, is that there are two different ways the same input character can be accepted by the Regex due to the + (or a *) inside the parenthesis, and the + (or a *) outside the parenthesis. The way this is written, either + could consume the character 'a'. To fix this, the regex should be rewritten to eliminate the ambiguity. For example, this could simply be rewritten as: ^a+$, which is presumably what the author meant anyway (any number of a's). Assuming that's what the original regex meant, this new regex can be evaluated quickly, and is not subject to ReDOS.  
 
 References
 Sebastian Kubeck's Weblog: Detecting and Preventing ReDoS Vulnerabilities
 [1] OWASP: Regular expression Denial of Service
 CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion') 

- Value ^(((https?)://)([-()_.!~*';/?:@&=+$,A-Za-z0-9])+)([).!';/?:,][[:blank:]])?$
- In method org.owasp.webgoat.session.ParameterParser.<static initializer for ParameterParser>()

]]></description>
    <extraDescription><![CDATA[
- Value ^(((https?)://)([-()_.!~*';/?:@&=+$,A-Za-z0-9])+)([).!';/?:,][[:blank:]])?$
- In method org.owasp.webgoat.session.ParameterParser.<static initializer for ParameterParser>()
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/session/ParameterParser.java]]></originalAbsFile>
    <node lineNo="1001" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
  </finding>


  <finding id="3461" kind="GENERIC">
    <problemType>Tainted Filename Read</problemType>
    <problemTypeId>FILE_UPLOAD_FILENAME</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>435</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):435

Findbugs Description:
The filename provided by the FileUpload API can be tampered with by the client to reference unauthorized files. 
For example:  
"../../../config/overide_file" 
"shell.jsp\u0000expected.gif"  
Therefore, such values should not be passed directly to the filesystem API. If acceptable, the application should generate its own file names and use those. Otherwise, the provided filename should be properly validated to ensure it's properly structured, contains no unauthorized path characters (e.g., / \), and refers to an authorized file. 
 
 References
 Securiteam: File upload security recommendations
 CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')
 WASC-33: Path Traversal
 OWASP: Path Traversal
 CAPEC-126: Path Traversal
 CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="435" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3462" kind="GENERIC">
    <problemType>Tainted Filename Read</problemType>
    <problemTypeId>FILE_UPLOAD_FILENAME</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>444</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):444

Findbugs Description:
The filename provided by the FileUpload API can be tampered with by the client to reference unauthorized files. 
For example:  
"../../../config/overide_file" 
"shell.jsp\u0000expected.gif"  
Therefore, such values should not be passed directly to the filesystem API. If acceptable, the application should generate its own file names and use those. Otherwise, the provided filename should be properly validated to ensure it's properly structured, contains no unauthorized path characters (e.g., / \), and refers to an authorized file. 
 
 References
 Securiteam: File upload security recommendations
 CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')
 WASC-33: Path Traversal
 OWASP: Path Traversal
 CAPEC-126: Path Traversal
 CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="444" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3463" kind="GENERIC">
    <problemType>Tainted Filename Read</problemType>
    <problemTypeId>FILE_UPLOAD_FILENAME</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>458</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):458

Findbugs Description:
The filename provided by the FileUpload API can be tampered with by the client to reference unauthorized files. 
For example:  
"../../../config/overide_file" 
"shell.jsp\u0000expected.gif"  
Therefore, such values should not be passed directly to the filesystem API. If acceptable, the application should generate its own file names and use those. Otherwise, the provided filename should be properly validated to ensure it's properly structured, contains no unauthorized path characters (e.g., / \), and refers to an authorized file. 
 
 References
 Securiteam: File upload security recommendations
 CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')
 WASC-33: Path Traversal
 OWASP: Path Traversal
 CAPEC-126: Path Traversal
 CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="458" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3464" kind="GENERIC">
    <problemType>Tainted Filename Read</problemType>
    <problemTypeId>FILE_UPLOAD_FILENAME</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>466</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):466

Findbugs Description:
The filename provided by the FileUpload API can be tampered with by the client to reference unauthorized files. 
For example:  
"../../../config/overide_file" 
"shell.jsp\u0000expected.gif"  
Therefore, such values should not be passed directly to the filesystem API. If acceptable, the application should generate its own file names and use those. Otherwise, the provided filename should be properly validated to ensure it's properly structured, contains no unauthorized path characters (e.g., / \), and refers to an authorized file. 
 
 References
 Securiteam: File upload security recommendations
 CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')
 WASC-33: Path Traversal
 OWASP: Path Traversal
 CAPEC-126: Path Traversal
 CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') 

- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.MaliciousFileExecution.handleRequest(WebSession)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/MaliciousFileExecution.java]]></originalAbsFile>
    <node lineNo="466" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="3541" kind="GENERIC">
    <problemType>Unencrypted Socket</problemType>
    <problemTypeId>UNENCRYPTED_SOCKET</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Interceptor</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Interceptor</class>
    <file>Interceptor.java</file>
    <line>88</line>
    <description><![CDATA[
Interceptor.java (<Source Code>/org/owasp/webgoat/util):88

Findbugs Description:
 The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.  
 Vulnerable Code:
 Plain socket (Cleartext communication): 
Socket soc = new Socket("www.google.com",80);  
 Solution:
 SSL Socket (Secure communication): 
Socket soc = SSLSocketFactory.getDefault().createSocket("www.google.com", 443);  
Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory does all the appropriate certificate validation checks to make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how to do this correctly.  
 
 References
 OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection
 OWASP: Top 10 2013-A6-Sensitive Data Exposure
 OWASP: Transport Layer Protection Cheat Sheet
 WASC-04: Insufficient Transport Layer Protection
 CWE-319: Cleartext Transmission of Sensitive Information 

- In method org.owasp.webgoat.util.Interceptor.doFilter(ServletRequest, ServletResponse, FilterChain)
- Value remote host

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.util.Interceptor.doFilter(ServletRequest, ServletResponse, FilterChain)
- Value remote host
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/util/Interceptor.java]]></originalAbsFile>
    <node lineNo="88" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
  </finding>


  <finding id="3523" kind="GENERIC">
    <problemType>XML Parsing Vulnerable to XXE (XMLReader)</problemType>
    <problemTypeId>XXE_XMLREADER</problemTypeId>
    <producer>PlugIn:Findbugs</producer>
    <category>Security: Findbugs Security Issues</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSAXInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSAXInjection</class>
    <file>WsSAXInjection.java</file>
    <line>161</line>
    <description><![CDATA[
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):161

Findbugs Description:
Attack 
XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received from an untrusted source. 
Risk 1: Expose local file content (XXE: XML eXternal Entity) 
 

<?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?>
<!DOCTYPE foo [
   <!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; > ]>
<foo>&xxe;</foo>  Risk 2: Denial of service (XEE: Xml Entity Expansion) 
 

<?xml version=&quot;1.0&quot;?>
<!DOCTYPE lolz [
 <!ENTITY lol &quot;lol&quot;>
 <!ELEMENT lolz (#PCDATA)>
 <!ENTITY lol1 &quot;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&quot;>
 <!ENTITY lol2 &quot;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&quot;>
 <!ENTITY lol3 &quot;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&quot;>
[...]
 <!ENTITY lol9 &quot;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&quot;>
]>
<lolz>&lol9;</lolz>  Solution 
 In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.  
Vulnerable Code: 
 

XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setContentHandler(customHandler);
reader.parse(new InputSource(inputStream));  
Solution using "Secure processing" mode: 
 

XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
reader.setContentHandler(customHandler);

reader.parse(new InputSource(inputStream));  
Solution disabling DTD: 
 

XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
reader.setContentHandler(customHandler);

reader.parse(new InputSource(inputStream));  
 
 References
 CWE-611: Improper Restriction of XML External Entity Reference ('XXE')
 CERT: IDS10-J. Prevent XML external entity attacks
 OWASP.org: XML External Entity (XXE) Processing
 WS-Attacks.org: XML Entity Expansion
 WS-Attacks.org: XML External Entity DOS
 WS-Attacks.org: XML Entity Reference Attack
 Xerces complete features list 

- In method org.owasp.webgoat.lessons.WsSAXInjection.checkXML(WebSession, String)
- Value XMLReader.parse(...)

]]></description>
    <extraDescription><![CDATA[
- In method org.owasp.webgoat.lessons.WsSAXInjection.checkXML(WebSession, String)
- Value XMLReader.parse(...)
]]></extraDescription>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/SourceCode/org/owasp/webgoat/lessons/WsSAXInjection.java]]></originalAbsFile>
    <node lineNo="161" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
  </finding>


  <finding id="3543" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>7.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2014-0230
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3558" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2002-0493
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Apache Tomcat may be started without proper security settings if errors are encountered while reading the web.xml file, which could allow attackers to bypass intended restrictions.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Apache Tomcat may be started without proper security settings if errors are encountered while reading the web.xml file, which could allow attackers to bypass intended restrictions.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3554" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2013-2185
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
** DISPUTED ** The readObject method in the DiskFileItem class in Apache Tomcat and JBoss Web, as used in Red Hat JBoss Enterprise Application Platform 6.1.0 and Red Hat JBoss Portal 6.0.0, allows remote attackers to write to arbitrary files via a NULL byte in a file name in a serialized instance, a similar issue to CVE-2013-2186.  NOTE: this issue is reportedly disputed by the Apache Tomcat team, although Red Hat considers it a vulnerability. The dispute appears to regard whether it is the responsibility of applications to avoid providing untrusted data to be deserialized, or whether this class should inherently protect against this issue.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
** DISPUTED ** The readObject method in the DiskFileItem class in Apache Tomcat and JBoss Web, as used in Red Hat JBoss Enterprise Application Platform 6.1.0 and Red Hat JBoss Portal 6.0.0, allows remote attackers to write to arbitrary files via a NULL byte in a file name in a serialized instance, a similar issue to CVE-2013-2186.  NOTE: this issue is reportedly disputed by the Apache Tomcat team, although Red Hat considers it a vulnerability. The dispute appears to regard whether it is the responsibility of applications to avoid providing untrusted data to be deserialized, or whether this class should inherently protect against this issue.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3549" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2014-0050
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3561" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/commons-collections-3.1.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>commons-collections-3.1.jar</file>
    <line>-2</line>
    <description><![CDATA[
commons-collections-3.1.jar: CVE-2015-6420
commons-collections-3.1.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/webgoat/WEB-INF/lib)

National Vulnerability Database of NIST reports:
Serialized-object interfaces in certain Cisco Collaboration and Social Media; Endpoint Clients and Client Software; Network Application, Service, and Acceleration; Network and Content Security Devices; Network Management and Provisioning; Routing and Switching - Enterprise and Service Provider; Unified Computing; Voice and Unified Communications Devices; Video, Streaming, TelePresence, and Transcoding Devices; Wireless; and Cisco Hosted Services products allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Serialized-object interfaces in certain Cisco Collaboration and Social Media; Endpoint Clients and Client Software; Network Application, Service, and Acceleration; Network and Content Security Devices; Network Management and Provisioning; Routing and Switching - Enterprise and Service Provider; Unified Computing; Voice and Unified Communications Devices; Video, Streaming, TelePresence, and Transcoding Devices; Wireless; and Cisco Hosted Services products allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\webgoat\WEB-INF\lib\commons-collections-3.1.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/webgoat/WEB-INF/lib/commons-collections-3.1.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/commons-collections-3.1.jar"/>
  </finding>


  <finding id="3562" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/commons-fileupload-1.2.1.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>commons-fileupload-1.2.1.jar</file>
    <line>-2</line>
    <description><![CDATA[
commons-fileupload-1.2.1.jar: CVE-2014-0050
commons-fileupload-1.2.1.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/webgoat/WEB-INF/lib)

National Vulnerability Database of NIST reports:
MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\webgoat\WEB-INF\lib\commons-fileupload-1.2.1.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/webgoat/WEB-INF/lib/commons-fileupload-1.2.1.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/commons-fileupload-1.2.1.jar"/>
  </finding>


  <finding id="3551" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>6.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2013-4444
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Unrestricted file upload vulnerability in Apache Tomcat 7.x before 7.0.40, in certain situations involving outdated java.io.File code and a custom JMX configuration, allows remote attackers to execute arbitrary code by uploading and accessing a JSP file.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Unrestricted file upload vulnerability in Apache Tomcat 7.x before 7.0.40, in certain situations involving outdated java.io.File code and a custom JMX configuration, allows remote attackers to execute arbitrary code by uploading and accessing a JSP file.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3544" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>6.40</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2014-0227
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache Tomcat 6.x before 6.0.42, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle attempts to continue reading data after an error has occurred, which allows remote attackers to conduct HTTP request smuggling attacks or cause a denial of service (resource consumption) by streaming data with malformed chunked transfer coding.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache Tomcat 6.x before 6.0.42, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle attempts to continue reading data after an error has occurred, which allows remote attackers to conduct HTTP request smuggling attacks or cause a denial of service (resource consumption) by streaming data with malformed chunked transfer coding.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3560" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>5.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/axis-1.2.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>axis-1.2.jar</file>
    <line>-2</line>
    <description><![CDATA[
axis-1.2.jar: CVE-2012-5784
axis-1.2.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/webgoat/WEB-INF/lib)

National Vulnerability Database of NIST reports:
Apache Axis 1.4 and earlier, as used in PayPal Payments Pro, PayPal Mass Pay, PayPal Transactional Information SOAP, the Java Message Service implementation in Apache ActiveMQ, and other products, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Apache Axis 1.4 and earlier, as used in PayPal Payments Pro, PayPal Mass Pay, PayPal Transactional Information SOAP, the Java Message Service implementation in Apache ActiveMQ, and other products, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\webgoat\WEB-INF\lib\axis-1.2.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/webgoat/WEB-INF/lib/axis-1.2.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/axis-1.2.jar"/>
  </finding>


  <finding id="3559" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>5.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/axis-1.2.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>axis-1.2.jar</file>
    <line>-2</line>
    <description><![CDATA[
axis-1.2.jar: CVE-2014-3596
axis-1.2.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/webgoat/WEB-INF/lib)

National Vulnerability Database of NIST reports:
The getCN function in Apache Axis 1.4 and earlier does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.  NOTE: this issue exists because of an incomplete fix for CVE-2012-5784.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
The getCN function in Apache Axis 1.4 and earlier does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.  NOTE: this issue exists because of an incomplete fix for CVE-2012-5784.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\webgoat\WEB-INF\lib\axis-1.2.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/webgoat/WEB-INF/lib/axis-1.2.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/axis-1.2.jar"/>
  </finding>


  <finding id="3553" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>5.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2013-4286
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Apache Tomcat before 6.0.39, 7.x before 7.0.47, and 8.x before 8.0.0-RC3, when an HTTP connector or AJP connector is used, does not properly handle certain inconsistent HTTP request headers, which allows remote attackers to trigger incorrect identification of a request's length and conduct request-smuggling attacks via (1) multiple Content-Length headers or (2) a Content-Length header and a "Transfer-Encoding: chunked" header.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2005-2090.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Apache Tomcat before 6.0.39, 7.x before 7.0.47, and 8.x before 8.0.0-RC3, when an HTTP connector or AJP connector is used, does not properly handle certain inconsistent HTTP request headers, which allows remote attackers to trigger incorrect identification of a request's length and conduct request-smuggling attacks via (1) multiple Content-Length headers or (2) a Content-Length header and a "Transfer-Encoding: chunked" header.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2005-2090.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3548" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2014-0075
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Integer overflow in the parseChunkHeader function in java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 allows remote attackers to cause a denial of service (resource consumption) via a malformed chunk size in chunked transfer coding of a request during the streaming of data.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Integer overflow in the parseChunkHeader function in java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 allows remote attackers to cause a denial of service (resource consumption) via a malformed chunk size in chunked transfer coding of a request during the streaming of data.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3542" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2014-7810
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
The Expression Language (EL) implementation in Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.58, and 8.x before 8.0.16 does not properly consider the possibility of an accessible interface implemented by an inaccessible class, which allows attackers to bypass a SecurityManager protection mechanism via a web application that leverages use of incorrect privileges during EL evaluation.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
The Expression Language (EL) implementation in Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.58, and 8.x before 8.0.16 does not properly consider the possibility of an accessible interface implemented by an inaccessible class, which allows attackers to bypass a SecurityManager protection mechanism via a web application that leverages use of incorrect privileges during EL evaluation.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3564" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/mail-1.4.2.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>mail-1.4.2.jar</file>
    <line>-2</line>
    <description><![CDATA[
mail-1.4.2.jar: CVE-2007-6059
mail-1.4.2.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/webgoat/WEB-INF/lib)

National Vulnerability Database of NIST reports:
** DISPUTED **  Javamail does not properly handle a series of invalid login attempts in which the same e-mail address is entered as username and password, and the domain portion of this address yields a Java UnknownHostException error, which allows remote attackers to cause a denial of service (connection pool exhaustion) via a large number of requests, resulting in a SQLNestedException.  NOTE: Sun disputes this issue, stating "The report makes references to source code and files that do not exist in the mentioned products."
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
** DISPUTED **  Javamail does not properly handle a series of invalid login attempts in which the same e-mail address is entered as username and password, and the domain portion of this address yields a Java UnknownHostException error, which allows remote attackers to cause a denial of service (connection pool exhaustion) via a large number of requests, resulting in a SQLNestedException.  NOTE: Sun disputes this issue, stating "The report makes references to source code and files that do not exist in the mentioned products."]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\webgoat\WEB-INF\lib\mail-1.4.2.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/webgoat/WEB-INF/lib/mail-1.4.2.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/mail-1.4.2.jar"/>
  </finding>


  <finding id="3565" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/mailapi-1.4.2.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>mailapi-1.4.2.jar</file>
    <line>-2</line>
    <description><![CDATA[
mailapi-1.4.2.jar: CVE-2007-6059
mailapi-1.4.2.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/webgoat/WEB-INF/lib)

National Vulnerability Database of NIST reports:
** DISPUTED **  Javamail does not properly handle a series of invalid login attempts in which the same e-mail address is entered as username and password, and the domain portion of this address yields a Java UnknownHostException error, which allows remote attackers to cause a denial of service (connection pool exhaustion) via a large number of requests, resulting in a SQLNestedException.  NOTE: Sun disputes this issue, stating "The report makes references to source code and files that do not exist in the mentioned products."
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
** DISPUTED **  Javamail does not properly handle a series of invalid login attempts in which the same e-mail address is entered as username and password, and the domain portion of this address yields a Java UnknownHostException error, which allows remote attackers to cause a denial of service (connection pool exhaustion) via a large number of requests, resulting in a SQLNestedException.  NOTE: Sun disputes this issue, stating "The report makes references to source code and files that do not exist in the mentioned products."]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\webgoat\WEB-INF\lib\mailapi-1.4.2.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/webgoat/WEB-INF/lib/mailapi-1.4.2.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/mailapi-1.4.2.jar"/>
  </finding>


  <finding id="3556" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>4.30</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2009-2696
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Cross-site scripting (XSS) vulnerability in jsp/cal/cal2.jsp in the calendar application in the examples web application in Apache Tomcat on Red Hat Enterprise Linux 5, Desktop Workstation 5, and Linux Desktop 5 allows remote attackers to inject arbitrary web script or HTML via the time parameter, related to "invalid HTML." NOTE: this is due to a missing fix for CVE-2009-0781.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Cross-site scripting (XSS) vulnerability in jsp/cal/cal2.jsp in the calendar application in the examples web application in Apache Tomcat on Red Hat Enterprise Linux 5, Desktop Workstation 5, and Linux Desktop 5 allows remote attackers to inject arbitrary web script or HTML via the time parameter, related to "invalid HTML." NOTE: this is due to a missing fix for CVE-2009-0781.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3552" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>4.30</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2013-4322
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3550" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>4.30</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2013-4590
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain "Tomcat internals" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain "Tomcat internals" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3547" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>4.30</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2014-0096
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3546" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>4.30</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2014-0099
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Integer overflow in java/org/apache/tomcat/util/buf/Ascii.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4, when operated behind a reverse proxy, allows remote attackers to conduct HTTP request smuggling attacks via a crafted Content-Length HTTP header.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Integer overflow in java/org/apache/tomcat/util/buf/Ascii.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4, when operated behind a reverse proxy, allows remote attackers to conduct HTTP request smuggling attacks via a crafted Content-Length HTTP header.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3545" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>4.30</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2014-0119
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3557" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>3.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2007-5461
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
Absolute path traversal vulnerability in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0, 5.0.0, 5.5.0 through 5.5.25, and 6.0.0 through 6.0.14, under certain configurations, allows remote authenticated users to read arbitrary files via a WebDAV write request that specifies an entity with a SYSTEM tag.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
Absolute path traversal vulnerability in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0, 5.0.0, 5.5.0 through 5.5.25, and 6.0.0 through 6.0.14, under certain configurations, allows remote authenticated users to read arbitrary files via a WebDAV write request that specifies an entity with a SYSTEM tag.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3563" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>3.30</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/commons-fileupload-1.2.1.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>commons-fileupload-1.2.1.jar</file>
    <line>-2</line>
    <description><![CDATA[
commons-fileupload-1.2.1.jar: CVE-2013-0248
commons-fileupload-1.2.1.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/webgoat/WEB-INF/lib)

National Vulnerability Database of NIST reports:
The default configuration of javax.servlet.context.tempdir in Apache Commons FileUpload 1.0 through 1.2.2 uses the /tmp directory for uploaded files, which allows local users to overwrite arbitrary files via an unspecified symlink attack.
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
The default configuration of javax.servlet.context.tempdir in Apache Commons FileUpload 1.0 through 1.2.2 uses the /tmp directory for uploaded files, which allows local users to overwrite arbitrary files via an unspecified symlink attack.]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\webgoat\WEB-INF\lib\commons-fileupload-1.2.1.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/webgoat/WEB-INF/lib/commons-fileupload-1.2.1.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/webgoat/WEB-INF/lib/commons-fileupload-1.2.1.jar"/>
  </finding>


  <finding id="3555" kind="GENERIC">
    <problemType>Libraries with known vulnerabilities</problemType>
    <problemTypeId>OWASPDependencyCheckBugTypeID</problemTypeId>
    <producer>PlugIn:OWASPDependencyCheck</producer>
    <category>Security: OWASP Dependency Check</category>
    <rating>2.10</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>catalina.jar</file>
    <line>-2</line>
    <description><![CDATA[
catalina.jar: CVE-2013-0346
catalina.jar (C:/Users/nwe/Desktop/Xanitizer-2.3.0/examples/tomcat-libs)

National Vulnerability Database of NIST reports:
** DISPUTED ** Apache Tomcat 7.x uses world-readable permissions for the log directory and its files, which might allow local users to obtain sensitive information by reading a file.  NOTE: One Tomcat distributor has stated "The tomcat log directory does not contain any sensitive information."
]]></description>
    <extraDescription><![CDATA[
National Vulnerability Database of NIST reports:
** DISPUTED ** Apache Tomcat 7.x uses world-readable permissions for the log directory and its files, which might allow local users to obtain sensitive information by reading a file.  NOTE: One Tomcat distributor has stated "The tomcat log directory does not contain any sensitive information."]]></extraDescription>
    <originalAbsFile><![CDATA[
C:\Users\nwe\Desktop\Xanitizer-1.0.0\examples\tomcat-libs\catalina.jar]]></originalAbsFile>
    <node lineNo="-2" classFQN="${INSTALL_DIR}/examples/tomcat-libs/catalina.jar" xFilePersistence="XanitizerPath:${INSTALL_DIR}examples/tomcat-libs/catalina.jar"/>
  </finding>


  <finding id="3615" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>106</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):106

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="106" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="3610" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>60</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):60

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="60" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="3618" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.ECSFactory</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>ECSFactory</class>
    <file>ECSFactory.java</file>
    <line>65</line>
    <description><![CDATA[
ECSFactory.java (<Source Code>/org/owasp/webgoat/session):65

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="65" classFQN="org.owasp.webgoat.session.ECSFactory" xFilePersistence="org.owasp.webgoat.session.ECSFactory"/>
  </finding>


  <finding id="3628" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.GoatHillsFinancial.GoatHillsFinancial</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.GoatHillsFinancial</package>
    <class>GoatHillsFinancial</class>
    <file>GoatHillsFinancial.java</file>
    <line>84</line>
    <description><![CDATA[
GoatHillsFinancial.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):84

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="84" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.GoatHillsFinancial" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.GoatHillsFinancial"/>
  </finding>


  <finding id="3617" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HtmlClues</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HtmlClues</class>
    <file>HtmlClues.java</file>
    <line>62</line>
    <description><![CDATA[
HtmlClues.java (<Source Code>/org/owasp/webgoat/lessons):62

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="62" classFQN="org.owasp.webgoat.lessons.HtmlClues" xFilePersistence="org.owasp.webgoat.lessons.HtmlClues"/>
  </finding>


  <finding id="3614" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.InsecureLogin</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>InsecureLogin</class>
    <file>InsecureLogin.java</file>
    <line>30</line>
    <description><![CDATA[
InsecureLogin.java (<Source Code>/org/owasp/webgoat/lessons):30

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="30" classFQN="org.owasp.webgoat.lessons.InsecureLogin" xFilePersistence="org.owasp.webgoat.lessons.InsecureLogin"/>
  </finding>


  <finding id="3611" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.LogSpoofing</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>LogSpoofing</class>
    <file>LogSpoofing.java</file>
    <line>60</line>
    <description><![CDATA[
LogSpoofing.java (<Source Code>/org/owasp/webgoat/lessons):60

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="60" classFQN="org.owasp.webgoat.lessons.LogSpoofing" xFilePersistence="org.owasp.webgoat.lessons.LogSpoofing"/>
  </finding>


  <finding id="3613" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin1</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin1</class>
    <file>MultiLevelLogin1.java</file>
    <line>61</line>
    <description><![CDATA[
MultiLevelLogin1.java (<Source Code>/org/owasp/webgoat/lessons):61

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="61" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin1" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin1"/>
  </finding>


  <finding id="3612" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin1</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin1</class>
    <file>MultiLevelLogin1.java</file>
    <line>204</line>
    <description><![CDATA[
MultiLevelLogin1.java (<Source Code>/org/owasp/webgoat/lessons):204

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'password'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="204" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin1" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin1"/>
  </finding>


  <finding id="3622" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin2</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin2</class>
    <file>MultiLevelLogin2.java</file>
    <line>61</line>
    <description><![CDATA[
MultiLevelLogin2.java (<Source Code>/org/owasp/webgoat/lessons):61

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="61" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin2" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin2"/>
  </finding>


  <finding id="3621" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin2</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin2</class>
    <file>MultiLevelLogin2.java</file>
    <line>216</line>
    <description><![CDATA[
MultiLevelLogin2.java (<Source Code>/org/owasp/webgoat/lessons):216

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'password'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="216" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin2" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin2"/>
  </finding>


  <finding id="3620" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SessionFixation</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SessionFixation</class>
    <file>SessionFixation.java</file>
    <line>69</line>
    <description><![CDATA[
SessionFixation.java (<Source Code>/org/owasp/webgoat/lessons):69

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="69" classFQN="org.owasp.webgoat.lessons.SessionFixation" xFilePersistence="org.owasp.webgoat.lessons.SessionFixation"/>
  </finding>


  <finding id="3627" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.UncheckedEmail</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>UncheckedEmail</class>
    <file>UncheckedEmail.java</file>
    <line>70</line>
    <description><![CDATA[
UncheckedEmail.java (<Source Code>/org/owasp/webgoat/lessons):70

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'YOUR_REAL_GMAIL_PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="70" classFQN="org.owasp.webgoat.lessons.UncheckedEmail" xFilePersistence="org.owasp.webgoat.lessons.UncheckedEmail"/>
  </finding>


  <finding id="3619" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakAuthenticationCookie</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakAuthenticationCookie</class>
    <file>WeakAuthenticationCookie.java</file>
    <line>71</line>
    <description><![CDATA[
WeakAuthenticationCookie.java (<Source Code>/org/owasp/webgoat/lessons):71

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="71" classFQN="org.owasp.webgoat.lessons.WeakAuthenticationCookie" xFilePersistence="org.owasp.webgoat.lessons.WeakAuthenticationCookie"/>
  </finding>


  <finding id="3624" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>65</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):65

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="65" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="3625" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.WebgoatContext</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>WebgoatContext</class>
    <file>WebgoatContext.java</file>
    <line>19</line>
    <description><![CDATA[
WebgoatContext.java (<Source Code>/org/owasp/webgoat/session):19

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'DATABASE_PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="19" classFQN="org.owasp.webgoat.session.WebgoatContext" xFilePersistence="org.owasp.webgoat.session.WebgoatContext"/>
  </finding>


  <finding id="3626" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSAXInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSAXInjection</class>
    <file>WsSAXInjection.java</file>
    <line>65</line>
    <description><![CDATA[
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):65

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="65" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
  </finding>


  <finding id="3623" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSAXInjection$PasswordChanger</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSAXInjection$PasswordChanger</class>
    <file>WsSAXInjection.java</file>
    <line>184</line>
    <description><![CDATA[
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):184

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD_TAG'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="184" classFQN="org.owasp.webgoat.lessons.WsSAXInjection$PasswordChanger" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection$PasswordChanger"/>
  </finding>


  <finding id="3616" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: password</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:password</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XPATHInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XPATHInjection</class>
    <file>XPATHInjection.java</file>
    <line>77</line>
    <description><![CDATA[
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):77

An identified special code for problem type 'Hard-Coded Credentials in Variables: password'.
Literal credential in field 'PASSWORD'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="77" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
  </finding>


  <finding id="3574" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>82</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):82

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USER_ROLE'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="82" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="3594" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AccessControlMatrix</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AccessControlMatrix</class>
    <file>AccessControlMatrix.java</file>
    <line>57</line>
    <description><![CDATA[
AccessControlMatrix.java (<Source Code>/org/owasp/webgoat/lessons):57

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="57" classFQN="org.owasp.webgoat.lessons.AccessControlMatrix" xFilePersistence="org.owasp.webgoat.lessons.AccessControlMatrix"/>
  </finding>


  <finding id="3575" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BackDoors</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BackDoors</class>
    <file>BackDoors.java</file>
    <line>61</line>
    <description><![CDATA[
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):61

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="61" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
  </finding>


  <finding id="3603" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BasicAuthentication</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BasicAuthentication</class>
    <file>BasicAuthentication.java</file>
    <line>59</line>
    <description><![CDATA[
BasicAuthentication.java (<Source Code>/org/owasp/webgoat/lessons):59

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'ORIGINAL_USER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="59" classFQN="org.owasp.webgoat.lessons.BasicAuthentication" xFilePersistence="org.owasp.webgoat.lessons.BasicAuthentication"/>
  </finding>


  <finding id="3606" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BypassHtmlFieldRestrictions</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BypassHtmlFieldRestrictions</class>
    <file>BypassHtmlFieldRestrictions.java</file>
    <line>63</line>
    <description><![CDATA[
BypassHtmlFieldRestrictions.java (<Source Code>/org/owasp/webgoat/lessons):63

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERID'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="63" classFQN="org.owasp.webgoat.lessons.BypassHtmlFieldRestrictions" xFilePersistence="org.owasp.webgoat.lessons.BypassHtmlFieldRestrictions"/>
  </finding>


  <finding id="3583" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>76</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):76

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USER_COOKIE'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="76" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="3584" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>111</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):111

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="111" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="3585" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>116</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):116

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="116" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="3582" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>123</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):123

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'user'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="123" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="3566" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>65</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):65

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="65" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="3570" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ForgotPassword</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ForgotPassword</class>
    <file>ForgotPassword.java</file>
    <line>62</line>
    <description><![CDATA[
ForgotPassword.java (<Source Code>/org/owasp/webgoat/lessons):62

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="62" classFQN="org.owasp.webgoat.lessons.ForgotPassword" xFilePersistence="org.owasp.webgoat.lessons.ForgotPassword"/>
  </finding>


  <finding id="3569" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ForgotPassword</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ForgotPassword</class>
    <file>ForgotPassword.java</file>
    <line>64</line>
    <description><![CDATA[
ForgotPassword.java (<Source Code>/org/owasp/webgoat/lessons):64

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME_RESPONSE'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="64" classFQN="org.owasp.webgoat.lessons.ForgotPassword" xFilePersistence="org.owasp.webgoat.lessons.ForgotPassword"/>
  </finding>


  <finding id="3568" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ForgotPassword</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ForgotPassword</class>
    <file>ForgotPassword.java</file>
    <line>230</line>
    <description><![CDATA[
ForgotPassword.java (<Source Code>/org/owasp/webgoat/lessons):230

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'username'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="230" classFQN="org.owasp.webgoat.lessons.ForgotPassword" xFilePersistence="org.owasp.webgoat.lessons.ForgotPassword"/>
  </finding>


  <finding id="3605" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.GoatHillsFinancial.GoatHillsFinancial</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.GoatHillsFinancial</package>
    <class>GoatHillsFinancial</class>
    <file>GoatHillsFinancial.java</file>
    <line>88</line>
    <description><![CDATA[
GoatHillsFinancial.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):88

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USER_ID'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="88" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.GoatHillsFinancial" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.GoatHillsFinancial"/>
  </finding>


  <finding id="3587" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HtmlClues</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HtmlClues</class>
    <file>HtmlClues.java</file>
    <line>67</line>
    <description><![CDATA[
HtmlClues.java (<Source Code>/org/owasp/webgoat/lessons):67

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="67" classFQN="org.owasp.webgoat.lessons.HtmlClues" xFilePersistence="org.owasp.webgoat.lessons.HtmlClues"/>
  </finding>


  <finding id="3581" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.InsecureLogin</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>InsecureLogin</class>
    <file>InsecureLogin.java</file>
    <line>29</line>
    <description><![CDATA[
InsecureLogin.java (<Source Code>/org/owasp/webgoat/lessons):29

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="29" classFQN="org.owasp.webgoat.lessons.InsecureLogin" xFilePersistence="org.owasp.webgoat.lessons.InsecureLogin"/>
  </finding>


  <finding id="3580" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.InsecureLogin</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>InsecureLogin</class>
    <file>InsecureLogin.java</file>
    <line>299</line>
    <description><![CDATA[
InsecureLogin.java (<Source Code>/org/owasp/webgoat/lessons):299

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'userDataStyle'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="299" classFQN="org.owasp.webgoat.lessons.InsecureLogin" xFilePersistence="org.owasp.webgoat.lessons.InsecureLogin"/>
  </finding>


  <finding id="3567" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.LogSpoofing</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>LogSpoofing</class>
    <file>LogSpoofing.java</file>
    <line>58</line>
    <description><![CDATA[
LogSpoofing.java (<Source Code>/org/owasp/webgoat/lessons):58

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="58" classFQN="org.owasp.webgoat.lessons.LogSpoofing" xFilePersistence="org.owasp.webgoat.lessons.LogSpoofing"/>
  </finding>


  <finding id="3578" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin1</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin1</class>
    <file>MultiLevelLogin1.java</file>
    <line>60</line>
    <description><![CDATA[
MultiLevelLogin1.java (<Source Code>/org/owasp/webgoat/lessons):60

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="60" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin1" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin1"/>
  </finding>


  <finding id="3579" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin1</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin1</class>
    <file>MultiLevelLogin1.java</file>
    <line>67</line>
    <description><![CDATA[
MultiLevelLogin1.java (<Source Code>/org/owasp/webgoat/lessons):67

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'LOGGEDINUSER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="67" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin1" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin1"/>
  </finding>


  <finding id="3576" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin1</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin1</class>
    <file>MultiLevelLogin1.java</file>
    <line>202</line>
    <description><![CDATA[
MultiLevelLogin1.java (<Source Code>/org/owasp/webgoat/lessons):202

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'user'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="202" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin1" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin1"/>
  </finding>


  <finding id="3577" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin1</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin1</class>
    <file>MultiLevelLogin1.java</file>
    <line>415</line>
    <description><![CDATA[
MultiLevelLogin1.java (<Source Code>/org/owasp/webgoat/lessons):415

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'userDataStyle'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="415" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin1" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin1"/>
  </finding>


  <finding id="3597" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin2</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin2</class>
    <file>MultiLevelLogin2.java</file>
    <line>60</line>
    <description><![CDATA[
MultiLevelLogin2.java (<Source Code>/org/owasp/webgoat/lessons):60

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="60" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin2" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin2"/>
  </finding>


  <finding id="3598" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin2</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin2</class>
    <file>MultiLevelLogin2.java</file>
    <line>63</line>
    <description><![CDATA[
MultiLevelLogin2.java (<Source Code>/org/owasp/webgoat/lessons):63

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'HIDDEN_USER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="63" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin2" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin2"/>
  </finding>


  <finding id="3599" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin2</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin2</class>
    <file>MultiLevelLogin2.java</file>
    <line>71</line>
    <description><![CDATA[
MultiLevelLogin2.java (<Source Code>/org/owasp/webgoat/lessons):71

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'LOGGEDINUSER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="71" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin2" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin2"/>
  </finding>


  <finding id="3595" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin2</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin2</class>
    <file>MultiLevelLogin2.java</file>
    <line>214</line>
    <description><![CDATA[
MultiLevelLogin2.java (<Source Code>/org/owasp/webgoat/lessons):214

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'user'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="214" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin2" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin2"/>
  </finding>


  <finding id="3596" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MultiLevelLogin2</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MultiLevelLogin2</class>
    <file>MultiLevelLogin2.java</file>
    <line>410</line>
    <description><![CDATA[
MultiLevelLogin2.java (<Source Code>/org/owasp/webgoat/lessons):410

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'userDataStyle'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="410" classFQN="org.owasp.webgoat.lessons.MultiLevelLogin2" xFilePersistence="org.owasp.webgoat.lessons.MultiLevelLogin2"/>
  </finding>


  <finding id="3588" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.admin.ReportCardScreen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.admin</package>
    <class>ReportCardScreen</class>
    <file>ReportCardScreen.java</file>
    <line>57</line>
    <description><![CDATA[
ReportCardScreen.java (<Source Code>/org/owasp/webgoat/lessons/admin):57

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="57" classFQN="org.owasp.webgoat.lessons.admin.ReportCardScreen" xFilePersistence="org.owasp.webgoat.lessons.admin.ReportCardScreen"/>
  </finding>


  <finding id="3592" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SessionFixation</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SessionFixation</class>
    <file>SessionFixation.java</file>
    <line>68</line>
    <description><![CDATA[
SessionFixation.java (<Source Code>/org/owasp/webgoat/lessons):68

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="68" classFQN="org.owasp.webgoat.lessons.SessionFixation" xFilePersistence="org.owasp.webgoat.lessons.SessionFixation"/>
  </finding>


  <finding id="3593" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SessionFixation</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SessionFixation</class>
    <file>SessionFixation.java</file>
    <line>71</line>
    <description><![CDATA[
SessionFixation.java (<Source Code>/org/owasp/webgoat/lessons):71

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'LOGGEDINUSER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="71" classFQN="org.owasp.webgoat.lessons.SessionFixation" xFilePersistence="org.owasp.webgoat.lessons.SessionFixation"/>
  </finding>


  <finding id="3591" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SessionFixation</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SessionFixation</class>
    <file>SessionFixation.java</file>
    <line>558</line>
    <description><![CDATA[
SessionFixation.java (<Source Code>/org/owasp/webgoat/lessons):558

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'userDataStyle'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="558" classFQN="org.owasp.webgoat.lessons.SessionFixation" xFilePersistence="org.owasp.webgoat.lessons.SessionFixation"/>
  </finding>


  <finding id="3589" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlAddData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlAddData</class>
    <file>SqlAddData.java</file>
    <line>60</line>
    <description><![CDATA[
SqlAddData.java (<Source Code>/org/owasp/webgoat/lessons):60

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERID'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="60" classFQN="org.owasp.webgoat.lessons.SqlAddData" xFilePersistence="org.owasp.webgoat.lessons.SqlAddData"/>
  </finding>


  <finding id="3571" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlModifyData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlModifyData</class>
    <file>SqlModifyData.java</file>
    <line>60</line>
    <description><![CDATA[
SqlModifyData.java (<Source Code>/org/owasp/webgoat/lessons):60

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERID'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="60" classFQN="org.owasp.webgoat.lessons.SqlModifyData" xFilePersistence="org.owasp.webgoat.lessons.SqlModifyData"/>
  </finding>


  <finding id="3572" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlModifyData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlModifyData</class>
    <file>SqlModifyData.java</file>
    <line>62</line>
    <description><![CDATA[
SqlModifyData.java (<Source Code>/org/owasp/webgoat/lessons):62

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'TARGET_USERID'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="62" classFQN="org.owasp.webgoat.lessons.SqlModifyData" xFilePersistence="org.owasp.webgoat.lessons.SqlModifyData"/>
  </finding>


  <finding id="3573" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlModifyData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlModifyData</class>
    <file>SqlModifyData.java</file>
    <line>63</line>
    <description><![CDATA[
SqlModifyData.java (<Source Code>/org/owasp/webgoat/lessons):63

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'NONTARGET_USERID'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="63" classFQN="org.owasp.webgoat.lessons.SqlModifyData" xFilePersistence="org.owasp.webgoat.lessons.SqlModifyData"/>
  </finding>


  <finding id="3602" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ThreadSafetyProblem</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ThreadSafetyProblem</class>
    <file>ThreadSafetyProblem.java</file>
    <line>57</line>
    <description><![CDATA[
ThreadSafetyProblem.java (<Source Code>/org/owasp/webgoat/lessons):57

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USER_NAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="57" classFQN="org.owasp.webgoat.lessons.ThreadSafetyProblem" xFilePersistence="org.owasp.webgoat.lessons.ThreadSafetyProblem"/>
  </finding>


  <finding id="3590" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakAuthenticationCookie</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakAuthenticationCookie</class>
    <file>WeakAuthenticationCookie.java</file>
    <line>76</line>
    <description><![CDATA[
WeakAuthenticationCookie.java (<Source Code>/org/owasp/webgoat/lessons):76

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="76" classFQN="org.owasp.webgoat.lessons.WeakAuthenticationCookie" xFilePersistence="org.owasp.webgoat.lessons.WeakAuthenticationCookie"/>
  </finding>


  <finding id="3600" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>70</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):70

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="70" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="3601" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.WebSession</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>WebSession</class>
    <file>WebSession.java</file>
    <line>69</line>
    <description><![CDATA[
WebSession.java (<Source Code>/org/owasp/webgoat/session):69

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'WEBGOAT_USER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="69" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
  </finding>


  <finding id="3604" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.WebgoatContext</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>WebgoatContext</class>
    <file>WebgoatContext.java</file>
    <line>17</line>
    <description><![CDATA[
WebgoatContext.java (<Source Code>/org/owasp/webgoat/session):17

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'DATABASE_USER'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="17" classFQN="org.owasp.webgoat.session.WebgoatContext" xFilePersistence="org.owasp.webgoat.session.WebgoatContext"/>
  </finding>


  <finding id="3586" kind="SPECIAL">
    <problemType>Hard-Coded Credentials in Variables: username</problemType>
    <problemTypeId>LiteralStringsInVariablesSearch:username</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XPATHInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XPATHInjection</class>
    <file>XPATHInjection.java</file>
    <line>75</line>
    <description><![CDATA[
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):75

An identified special code for problem type 'Hard-Coded Credentials in Variables: username'.
Literal credential in field 'USERNAME'

Information about matching pattern in special code kind not available.
]]></description>
    <node lineNo="75" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
  </finding>


  <finding id="3634" kind="SPECIAL">
    <problemType>Password in config file</problemType>
    <problemTypeId>RegexSearch:PasswordInConfigFile</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/CrossSiteScripting/Login.jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>Login.jsp</file>
    <line>26</line>
    <description><![CDATA[
Login.jsp (<Resources>/${INSTALL_DIR}/examples/webgoat/lessons/CrossSiteScripting):26

An identified special code for problem type 'Password in config file'.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/lessons/CrossSiteScripting/Login.jsp]]></originalAbsFile>
    <node lineNo="26" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/lessons/CrossSiteScripting/Login.jsp" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/CrossSiteScripting/Login.jsp"/>
  </finding>


  <finding id="3633" kind="SPECIAL">
    <problemType>Password in config file</problemType>
    <problemTypeId>RegexSearch:PasswordInConfigFile</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/DBCrossSiteScripting/Login.jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>Login.jsp</file>
    <line>26</line>
    <description><![CDATA[
Login.jsp (<Resources>/${INSTALL_DIR}/examples/webgoat/lessons/DBCrossSiteScripting):26

An identified special code for problem type 'Password in config file'.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/lessons/DBCrossSiteScripting/Login.jsp]]></originalAbsFile>
    <node lineNo="26" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/lessons/DBCrossSiteScripting/Login.jsp" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/DBCrossSiteScripting/Login.jsp"/>
  </finding>


  <finding id="3632" kind="SPECIAL">
    <problemType>Password in config file</problemType>
    <problemTypeId>RegexSearch:PasswordInConfigFile</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/DBSQLInjection/Login.jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>Login.jsp</file>
    <line>26</line>
    <description><![CDATA[
Login.jsp (<Resources>/${INSTALL_DIR}/examples/webgoat/lessons/DBSQLInjection):26

An identified special code for problem type 'Password in config file'.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/lessons/DBSQLInjection/Login.jsp]]></originalAbsFile>
    <node lineNo="26" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/lessons/DBSQLInjection/Login.jsp" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/DBSQLInjection/Login.jsp"/>
  </finding>


  <finding id="3636" kind="SPECIAL">
    <problemType>Password in config file</problemType>
    <problemTypeId>RegexSearch:PasswordInConfigFile</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/GoatHillsFinancial/Login.jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>Login.jsp</file>
    <line>26</line>
    <description><![CDATA[
Login.jsp (<Resources>/${INSTALL_DIR}/examples/webgoat/lessons/GoatHillsFinancial):26

An identified special code for problem type 'Password in config file'.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/lessons/GoatHillsFinancial/Login.jsp]]></originalAbsFile>
    <node lineNo="26" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/lessons/GoatHillsFinancial/Login.jsp" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/GoatHillsFinancial/Login.jsp"/>
  </finding>


  <finding id="3630" kind="SPECIAL">
    <problemType>Password in config file</problemType>
    <problemTypeId>RegexSearch:PasswordInConfigFile</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/RoleBasedAccessControl/Login.jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>Login.jsp</file>
    <line>26</line>
    <description><![CDATA[
Login.jsp (<Resources>/${INSTALL_DIR}/examples/webgoat/lessons/RoleBasedAccessControl):26

An identified special code for problem type 'Password in config file'.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/lessons/RoleBasedAccessControl/Login.jsp]]></originalAbsFile>
    <node lineNo="26" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/lessons/RoleBasedAccessControl/Login.jsp" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/RoleBasedAccessControl/Login.jsp"/>
  </finding>


  <finding id="3635" kind="SPECIAL">
    <problemType>Password in config file</problemType>
    <problemTypeId>RegexSearch:PasswordInConfigFile</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/SQLInjection/Login.jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>Login.jsp</file>
    <line>26</line>
    <description><![CDATA[
Login.jsp (<Resources>/${INSTALL_DIR}/examples/webgoat/lessons/SQLInjection):26

An identified special code for problem type 'Password in config file'.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/lessons/SQLInjection/Login.jsp]]></originalAbsFile>
    <node lineNo="26" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/lessons/SQLInjection/Login.jsp" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/lessons/SQLInjection/Login.jsp"/>
  </finding>


  <finding id="3631" kind="SPECIAL">
    <problemType>Password in config file</problemType>
    <problemTypeId>RegexSearch:PasswordInConfigFile</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/server-config.wsdd</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>server-config.wsdd</file>
    <line>6</line>
    <description><![CDATA[
server-config.wsdd (<Resources>/${INSTALL_DIR}/examples/webgoat/WEB-INF):6

An identified special code for problem type 'Password in config file'.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/server-config.wsdd]]></originalAbsFile>
    <node lineNo="6" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/server-config.wsdd" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/server-config.wsdd"/>
  </finding>


  <finding id="28" kind="SPECIAL">
    <problemType>Applied Java Reflection</problemType>
    <problemTypeId>SpecialMethodCall:AppliedReflection</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindScript</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindScript</class>
    <file>BlindScript.java</file>
    <line>279</line>
    <description><![CDATA[
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):279

An identified special code for problem type 'Applied Java Reflection'.

Matching pattern in special code kind 'Applied Java Reflection': java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])
]]></description>
    <node lineNo="279" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
  </finding>


  <finding id="26" kind="SPECIAL">
    <problemType>Applied Java Reflection</problemType>
    <problemTypeId>SpecialMethodCall:AppliedReflection</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindScript</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindScript</class>
    <file>BlindScript.java</file>
    <line>375</line>
    <description><![CDATA[
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):375

An identified special code for problem type 'Applied Java Reflection'.

Matching pattern in special code kind 'Applied Java Reflection': java.lang.Object java.lang.Class.newInstance()
]]></description>
    <node lineNo="375" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
  </finding>


  <finding id="27" kind="SPECIAL">
    <problemType>Applied Java Reflection</problemType>
    <problemTypeId>SpecialMethodCall:AppliedReflection</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Course</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Course</class>
    <file>Course.java</file>
    <line>355</line>
    <description><![CDATA[
Course.java (<Source Code>/org/owasp/webgoat/session):355

An identified special code for problem type 'Applied Java Reflection'.

Matching pattern in special code kind 'Applied Java Reflection': java.lang.Object java.lang.Class.newInstance()
]]></description>
    <node lineNo="355" classFQN="org.owasp.webgoat.session.Course" xFilePersistence="org.owasp.webgoat.session.Course"/>
  </finding>


  <finding id="31" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProject</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>323</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):323

An identified special code for problem type 'Cryptographic Algorithms Used in Project'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project': static javax.crypto.** javax.crypto.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="323" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="32" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProject</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>325</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):325

An identified special code for problem type 'Cryptographic Algorithms Used in Project'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project': static javax.crypto.** javax.crypto.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="325" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="29" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProject</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>368</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):368

An identified special code for problem type 'Cryptographic Algorithms Used in Project'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project': static javax.crypto.** javax.crypto.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="368" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="30" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProject</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>370</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):370

An identified special code for problem type 'Cryptographic Algorithms Used in Project'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project': static javax.crypto.** javax.crypto.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="370" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="33" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProject</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>465</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):465

An identified special code for problem type 'Cryptographic Algorithms Used in Project'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project': static java.security.** java.security.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="465" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="34" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProject</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>489</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):489

An identified special code for problem type 'Cryptographic Algorithms Used in Project'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project': static java.security.** java.security.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="489" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="35" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProject</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpOnly</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpOnly</class>
    <file>HttpOnly.java</file>
    <line>187</line>
    <description><![CDATA[
HttpOnly.java (<Source Code>/org/owasp/webgoat/lessons):187

An identified special code for problem type 'Cryptographic Algorithms Used in Project'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project': static java.security.** java.security.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="187" classFQN="org.owasp.webgoat.lessons.HttpOnly" xFilePersistence="org.owasp.webgoat.lessons.HttpOnly"/>
  </finding>


  <finding id="3" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project, Provider Not Specified</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProjectWOProvider</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>323</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):323

An identified special code for problem type 'Cryptographic Algorithms Used in Project, Provider Not Specified'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project, Provider Not Specified': static javax.crypto.** javax.crypto.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="323" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="4" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project, Provider Not Specified</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProjectWOProvider</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>325</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):325

An identified special code for problem type 'Cryptographic Algorithms Used in Project, Provider Not Specified'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project, Provider Not Specified': static javax.crypto.** javax.crypto.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="325" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="1" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project, Provider Not Specified</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProjectWOProvider</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>368</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):368

An identified special code for problem type 'Cryptographic Algorithms Used in Project, Provider Not Specified'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project, Provider Not Specified': static javax.crypto.** javax.crypto.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="368" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="2" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project, Provider Not Specified</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProjectWOProvider</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>370</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):370

An identified special code for problem type 'Cryptographic Algorithms Used in Project, Provider Not Specified'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project, Provider Not Specified': static javax.crypto.** javax.crypto.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="370" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="5" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project, Provider Not Specified</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProjectWOProvider</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>465</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):465

An identified special code for problem type 'Cryptographic Algorithms Used in Project, Provider Not Specified'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project, Provider Not Specified': static java.security.** java.security.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="465" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="6" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project, Provider Not Specified</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProjectWOProvider</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Encoding</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Encoding</class>
    <file>Encoding.java</file>
    <line>489</line>
    <description><![CDATA[
Encoding.java (<Source Code>/org/owasp/webgoat/lessons):489

An identified special code for problem type 'Cryptographic Algorithms Used in Project, Provider Not Specified'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project, Provider Not Specified': static java.security.** java.security.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="489" classFQN="org.owasp.webgoat.lessons.Encoding" xFilePersistence="org.owasp.webgoat.lessons.Encoding"/>
  </finding>


  <finding id="7" kind="SPECIAL">
    <problemType>Cryptographic Algorithms Used in Project, Provider Not Specified</problemType>
    <problemTypeId>SpecialMethodCall:EncryptionUsedInProjectWOProvider</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>1.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpOnly</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpOnly</class>
    <file>HttpOnly.java</file>
    <line>187</line>
    <description><![CDATA[
HttpOnly.java (<Source Code>/org/owasp/webgoat/lessons):187

An identified special code for problem type 'Cryptographic Algorithms Used in Project, Provider Not Specified'.

Matching pattern in special code kind 'Cryptographic Algorithms Used in Project, Provider Not Specified': static java.security.** java.security.**.getInstance(java.lang.String)
]]></description>
    <node lineNo="187" classFQN="org.owasp.webgoat.lessons.HttpOnly" xFilePersistence="org.owasp.webgoat.lessons.HttpOnly"/>
  </finding>


  <finding id="9" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.servlets.Controller</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.servlets</package>
    <class>Controller</class>
    <file>Controller.java</file>
    <line>72</line>
    <description><![CDATA[
Controller.java (<Source Code>/org/owasp/webgoat/servlets):72

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': void javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
]]></description>
    <node lineNo="72" classFQN="org.owasp.webgoat.servlets.Controller" xFilePersistence="org.owasp.webgoat.servlets.Controller"/>
  </finding>


  <finding id="10" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.CrossSiteScripting_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>CrossSiteScripting_jsp</class>
    <file>CrossSiteScripting_jsp.java</file>
    <line>65</line>
    <description><![CDATA[
CrossSiteScripting_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):65

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="65" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.CrossSiteScripting_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.CrossSiteScripting_jsp"/>
  </finding>


  <finding id="11" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.CrossSiteScripting_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>CrossSiteScripting_jsp</class>
    <file>CrossSiteScripting_jsp.java</file>
    <line>81</line>
    <description><![CDATA[
CrossSiteScripting_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):81

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="81" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.CrossSiteScripting_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.CrossSiteScripting_jsp"/>
  </finding>


  <finding id="12" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.DBCrossSiteScripting_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting</package>
    <class>DBCrossSiteScripting_jsp</class>
    <file>DBCrossSiteScripting_jsp.java</file>
    <line>65</line>
    <description><![CDATA[
DBCrossSiteScripting_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBCrossSiteScripting):65

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="65" classFQN="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.DBCrossSiteScripting_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.DBCrossSiteScripting_jsp"/>
  </finding>


  <finding id="13" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.DBCrossSiteScripting_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting</package>
    <class>DBCrossSiteScripting_jsp</class>
    <file>DBCrossSiteScripting_jsp.java</file>
    <line>81</line>
    <description><![CDATA[
DBCrossSiteScripting_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBCrossSiteScripting):81

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="81" classFQN="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.DBCrossSiteScripting_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.DBCrossSiteScripting_jsp"/>
  </finding>


  <finding id="14" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBSQLInjection.DBSQLInjection_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBSQLInjection</package>
    <class>DBSQLInjection_jsp</class>
    <file>DBSQLInjection_jsp.java</file>
    <line>65</line>
    <description><![CDATA[
DBSQLInjection_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBSQLInjection):65

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="65" classFQN="xanitizer.generatedFromJsp.lessons.DBSQLInjection.DBSQLInjection_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBSQLInjection.DBSQLInjection_jsp"/>
  </finding>


  <finding id="15" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBSQLInjection.DBSQLInjection_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBSQLInjection</package>
    <class>DBSQLInjection_jsp</class>
    <file>DBSQLInjection_jsp.java</file>
    <line>81</line>
    <description><![CDATA[
DBSQLInjection_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBSQLInjection):81

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="81" classFQN="xanitizer.generatedFromJsp.lessons.DBSQLInjection.DBSQLInjection_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBSQLInjection.DBSQLInjection_jsp"/>
  </finding>


  <finding id="16" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.GoatHillsFinancial_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial</package>
    <class>GoatHillsFinancial_jsp</class>
    <file>GoatHillsFinancial_jsp.java</file>
    <line>65</line>
    <description><![CDATA[
GoatHillsFinancial_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/GoatHillsFinancial):65

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="65" classFQN="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.GoatHillsFinancial_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.GoatHillsFinancial_jsp"/>
  </finding>


  <finding id="17" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.GoatHillsFinancial_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial</package>
    <class>GoatHillsFinancial_jsp</class>
    <file>GoatHillsFinancial_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
GoatHillsFinancial_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/GoatHillsFinancial):84

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.GoatHillsFinancial_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.GoatHillsFinancial_jsp"/>
  </finding>


  <finding id="18" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>184</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):184

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': void javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
]]></description>
    <node lineNo="184" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="8" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Interceptor</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Interceptor</class>
    <file>Interceptor.java</file>
    <line>129</line>
    <description><![CDATA[
Interceptor.java (<Source Code>/org/owasp/webgoat/util):129

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': void javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
]]></description>
    <node lineNo="129" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
  </finding>


  <finding id="20" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.RoleBasedAccessControl_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl</package>
    <class>RoleBasedAccessControl_jsp</class>
    <file>RoleBasedAccessControl_jsp.java</file>
    <line>65</line>
    <description><![CDATA[
RoleBasedAccessControl_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/RoleBasedAccessControl):65

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="65" classFQN="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.RoleBasedAccessControl_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.RoleBasedAccessControl_jsp"/>
  </finding>


  <finding id="21" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.RoleBasedAccessControl_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl</package>
    <class>RoleBasedAccessControl_jsp</class>
    <file>RoleBasedAccessControl_jsp.java</file>
    <line>81</line>
    <description><![CDATA[
RoleBasedAccessControl_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/RoleBasedAccessControl):81

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="81" classFQN="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.RoleBasedAccessControl_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.RoleBasedAccessControl_jsp"/>
  </finding>


  <finding id="22" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.SQLInjection.SQLInjection_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.SQLInjection</package>
    <class>SQLInjection_jsp</class>
    <file>SQLInjection_jsp.java</file>
    <line>65</line>
    <description><![CDATA[
SQLInjection_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/SQLInjection):65

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="65" classFQN="xanitizer.generatedFromJsp.lessons.SQLInjection.SQLInjection_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.SQLInjection.SQLInjection_jsp"/>
  </finding>


  <finding id="23" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.SQLInjection.SQLInjection_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.SQLInjection</package>
    <class>SQLInjection_jsp</class>
    <file>SQLInjection_jsp.java</file>
    <line>81</line>
    <description><![CDATA[
SQLInjection_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/SQLInjection):81

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="81" classFQN="xanitizer.generatedFromJsp.lessons.SQLInjection.SQLInjection_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.SQLInjection.SQLInjection_jsp"/>
  </finding>


  <finding id="19" kind="SPECIAL">
    <problemType>Java Servlet Forward and Include</problemType>
    <problemTypeId>SpecialMethodCall:JavaServletFindAndInclude</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Information</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>329</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):329

An identified special code for problem type 'Java Servlet Forward and Include'.

Matching pattern in special code kind 'Java Servlet Forward and Include': static void org.apache.jasper.runtime.JspRuntimeLibrary.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, javax.servlet.jsp.JspWriter, boolean)
]]></description>
    <node lineNo="329" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="24" kind="SPECIAL">
    <problemType>'java.util.Random' Used in Project</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SessionFixation</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SessionFixation</class>
    <file>SessionFixation.java</file>
    <line>72</line>
    <description><![CDATA[
SessionFixation.java (<Source Code>/org/owasp/webgoat/lessons):72

An identified special code for problem type ''java.util.Random' Used in Project'.

Matching pattern in special code kind ''java.util.Random' Used in Project': java.util.Random(long)
]]></description>
    <node lineNo="72" classFQN="org.owasp.webgoat.lessons.SessionFixation" xFilePersistence="org.owasp.webgoat.lessons.SessionFixation"/>
  </finding>


  <finding id="25" kind="SPECIAL">
    <problemType>'java.util.Random' Used in Project</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>77</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):77

An identified special code for problem type ''java.util.Random' Used in Project'.

Matching pattern in special code kind ''java.util.Random' Used in Project': static double java.lang.Math.random()
]]></description>
    <node lineNo="77" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="3629" kind="SPECIAL">
    <problemType>Application Server: error-page exception-type Configuration Wrong or Missing</problemType>
    <problemTypeId>XPathSearch:exceptionTypeJavaLangThrowableMissing</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>web.xml</file>
    <line>6</line>
    <description><![CDATA[
web.xml (<Resources>/${INSTALL_DIR}/examples/webgoat/WEB-INF):6

An identified special code for problem type 'Application Server: error-page exception-type Configuration Wrong or Missing'.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml]]></originalAbsFile>
    <node lineNo="6" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml"/>
  </finding>


  <finding id="3607" kind="SPECIAL">
    <problemType>Application Server: cookie-config in web.xml: Not Properly Configured</problemType>
    <problemTypeId>XPathSearch:sessionConfigWOHttpOnlyAndSecureInCookieConfig</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>web.xml</file>
    <line>276</line>
    <description><![CDATA[
web.xml (<Resources>/${INSTALL_DIR}/examples/webgoat/WEB-INF):276

An identified special code for problem type 'Application Server: cookie-config in web.xml: Not Properly Configured'.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml]]></originalAbsFile>
    <node lineNo="276" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml"/>
  </finding>


  <finding id="3609" kind="SPECIAL">
    <problemType>Application Server: tracking-mode in web.xml: Not Set to 'COOKIE'</problemType>
    <problemTypeId>XPathSearch:sessionConfigWOTrackingModeCookieConfig</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>web.xml</file>
    <line>276</line>
    <description><![CDATA[
web.xml (<Resources>/${INSTALL_DIR}/examples/webgoat/WEB-INF):276

An identified special code for problem type 'Application Server: tracking-mode in web.xml: Not Set to 'COOKIE''.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml]]></originalAbsFile>
    <node lineNo="276" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml"/>
  </finding>


  <finding id="3608" kind="SPECIAL">
    <problemType>Application Server Session-Timeout Too Large</problemType>
    <problemTypeId>XPathSearch:sessionTimeout</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Security: Special Code</category>
    <rating>7.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <file>web.xml</file>
    <line>278</line>
    <description><![CDATA[
web.xml (<Resources>/${INSTALL_DIR}/examples/webgoat/WEB-INF):278

An identified special code for problem type 'Application Server Session-Timeout Too Large'.

Information about matching pattern in special code kind not available.
]]></description>
    <originalAbsFile><![CDATA[
file:/C:/Users/nwe/.Xanitizer/XanitizerProject-webgoat/Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml]]></originalAbsFile>
    <node lineNo="278" classFQN="${PROJECT_DIR}/Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml" xFilePersistence="XanitizerPath:${PROJECT_DIR}Resources/${INSTALL_DIR}/examples/webgoat/WEB-INF/web.xml"/>
  </finding>


  <finding id="36" kind="PATH">
    <problemType>Command Injection</problemType>
    <problemTypeId>ci:CommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.92</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>107</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):107
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'Command Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'Command Injection': java.lang.Process java.lang.Runtime.exec(java.lang.String[])
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="107" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="37" kind="PATH">
    <problemType>Command Injection</problemType>
    <problemTypeId>ci:CommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.92</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>289</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):289
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'Command Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'Command Injection': java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="289" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="38" kind="PATH">
    <problemType>Command Injection</problemType>
    <problemTypeId>ci:CommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WSDLScanning</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WSDLScanning</class>
    <file>WSDLScanning.java</file>
    <line>148</line>
    <description><![CDATA[
WSDLScanning.java (<Source Code>/org/owasp/webgoat/lessons):148
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):581

An identified taint path for the problem type 'Command Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'Command Injection': void javax.xml.rpc.Call.setOperationName(javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="581" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="148" classFQN="org.owasp.webgoat.lessons.WSDLScanning" xFilePersistence="org.owasp.webgoat.lessons.WSDLScanning"/>
  </finding>


  <finding id="39" kind="PATH">
    <problemType>Command Injection</problemType>
    <problemTypeId>ci:CommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WSDLScanning</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WSDLScanning</class>
    <file>WSDLScanning.java</file>
    <line>153</line>
    <description><![CDATA[
WSDLScanning.java (<Source Code>/org/owasp/webgoat/lessons):153
	<-
WSDLScanning.java (<Source Code>/org/owasp/webgoat/lessons):153

An identified taint path for the problem type 'Command Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.http.HttpServletRequest.getContextPath()

Matching pattern in sink kind 'Command Injection': void javax.xml.rpc.Call.setTargetEndpointAddress(java.lang.String)
]]></description>
    <startNode lineNo="153" classFQN="org.owasp.webgoat.lessons.WSDLScanning" xFilePersistence="org.owasp.webgoat.lessons.WSDLScanning"/>
    <endNode lineNo="153" classFQN="org.owasp.webgoat.lessons.WSDLScanning" xFilePersistence="org.owasp.webgoat.lessons.WSDLScanning"/>
  </finding>


  <finding id="40" kind="PATH">
    <problemType>Log Injection</problemType>
    <problemTypeId>ci:LogInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>271</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):271
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):567

An identified taint path for the problem type 'Log Injection'
Matching pattern in source kind 'Servlet Request Input': java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in sink kind 'Log Injection': void javax.servlet.GenericServlet.log(java.lang.String)
]]></description>
    <startNode lineNo="567" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="271" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="41" kind="PATH">
    <problemType>Log Injection</problemType>
    <problemTypeId>ci:LogInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>271</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):271
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):581

An identified taint path for the problem type 'Log Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'Log Injection': void javax.servlet.GenericServlet.log(java.lang.String)
]]></description>
    <startNode lineNo="581" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="271" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="43" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>106</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):106
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="106" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="54" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>122</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):122
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="122" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="70" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>122</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):122
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'SQL Injection': int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="122" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="67" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>126</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):126
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="126" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="65" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>134</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):134
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'SQL Injection': int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="134" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="68" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.DOS_Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>DOS_Login</class>
    <file>DOS_Login.java</file>
    <line>146</line>
    <description><![CDATA[
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):146
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="146" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
  </finding>


  <finding id="64" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>150</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):150
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="150" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="66" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>463</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):463
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'SQL Injection': int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="463" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="69" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>471</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):471
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'SQL Injection': int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="471" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="49" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BackDoors</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BackDoors</class>
    <file>BackDoors.java</file>
    <line>141</line>
    <description><![CDATA[
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):141
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="141" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
  </finding>


  <finding id="50" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BackDoors</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BackDoors</class>
    <file>BackDoors.java</file>
    <line>148</line>
    <description><![CDATA[
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):148
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="148" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
  </finding>


  <finding id="60" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BackDoors</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BackDoors</class>
    <file>BackDoors.java</file>
    <line>180</line>
    <description><![CDATA[
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):180
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="180" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
  </finding>


  <finding id="53" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindNumericSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindNumericSqlInjection</class>
    <file>BlindNumericSqlInjection.java</file>
    <line>114</line>
    <description><![CDATA[
BlindNumericSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):114
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="114" classFQN="org.owasp.webgoat.lessons.BlindNumericSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.BlindNumericSqlInjection"/>
  </finding>


  <finding id="47" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindStringSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindStringSqlInjection</class>
    <file>BlindStringSqlInjection.java</file>
    <line>114</line>
    <description><![CDATA[
BlindStringSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):114
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="114" classFQN="org.owasp.webgoat.lessons.BlindStringSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.BlindStringSqlInjection"/>
  </finding>


  <finding id="45" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>131</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):131
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="131" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
  </finding>


  <finding id="55" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>166</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):166
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="166" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
  </finding>


  <finding id="56" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.ThreadSafetyProblem</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>ThreadSafetyProblem</class>
    <file>ThreadSafetyProblem.java</file>
    <line>98</line>
    <description><![CDATA[
ThreadSafetyProblem.java (<Source Code>/org/owasp/webgoat/lessons):98
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="98" classFQN="org.owasp.webgoat.lessons.ThreadSafetyProblem" xFilePersistence="org.owasp.webgoat.lessons.ThreadSafetyProblem"/>
  </finding>


  <finding id="57" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.admin.ViewDatabase</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.admin</package>
    <class>ViewDatabase</class>
    <file>ViewDatabase.java</file>
    <line>82</line>
    <description><![CDATA[
ViewDatabase.java (<Source Code>/org/owasp/webgoat/lessons/admin):82
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="82" classFQN="org.owasp.webgoat.lessons.admin.ViewDatabase" xFilePersistence="org.owasp.webgoat.lessons.admin.ViewDatabase"/>
  </finding>


  <finding id="51" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.ViewProfile</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>ViewProfile</class>
    <file>ViewProfile.java</file>
    <line>108</line>
    <description><![CDATA[
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):108
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="108" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
  </finding>


  <finding id="58" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.ViewProfile</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>ViewProfile</class>
    <file>ViewProfile.java</file>
    <line>157</line>
    <description><![CDATA[
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):157
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="157" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
  </finding>


  <finding id="42" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.20</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSqlInjection</class>
    <file>WsSqlInjection.java</file>
    <line>233</line>
    <description><![CDATA[
WsSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):233
	<-
WsSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):244

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request via Simulated Frameworks': java.lang.String[] org.owasp.webgoat.lessons.WsSqlInjection.getCreditCard(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="57" classFQN="xanitizer.frameworkSimulation.X_AXIS__FrameworkSimulation0000" xFilePersistence="xanitizer.frameworkSimulation.X_AXIS__FrameworkSimulation0000"/>
    <endNode lineNo="233" classFQN="org.owasp.webgoat.lessons.WsSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSqlInjection"/>
  </finding>


  <finding id="71" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>7.06</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>221</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):221
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):793

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="793" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="221" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="62" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.92</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.GoatHillsFinancial.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.GoatHillsFinancial</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>127</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):127
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="127" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
  </finding>


  <finding id="61" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.92</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>131</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):131
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="131" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
  </finding>


  <finding id="63" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.92</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.Login</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>Login</class>
    <file>Login.java</file>
    <line>166</line>
    <description><![CDATA[
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):166
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="166" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
  </finding>


  <finding id="52" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.48</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlNumericInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlNumericInjection</class>
    <file>SqlNumericInjection.java</file>
    <line>119</line>
    <description><![CDATA[
SqlNumericInjection.java (<Source Code>/org/owasp/webgoat/lessons):119
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="119" classFQN="org.owasp.webgoat.lessons.SqlNumericInjection" xFilePersistence="org.owasp.webgoat.lessons.SqlNumericInjection"/>
  </finding>


  <finding id="59" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlAddData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlAddData</class>
    <file>SqlAddData.java</file>
    <line>100</line>
    <description><![CDATA[
SqlAddData.java (<Source Code>/org/owasp/webgoat/lessons):100
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="100" classFQN="org.owasp.webgoat.lessons.SqlAddData" xFilePersistence="org.owasp.webgoat.lessons.SqlAddData"/>
  </finding>


  <finding id="46" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlModifyData</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlModifyData</class>
    <file>SqlModifyData.java</file>
    <line>108</line>
    <description><![CDATA[
SqlModifyData.java (<Source Code>/org/owasp/webgoat/lessons):108
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="108" classFQN="org.owasp.webgoat.lessons.SqlModifyData" xFilePersistence="org.owasp.webgoat.lessons.SqlModifyData"/>
  </finding>


  <finding id="44" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.35</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SqlStringInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SqlStringInjection</class>
    <file>SqlStringInjection.java</file>
    <line>101</line>
    <description><![CDATA[
SqlStringInjection.java (<Source Code>/org/owasp/webgoat/lessons):101
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="101" classFQN="org.owasp.webgoat.lessons.SqlStringInjection" xFilePersistence="org.owasp.webgoat.lessons.SqlStringInjection"/>
  </finding>


  <finding id="48" kind="PATH">
    <problemType>SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.23</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSqlInjection</class>
    <file>WsSqlInjection.java</file>
    <line>233</line>
    <description><![CDATA[
WsSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):233
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'SQL Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'SQL Injection': java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="233" classFQN="org.owasp.webgoat.lessons.WsSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSqlInjection"/>
  </finding>


  <finding id="72" kind="PATH">
    <problemType>XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax.instructor</package>
    <class>clientSideFiltering_005fi_jsp</class>
    <file>clientSideFiltering_005fi_jsp.java</file>
    <line>108</line>
    <description><![CDATA[
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):108
	<-
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):70

An identified taint path for the problem type 'XPath Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XPath Injection': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="70" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
    <endNode lineNo="108" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
  </finding>


  <finding id="73" kind="PATH">
    <problemType>XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XPATHInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XPATHInjection</class>
    <file>XPATHInjection.java</file>
    <line>145</line>
    <description><![CDATA[
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):145
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'XPath Injection'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XPath Injection': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="145" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
  </finding>


  <finding id="79" kind="PATH">
    <problemType>No HttpOnly Cookie</problemType>
    <problemTypeId>cook:HttpOnlyCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>172</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):172
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):171

An identified taint path for the problem type 'No HttpOnly Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="171" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="172" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="80" kind="PATH">
    <problemType>No HttpOnly Cookie</problemType>
    <problemTypeId>cook:HttpOnlyCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>195</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):195
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):194

An identified taint path for the problem type 'No HttpOnly Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="194" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="195" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="78" kind="PATH">
    <problemType>No HttpOnly Cookie</problemType>
    <problemTypeId>cook:HttpOnlyCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakAuthenticationCookie</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakAuthenticationCookie</class>
    <file>WeakAuthenticationCookie.java</file>
    <line>146</line>
    <description><![CDATA[
WeakAuthenticationCookie.java (<Source Code>/org/owasp/webgoat/lessons):146
	<-
WeakAuthenticationCookie.java (<Source Code>/org/owasp/webgoat/lessons):144

An identified taint path for the problem type 'No HttpOnly Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="144" classFQN="org.owasp.webgoat.lessons.WeakAuthenticationCookie" xFilePersistence="org.owasp.webgoat.lessons.WeakAuthenticationCookie"/>
    <endNode lineNo="146" classFQN="org.owasp.webgoat.lessons.WeakAuthenticationCookie" xFilePersistence="org.owasp.webgoat.lessons.WeakAuthenticationCookie"/>
  </finding>


  <finding id="77" kind="PATH">
    <problemType>No HttpOnly Cookie</problemType>
    <problemTypeId>cook:HttpOnlyCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>200</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):200
	<-
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):199

An identified taint path for the problem type 'No HttpOnly Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
    <endNode lineNo="200" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="74" kind="PATH">
    <problemType>No HttpOnly Cookie</problemType>
    <problemTypeId>cook:HttpOnlyCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.WebSession</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>WebSession</class>
    <file>WebSession.java</file>
    <line>276</line>
    <description><![CDATA[
WebSession.java (<Source Code>/org/owasp/webgoat/session):276
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):269

An identified taint path for the problem type 'No HttpOnly Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie[] javax.servlet.http.HttpServletRequest.getCookies()

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="269" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="276" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
  </finding>


  <finding id="75" kind="PATH">
    <problemType>No HttpOnly Cookie</problemType>
    <problemTypeId>cook:HttpOnlyCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpOnly</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpOnly</class>
    <file>HttpOnly.java</file>
    <line>215</line>
    <description><![CDATA[
HttpOnly.java (<Source Code>/org/owasp/webgoat/lessons):215
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):507

An identified taint path for the problem type 'No HttpOnly Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie[] javax.servlet.http.HttpServletRequest.getCookies()

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="507" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="215" classFQN="org.owasp.webgoat.lessons.HttpOnly" xFilePersistence="org.owasp.webgoat.lessons.HttpOnly"/>
  </finding>


  <finding id="76" kind="PATH">
    <problemType>No HttpOnly Cookie</problemType>
    <problemTypeId>cook:HttpOnlyCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpOnly</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpOnly</class>
    <file>HttpOnly.java</file>
    <line>233</line>
    <description><![CDATA[
HttpOnly.java (<Source Code>/org/owasp/webgoat/lessons):233
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):507

An identified taint path for the problem type 'No HttpOnly Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie[] javax.servlet.http.HttpServletRequest.getCookies()

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="507" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="233" classFQN="org.owasp.webgoat.lessons.HttpOnly" xFilePersistence="org.owasp.webgoat.lessons.HttpOnly"/>
  </finding>


  <finding id="86" kind="PATH">
    <problemType>Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>172</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):172
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):171

An identified taint path for the problem type 'Unsecured Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="171" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="172" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="87" kind="PATH">
    <problemType>Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>195</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):195
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):194

An identified taint path for the problem type 'Unsecured Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="194" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="195" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="85" kind="PATH">
    <problemType>Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakAuthenticationCookie</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakAuthenticationCookie</class>
    <file>WeakAuthenticationCookie.java</file>
    <line>146</line>
    <description><![CDATA[
WeakAuthenticationCookie.java (<Source Code>/org/owasp/webgoat/lessons):146
	<-
WeakAuthenticationCookie.java (<Source Code>/org/owasp/webgoat/lessons):144

An identified taint path for the problem type 'Unsecured Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="144" classFQN="org.owasp.webgoat.lessons.WeakAuthenticationCookie" xFilePersistence="org.owasp.webgoat.lessons.WeakAuthenticationCookie"/>
    <endNode lineNo="146" classFQN="org.owasp.webgoat.lessons.WeakAuthenticationCookie" xFilePersistence="org.owasp.webgoat.lessons.WeakAuthenticationCookie"/>
  </finding>


  <finding id="84" kind="PATH">
    <problemType>Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WeakSessionID</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WeakSessionID</class>
    <file>WeakSessionID.java</file>
    <line>200</line>
    <description><![CDATA[
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):200
	<-
WeakSessionID.java (<Source Code>/org/owasp/webgoat/lessons):199

An identified taint path for the problem type 'Unsecured Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
    <endNode lineNo="200" classFQN="org.owasp.webgoat.lessons.WeakSessionID" xFilePersistence="org.owasp.webgoat.lessons.WeakSessionID"/>
  </finding>


  <finding id="81" kind="PATH">
    <problemType>Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.WebSession</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>WebSession</class>
    <file>WebSession.java</file>
    <line>276</line>
    <description><![CDATA[
WebSession.java (<Source Code>/org/owasp/webgoat/session):276
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):269

An identified taint path for the problem type 'Unsecured Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie[] javax.servlet.http.HttpServletRequest.getCookies()

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="269" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="276" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
  </finding>


  <finding id="82" kind="PATH">
    <problemType>Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpOnly</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpOnly</class>
    <file>HttpOnly.java</file>
    <line>215</line>
    <description><![CDATA[
HttpOnly.java (<Source Code>/org/owasp/webgoat/lessons):215
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):507

An identified taint path for the problem type 'Unsecured Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie[] javax.servlet.http.HttpServletRequest.getCookies()

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="507" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="215" classFQN="org.owasp.webgoat.lessons.HttpOnly" xFilePersistence="org.owasp.webgoat.lessons.HttpOnly"/>
  </finding>


  <finding id="83" kind="PATH">
    <problemType>Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpOnly</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpOnly</class>
    <file>HttpOnly.java</file>
    <line>233</line>
    <description><![CDATA[
HttpOnly.java (<Source Code>/org/owasp/webgoat/lessons):233
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):507

An identified taint path for the problem type 'Unsecured Cookie'
Matching pattern in source kind 'Cookies': javax.servlet.http.Cookie[] javax.servlet.http.HttpServletRequest.getCookies()

Matching pattern in sink kind 'Cookies': void javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="507" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="233" classFQN="org.owasp.webgoat.lessons.HttpOnly" xFilePersistence="org.owasp.webgoat.lessons.HttpOnly"/>
  </finding>


  <finding id="88" kind="PATH">
    <problemType>Hard-Coded Credentials</problemType>
    <problemTypeId>hcc:HardCodedCredentials</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.DatabaseUtilities</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>DatabaseUtilities</class>
    <file>DatabaseUtilities.java</file>
    <line>112</line>
    <description><![CDATA[
DatabaseUtilities.java (<Source Code>/org/owasp/webgoat/session):112
	<-
DatabaseUtilities.java (<Source Code>/org/owasp/webgoat/session):112

An identified taint path for the problem type 'Hard-Coded Credentials'
Matching pattern in source kind 'Hard-Coded Credentials': ** **.getConnection(java.lang.String, java.lang.String, java.lang.String)

Matching pattern in sink kind 'Hard-Coded Credentials': ** **.getConnection(java.lang.String, java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.session.DatabaseUtilities" xFilePersistence="org.owasp.webgoat.session.DatabaseUtilities"/>
    <endNode lineNo="112" classFQN="org.owasp.webgoat.session.DatabaseUtilities" xFilePersistence="org.owasp.webgoat.session.DatabaseUtilities"/>
  </finding>


  <finding id="91" kind="PATH">
    <problemType>Hard-Coded Credentials</problemType>
    <problemTypeId>hcc:HardCodedCredentials</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>8.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WSDLScanning</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WSDLScanning</class>
    <file>WSDLScanning.java</file>
    <line>152</line>
    <description><![CDATA[
WSDLScanning.java (<Source Code>/org/owasp/webgoat/lessons):152
	<-
WSDLScanning.java (<Source Code>/org/owasp/webgoat/lessons):152

An identified taint path for the problem type 'Hard-Coded Credentials'
Matching pattern in source kind 'Hard-Coded Credentials': ** **.setPassword(java.lang.String)

Matching pattern in sink kind 'Hard-Coded Credentials': ** **.setPassword(java.lang.String)
]]></description>
    <startNode lineNo="152" classFQN="org.owasp.webgoat.lessons.WSDLScanning" xFilePersistence="org.owasp.webgoat.lessons.WSDLScanning"/>
    <endNode lineNo="152" classFQN="org.owasp.webgoat.lessons.WSDLScanning" xFilePersistence="org.owasp.webgoat.lessons.WSDLScanning"/>
  </finding>


  <finding id="89" kind="PATH">
    <problemType>Hard-Coded Credentials</problemType>
    <problemTypeId>hcc:HardCodedCredentials</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.DatabaseUtilities</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>DatabaseUtilities</class>
    <file>DatabaseUtilities.java</file>
    <line>112</line>
    <description><![CDATA[
DatabaseUtilities.java (<Source Code>/org/owasp/webgoat/session):112
	<-
DatabaseUtilities.java (<Source Code>/org/owasp/webgoat/session):112

An identified taint path for the problem type 'Hard-Coded Credentials'
Matching pattern in source kind 'Hard-Coded Credentials': ** **.getConnection(java.lang.String, java.lang.String, java.lang.String)

Matching pattern in sink kind 'Hard-Coded Credentials': ** **.getConnection(java.lang.String, java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.session.DatabaseUtilities" xFilePersistence="org.owasp.webgoat.session.DatabaseUtilities"/>
    <endNode lineNo="112" classFQN="org.owasp.webgoat.session.DatabaseUtilities" xFilePersistence="org.owasp.webgoat.session.DatabaseUtilities"/>
  </finding>


  <finding id="90" kind="PATH">
    <problemType>Hard-Coded Credentials</problemType>
    <problemTypeId>hcc:HardCodedCredentials</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WSDLScanning</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WSDLScanning</class>
    <file>WSDLScanning.java</file>
    <line>151</line>
    <description><![CDATA[
WSDLScanning.java (<Source Code>/org/owasp/webgoat/lessons):151
	<-
WSDLScanning.java (<Source Code>/org/owasp/webgoat/lessons):151

An identified taint path for the problem type 'Hard-Coded Credentials'
Matching pattern in source kind 'Hard-Coded Credentials': ** **.setUser?ame*(java.lang.String)

Matching pattern in sink kind 'Hard-Coded Credentials': ** **.setUser?ame*(java.lang.String)
]]></description>
    <startNode lineNo="151" classFQN="org.owasp.webgoat.lessons.WSDLScanning" xFilePersistence="org.owasp.webgoat.lessons.WSDLScanning"/>
    <endNode lineNo="151" classFQN="org.owasp.webgoat.lessons.WSDLScanning" xFilePersistence="org.owasp.webgoat.lessons.WSDLScanning"/>
  </finding>


  <finding id="95" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>eval_jsp</class>
    <file>eval_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
eval_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):98
	<-
eval_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):69

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="69" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp"/>
  </finding>


  <finding id="136" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>590</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):590
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):151

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'Privacy Leak': java.net.DatagramPacket(byte[], int)
]]></description>
    <startNode lineNo="151" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="590" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="92" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SoapRequest</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SoapRequest</class>
    <file>SoapRequest.java</file>
    <line>433</line>
    <description><![CDATA[
SoapRequest.java (<Source Code>/org/owasp/webgoat/lessons):433
	<-
SoapRequest.java (<Source Code>/org/owasp/webgoat/lessons):423

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.lessons.SoapRequest.getResults(int, java.lang.String)

Matching pattern in sink kind 'Web API Output via Simulated Framework': java.lang.String org.owasp.webgoat.lessons.SoapRequest.getCreditCard(int)
]]></description>
    <startNode lineNo="423" classFQN="org.owasp.webgoat.lessons.SoapRequest" xFilePersistence="org.owasp.webgoat.lessons.SoapRequest"/>
    <endNode lineNo="41" classFQN="xanitizer.frameworkSimulation.X_AXIS__FrameworkSimulation0000" xFilePersistence="xanitizer.frameworkSimulation.X_AXIS__FrameworkSimulation0000"/>
  </finding>


  <finding id="93" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WSDLScanning</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WSDLScanning</class>
    <file>WSDLScanning.java</file>
    <line>286</line>
    <description><![CDATA[
WSDLScanning.java (<Source Code>/org/owasp/webgoat/lessons):286
	<-
WSDLScanning.java (<Source Code>/org/owasp/webgoat/lessons):282

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.lessons.WSDLScanning.getResults(int, java.lang.String)

Matching pattern in sink kind 'Web API Output via Simulated Framework': java.lang.String org.owasp.webgoat.lessons.WSDLScanning.getCreditCard(int)
]]></description>
    <startNode lineNo="282" classFQN="org.owasp.webgoat.lessons.WSDLScanning" xFilePersistence="org.owasp.webgoat.lessons.WSDLScanning"/>
    <endNode lineNo="24" classFQN="xanitizer.frameworkSimulation.X_AXIS__FrameworkSimulation0000" xFilePersistence="xanitizer.frameworkSimulation.X_AXIS__FrameworkSimulation0000"/>
  </finding>


  <finding id="94" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSqlInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSqlInjection</class>
    <file>WsSqlInjection.java</file>
    <line>263</line>
    <description><![CDATA[
WsSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):263
	<-
WsSqlInjection.java (<Source Code>/org/owasp/webgoat/lessons):261

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'Web API Output via Simulated Framework': java.lang.String[] org.owasp.webgoat.lessons.WsSqlInjection.getCreditCard(java.lang.String)
]]></description>
    <startNode lineNo="261" classFQN="org.owasp.webgoat.lessons.WsSqlInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSqlInjection"/>
    <endNode lineNo="57" classFQN="xanitizer.frameworkSimulation.X_AXIS__FrameworkSimulation0000" xFilePersistence="xanitizer.frameworkSimulation.X_AXIS__FrameworkSimulation0000"/>
  </finding>


  <finding id="105" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
UpdateProfile.java (<Source Code>/org/owasp/webgoat/lessons/DBCrossSiteScripting):79

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="79" classFQN="org.owasp.webgoat.lessons.DBCrossSiteScripting.UpdateProfile" xFilePersistence="org.owasp.webgoat.lessons.DBCrossSiteScripting.UpdateProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="104" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
UpdateProfile.java (<Source Code>/org/owasp/webgoat/lessons/DBCrossSiteScripting):79

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="79" classFQN="org.owasp.webgoat.lessons.DBCrossSiteScripting.UpdateProfile" xFilePersistence="org.owasp.webgoat.lessons.DBCrossSiteScripting.UpdateProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="115" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.91</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):165

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': ** **.get*Pass?ord()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="165" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="129" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.91</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
UpdateProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):127

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="127" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.UpdateProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.UpdateProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="128" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.91</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
UpdateProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):127

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="127" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.UpdateProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.UpdateProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="114" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.66</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):165

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': ** **.get*Pass?ord()

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="165" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="109" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.46</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):86

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="86" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="110" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.46</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
JavaScriptValidation.java (<Source Code>/org/owasp/webgoat/lessons):109

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="109" classFQN="org.owasp.webgoat.lessons.JavaScriptValidation" xFilePersistence="org.owasp.webgoat.lessons.JavaScriptValidation"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="101" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.46</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):131

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="131" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="113" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
ReflectedXSS.java (<Source Code>/org/owasp/webgoat/lessons):76

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="76" classFQN="org.owasp.webgoat.lessons.ReflectedXSS" xFilePersistence="org.owasp.webgoat.lessons.ReflectedXSS"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="97" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
TraceXSS.java (<Source Code>/org/owasp/webgoat/lessons):75

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="75" classFQN="org.owasp.webgoat.lessons.TraceXSS" xFilePersistence="org.owasp.webgoat.lessons.TraceXSS"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="108" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.24</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
DOS_Login.java (<Source Code>/org/owasp/webgoat/lessons):86

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="86" classFQN="org.owasp.webgoat.lessons.DOS_Login" xFilePersistence="org.owasp.webgoat.lessons.DOS_Login"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="111" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.24</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
JavaScriptValidation.java (<Source Code>/org/owasp/webgoat/lessons):109

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="109" classFQN="org.owasp.webgoat.lessons.JavaScriptValidation" xFilePersistence="org.owasp.webgoat.lessons.JavaScriptValidation"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="100" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.24</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):131

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="131" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="144" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):108

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="108" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="142" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):99

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="99" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="138" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):226

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="226" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="112" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.11</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
ReflectedXSS.java (<Source Code>/org/owasp/webgoat/lessons):76

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="76" classFQN="org.owasp.webgoat.lessons.ReflectedXSS" xFilePersistence="org.owasp.webgoat.lessons.ReflectedXSS"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="96" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.11</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
TraceXSS.java (<Source Code>/org/owasp/webgoat/lessons):75

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="75" classFQN="org.owasp.webgoat.lessons.TraceXSS" xFilePersistence="org.owasp.webgoat.lessons.TraceXSS"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="103" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.07</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
UpdateProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):73

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getStringParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="73" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.UpdateProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.UpdateProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="107" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.07</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
UpdateProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):76

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getStringParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="76" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.UpdateProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.UpdateProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="102" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.07</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
UpdateProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):73

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getStringParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="73" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.UpdateProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.UpdateProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="106" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.07</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
UpdateProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):76

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getStringParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="76" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.UpdateProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.UpdateProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="146" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.07</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
ClientSideValidation.java (<Source Code>/org/owasp/webgoat/lessons):192

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="192" classFQN="org.owasp.webgoat.lessons.ClientSideValidation" xFilePersistence="org.owasp.webgoat.lessons.ClientSideValidation"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="119" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="125" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="133" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="121" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="127" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="123" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="135" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="131" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="117" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="118" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="124" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="132" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="120" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="126" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="122" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="134" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="130" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="116" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="143" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):108

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="108" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="141" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):99

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="99" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="137" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):226

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="226" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="99" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):133

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="133" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="140" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="139" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="145" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.87</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
ClientSideValidation.java (<Source Code>/org/owasp/webgoat/lessons):192

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="192" classFQN="org.owasp.webgoat.lessons.ClientSideValidation" xFilePersistence="org.owasp.webgoat.lessons.ClientSideValidation"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="98" kind="PATH">
    <problemType>Privacy Leak</problemType>
    <problemTypeId>pl:PrivacyLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):133

An identified taint path for the problem type 'Privacy Leak'
Matching pattern in source kind 'Privacy Leak': java.lang.String org.owasp.webgoat.session.ParameterParser.getRawParameter(java.lang.String, java.lang.String)

Matching pattern in sink kind 'System Output': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="133" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="152" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>374</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):374
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'Manipulated File System Access': java.io.FileReader(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="374" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="155" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>412</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):412
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'Manipulated File System Access': java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="412" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="156" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>100</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):100
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'Manipulated File System Access': java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="100" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="154" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.MaliciousFileExecution</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>MaliciousFileExecution</class>
    <file>MaliciousFileExecution.java</file>
    <line>130</line>
    <description><![CDATA[
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):130
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'Manipulated File System Access': java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="130" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
  </finding>


  <finding id="148" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CommandInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>CommandInjection</class>
    <file>CommandInjection.java</file>
    <line>143</line>
    <description><![CDATA[
CommandInjection.java (<Source Code>/org/owasp/webgoat/lessons):143
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'Manipulated File System Access': java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="143" classFQN="org.owasp.webgoat.lessons.CommandInjection" xFilePersistence="org.owasp.webgoat.lessons.CommandInjection"/>
  </finding>


  <finding id="150" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CommandInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>CommandInjection</class>
    <file>CommandInjection.java</file>
    <line>150</line>
    <description><![CDATA[
CommandInjection.java (<Source Code>/org/owasp/webgoat/lessons):150
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'Manipulated File System Access': java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="150" classFQN="org.owasp.webgoat.lessons.CommandInjection" xFilePersistence="org.owasp.webgoat.lessons.CommandInjection"/>
  </finding>


  <finding id="149" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.PathBasedAccessControl</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>PathBasedAccessControl</class>
    <file>PathBasedAccessControl.java</file>
    <line>129</line>
    <description><![CDATA[
PathBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons):129
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'Manipulated File System Access': java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="129" classFQN="org.owasp.webgoat.lessons.PathBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.PathBasedAccessControl"/>
  </finding>


  <finding id="151" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.61</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.LessonTracker</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>LessonTracker</class>
    <file>LessonTracker.java</file>
    <line>350</line>
    <description><![CDATA[
LessonTracker.java (<Source Code>/org/owasp/webgoat/session):350
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'Manipulated File System Access': java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="350" classFQN="org.owasp.webgoat.session.LessonTracker" xFilePersistence="org.owasp.webgoat.session.LessonTracker"/>
  </finding>


  <finding id="153" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.52</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.LessonTracker</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>LessonTracker</class>
    <file>LessonTracker.java</file>
    <line>203</line>
    <description><![CDATA[
LessonTracker.java (<Source Code>/org/owasp/webgoat/session):203
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'Manipulated File System Access': java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="203" classFQN="org.owasp.webgoat.session.LessonTracker" xFilePersistence="org.owasp.webgoat.session.LessonTracker"/>
  </finding>


  <finding id="160" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.34</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.LessonTracker</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>LessonTracker</class>
    <file>LessonTracker.java</file>
    <line>203</line>
    <description><![CDATA[
LessonTracker.java (<Source Code>/org/owasp/webgoat/session):203
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):567

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in sink kind 'Manipulated File System Access': java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="567" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="203" classFQN="org.owasp.webgoat.session.LessonTracker" xFilePersistence="org.owasp.webgoat.session.LessonTracker"/>
  </finding>


  <finding id="147" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.34</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.LessonTracker</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>LessonTracker</class>
    <file>LessonTracker.java</file>
    <line>203</line>
    <description><![CDATA[
LessonTracker.java (<Source Code>/org/owasp/webgoat/session):203
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'Manipulated File System Access': java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="203" classFQN="org.owasp.webgoat.session.LessonTracker" xFilePersistence="org.owasp.webgoat.session.LessonTracker"/>
  </finding>


  <finding id="161" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindScript</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindScript</class>
    <file>BlindScript.java</file>
    <line>160</line>
    <description><![CDATA[
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):160
	<-
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):158

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Property and Environment Input': static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in sink kind 'Manipulated File System Access': java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="158" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
    <endNode lineNo="160" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
  </finding>


  <finding id="159" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.66</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.CrossSiteScripting</package>
    <class>CrossSiteScripting</class>
    <file>CrossSiteScripting.java</file>
    <line>118</line>
    <description><![CDATA[
CrossSiteScripting.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):118
	<-
LessonTracker.java (<Source Code>/org/owasp/webgoat/session):204

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Property and Environment Input': void java.util.Properties.load(java.io.InputStream)

Matching pattern in sink kind 'Manipulated File System Access': java.io.FileReader(java.lang.String)
]]></description>
    <startNode lineNo="204" classFQN="org.owasp.webgoat.session.LessonTracker" xFilePersistence="org.owasp.webgoat.session.LessonTracker"/>
    <endNode lineNo="118" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting"/>
  </finding>


  <finding id="157" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.66</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.RoleBasedAccessControl</package>
    <class>RoleBasedAccessControl</class>
    <file>RoleBasedAccessControl.java</file>
    <line>190</line>
    <description><![CDATA[
RoleBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):190
	<-
LessonTracker.java (<Source Code>/org/owasp/webgoat/session):204

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Property and Environment Input': void java.util.Properties.load(java.io.InputStream)

Matching pattern in sink kind 'Manipulated File System Access': java.io.FileReader(java.lang.String)
]]></description>
    <startNode lineNo="204" classFQN="org.owasp.webgoat.session.LessonTracker" xFilePersistence="org.owasp.webgoat.session.LessonTracker"/>
    <endNode lineNo="190" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl"/>
  </finding>


  <finding id="158" kind="PATH">
    <problemType>Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.66</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.SQLInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>SQLInjection</class>
    <file>SQLInjection.java</file>
    <line>261</line>
    <description><![CDATA[
SQLInjection.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):261
	<-
LessonTracker.java (<Source Code>/org/owasp/webgoat/session):204

An identified taint path for the problem type 'Manipulated File System Access'
Matching pattern in source kind 'Property and Environment Input': void java.util.Properties.load(java.io.InputStream)

Matching pattern in sink kind 'Manipulated File System Access': java.io.FileReader(java.lang.String)
]]></description>
    <startNode lineNo="204" classFQN="org.owasp.webgoat.session.LessonTracker" xFilePersistence="org.owasp.webgoat.session.LessonTracker"/>
    <endNode lineNo="261" classFQN="org.owasp.webgoat.lessons.SQLInjection.SQLInjection" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.SQLInjection"/>
  </finding>


  <finding id="162" kind="PATH">
    <problemType>Response Header Injection</problemType>
    <problemTypeId>rhi:ResponseHeaderInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.WebSession</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>WebSession</class>
    <file>WebSession.java</file>
    <line>276</line>
    <description><![CDATA[
WebSession.java (<Source Code>/org/owasp/webgoat/session):276
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):269

An identified taint path for the problem type 'Response Header Injection'
Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'Response Header Injection': void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="269" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="276" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
  </finding>


  <finding id="163" kind="PATH">
    <problemType>Response Header Injection</problemType>
    <problemTypeId>rhi:ResponseHeaderInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpOnly</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpOnly</class>
    <file>HttpOnly.java</file>
    <line>215</line>
    <description><![CDATA[
HttpOnly.java (<Source Code>/org/owasp/webgoat/lessons):215
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):507

An identified taint path for the problem type 'Response Header Injection'
Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'Response Header Injection': void javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="507" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="215" classFQN="org.owasp.webgoat.lessons.HttpOnly" xFilePersistence="org.owasp.webgoat.lessons.HttpOnly"/>
  </finding>


  <finding id="164" kind="PATH">
    <problemType>Response Header Injection</problemType>
    <problemTypeId>rhi:ResponseHeaderInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.HttpOnly</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>HttpOnly</class>
    <file>HttpOnly.java</file>
    <line>233</line>
    <description><![CDATA[
HttpOnly.java (<Source Code>/org/owasp/webgoat/lessons):233
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):507

An identified taint path for the problem type 'Response Header Injection'
Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'Response Header Injection': void javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="507" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="233" classFQN="org.owasp.webgoat.lessons.HttpOnly" xFilePersistence="org.owasp.webgoat.lessons.HttpOnly"/>
  </finding>


  <finding id="200" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>418</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):418
	<-
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):418

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="418" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
    <endNode lineNo="418" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="198" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>420</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):420
	<-
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):418

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="418" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
    <endNode lineNo="420" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="195" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>511</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):511
	<-
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):511

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="511" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
    <endNode lineNo="511" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="196" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>519</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):519
	<-
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):511

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="511" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
    <endNode lineNo="519" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="187" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>551</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):551
	<-
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):551

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="551" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
    <endNode lineNo="551" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="186" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>552</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):552
	<-
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):551

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="551" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
    <endNode lineNo="552" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="210" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindScript</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindScript</class>
    <file>BlindScript.java</file>
    <line>179</line>
    <description><![CDATA[
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):179
	<-
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):178

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="178" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
    <endNode lineNo="179" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
  </finding>


  <finding id="212" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindScript</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindScript</class>
    <file>BlindScript.java</file>
    <line>185</line>
    <description><![CDATA[
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):185
	<-
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):183

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="183" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
    <endNode lineNo="185" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
  </finding>


  <finding id="211" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindScript</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindScript</class>
    <file>BlindScript.java</file>
    <line>190</line>
    <description><![CDATA[
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):190
	<-
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):178

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="178" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
    <endNode lineNo="190" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
  </finding>


  <finding id="213" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.BlindScript</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>BlindScript</class>
    <file>BlindScript.java</file>
    <line>190</line>
    <description><![CDATA[
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):190
	<-
BlindScript.java (<Source Code>/org/owasp/webgoat/lessons):183

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="183" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
    <endNode lineNo="190" classFQN="org.owasp.webgoat.lessons.BlindScript" xFilePersistence="org.owasp.webgoat.lessons.BlindScript"/>
  </finding>


  <finding id="223" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>374</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):374
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):374

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="374" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="374" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="225" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>375</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):375
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):375

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="375" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="375" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="217" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>414</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):414
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):413

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="413" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="414" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="221" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>414</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):414
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):414

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="414" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="414" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="218" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>418</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):418
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):413

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="413" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="418" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="219" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>418</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):418
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):414

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="414" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="418" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="190" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.CrossSiteScripting</package>
    <class>CrossSiteScripting</class>
    <file>CrossSiteScripting.java</file>
    <line>118</line>
    <description><![CDATA[
CrossSiteScripting.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):118
	<-
CrossSiteScripting.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):118

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="118" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting"/>
    <endNode lineNo="118" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting"/>
  </finding>


  <finding id="234" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>129</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):129
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):112

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="129" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="233" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>137</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):137
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):112

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="137" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="227" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>168</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):168
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):110

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="110" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="168" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="226" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>173</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):173
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):110

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="110" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="173" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="230" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>173</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):173
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):111

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="111" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="173" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="232" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>212</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):212
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):111

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="111" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="212" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="229" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>217</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):217
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):111

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="111" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="217" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="228" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>239</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):239
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):110

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="110" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="239" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="231" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>239</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):239
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):111

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="111" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="239" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="235" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>239</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):239
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):112

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="239" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="176" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>311</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):311
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):294

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="294" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="311" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="175" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>319</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):319
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):294

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="294" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="319" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="169" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>350</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):350
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):292

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="292" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="350" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="168" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>355</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):355
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):292

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="292" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="355" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="171" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>355</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):355
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):293

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="293" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="355" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="173" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>394</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):394
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):293

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="293" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="394" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="172" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>399</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):399
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):293

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="293" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="399" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="170" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>421</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):421
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):292

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="292" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="421" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="174" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>421</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):421
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):293

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="293" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="421" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="177" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Exec</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Exec</class>
    <file>Exec.java</file>
    <line>421</line>
    <description><![CDATA[
Exec.java (<Source Code>/org/owasp/webgoat/util):421
	<-
Exec.java (<Source Code>/org/owasp/webgoat/util):294

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="294" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
    <endNode lineNo="421" classFQN="org.owasp.webgoat.util.Exec" xFilePersistence="org.owasp.webgoat.util.Exec"/>
  </finding>


  <finding id="178" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Interceptor</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Interceptor</class>
    <file>Interceptor.java</file>
    <line>110</line>
    <description><![CDATA[
Interceptor.java (<Source Code>/org/owasp/webgoat/util):110
	<-
Interceptor.java (<Source Code>/org/owasp/webgoat/util):91

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
    <endNode lineNo="110" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
  </finding>


  <finding id="179" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Interceptor</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Interceptor</class>
    <file>Interceptor.java</file>
    <line>112</line>
    <description><![CDATA[
Interceptor.java (<Source Code>/org/owasp/webgoat/util):112
	<-
Interceptor.java (<Source Code>/org/owasp/webgoat/util):92

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="92" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
    <endNode lineNo="112" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
  </finding>


  <finding id="214" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.LessonAdapter</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>LessonAdapter</class>
    <file>LessonAdapter.java</file>
    <line>88</line>
    <description><![CDATA[
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):88
	<-
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):86

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="86" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
    <endNode lineNo="88" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
  </finding>


  <finding id="216" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.LessonAdapter</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>LessonAdapter</class>
    <file>LessonAdapter.java</file>
    <line>92</line>
    <description><![CDATA[
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):92
	<-
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):86

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="86" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
    <endNode lineNo="92" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
  </finding>


  <finding id="215" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.LessonAdapter</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>LessonAdapter</class>
    <file>LessonAdapter.java</file>
    <line>93</line>
    <description><![CDATA[
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):93
	<-
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):86

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="86" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
    <endNode lineNo="93" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
  </finding>


  <finding id="209" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.LessonAdapter</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>LessonAdapter</class>
    <file>LessonAdapter.java</file>
    <line>178</line>
    <description><![CDATA[
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):178
	<-
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):175

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="175" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
    <endNode lineNo="178" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
  </finding>


  <finding id="208" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.LessonAdapter</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>LessonAdapter</class>
    <file>LessonAdapter.java</file>
    <line>196</line>
    <description><![CDATA[
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):196
	<-
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):175

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="175" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
    <endNode lineNo="196" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
  </finding>


  <finding id="207" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.LessonAdapter</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>LessonAdapter</class>
    <file>LessonAdapter.java</file>
    <line>198</line>
    <description><![CDATA[
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):198
	<-
LessonAdapter.java (<Source Code>/org/owasp/webgoat/lessons):175

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="175" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
    <endNode lineNo="198" classFQN="org.owasp.webgoat.lessons.LessonAdapter" xFilePersistence="org.owasp.webgoat.lessons.LessonAdapter"/>
  </finding>


  <finding id="205" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.PathBasedAccessControl</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>PathBasedAccessControl</class>
    <file>PathBasedAccessControl.java</file>
    <line>181</line>
    <description><![CDATA[
PathBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons):181
	<-
PathBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons):181

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="181" classFQN="org.owasp.webgoat.lessons.PathBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.PathBasedAccessControl"/>
    <endNode lineNo="181" classFQN="org.owasp.webgoat.lessons.PathBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.PathBasedAccessControl"/>
  </finding>


  <finding id="206" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.PathBasedAccessControl</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>PathBasedAccessControl</class>
    <file>PathBasedAccessControl.java</file>
    <line>187</line>
    <description><![CDATA[
PathBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons):187
	<-
PathBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons):181

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="181" classFQN="org.owasp.webgoat.lessons.PathBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.PathBasedAccessControl"/>
    <endNode lineNo="187" classFQN="org.owasp.webgoat.lessons.PathBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.PathBasedAccessControl"/>
  </finding>


  <finding id="191" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.RoleBasedAccessControl</package>
    <class>RoleBasedAccessControl</class>
    <file>RoleBasedAccessControl.java</file>
    <line>190</line>
    <description><![CDATA[
RoleBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):190
	<-
RoleBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):190

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="190" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl"/>
    <endNode lineNo="190" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl"/>
  </finding>


  <finding id="193" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.SQLInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>SQLInjection</class>
    <file>SQLInjection.java</file>
    <line>261</line>
    <description><![CDATA[
SQLInjection.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):261
	<-
SQLInjection.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):261

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="261" classFQN="org.owasp.webgoat.lessons.SQLInjection.SQLInjection" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.SQLInjection"/>
    <endNode lineNo="261" classFQN="org.owasp.webgoat.lessons.SQLInjection.SQLInjection" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.SQLInjection"/>
  </finding>


  <finding id="165" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.WebgoatProperties</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>WebgoatProperties</class>
    <file>WebgoatProperties.java</file>
    <line>49</line>
    <description><![CDATA[
WebgoatProperties.java (<Source Code>/org/owasp/webgoat/session):49
	<-
WebgoatProperties.java (<Source Code>/org/owasp/webgoat/session):48

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="48" classFQN="org.owasp.webgoat.session.WebgoatProperties" xFilePersistence="org.owasp.webgoat.session.WebgoatProperties"/>
    <endNode lineNo="49" classFQN="org.owasp.webgoat.session.WebgoatProperties" xFilePersistence="org.owasp.webgoat.session.WebgoatProperties"/>
  </finding>


  <finding id="166" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.WebgoatProperties</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>WebgoatProperties</class>
    <file>WebgoatProperties.java</file>
    <line>50</line>
    <description><![CDATA[
WebgoatProperties.java (<Source Code>/org/owasp/webgoat/session):50
	<-
WebgoatProperties.java (<Source Code>/org/owasp/webgoat/session):48

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="48" classFQN="org.owasp.webgoat.session.WebgoatProperties" xFilePersistence="org.owasp.webgoat.session.WebgoatProperties"/>
    <endNode lineNo="50" classFQN="org.owasp.webgoat.session.WebgoatProperties" xFilePersistence="org.owasp.webgoat.session.WebgoatProperties"/>
  </finding>


  <finding id="167" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.WebgoatProperties</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>WebgoatProperties</class>
    <file>WebgoatProperties.java</file>
    <line>53</line>
    <description><![CDATA[
WebgoatProperties.java (<Source Code>/org/owasp/webgoat/session):53
	<-
WebgoatProperties.java (<Source Code>/org/owasp/webgoat/session):48

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="48" classFQN="org.owasp.webgoat.session.WebgoatProperties" xFilePersistence="org.owasp.webgoat.session.WebgoatProperties"/>
    <endNode lineNo="53" classFQN="org.owasp.webgoat.session.WebgoatProperties" xFilePersistence="org.owasp.webgoat.session.WebgoatProperties"/>
  </finding>


  <finding id="203" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XPATHInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XPATHInjection</class>
    <file>XPATHInjection.java</file>
    <line>142</line>
    <description><![CDATA[
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):142
	<-
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):142

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="142" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
    <endNode lineNo="142" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
  </finding>


  <finding id="202" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XPATHInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XPATHInjection</class>
    <file>XPATHInjection.java</file>
    <line>142</line>
    <description><![CDATA[
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):142
	<-
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):142

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="142" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
    <endNode lineNo="142" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
  </finding>


  <finding id="201" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XPATHInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XPATHInjection</class>
    <file>XPATHInjection.java</file>
    <line>186</line>
    <description><![CDATA[
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):186
	<-
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):142

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="142" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
    <endNode lineNo="186" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
  </finding>


  <finding id="181" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>clientSideFiltering_005fbackup_jsp</class>
    <file>clientSideFiltering_005fbackup_jsp.java</file>
    <line>89</line>
    <description><![CDATA[
clientSideFiltering_005fbackup_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):89
	<-
clientSideFiltering_005fbackup_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):89

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="89" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp"/>
    <endNode lineNo="89" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp"/>
  </finding>


  <finding id="180" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>clientSideFiltering_005fbackup_jsp</class>
    <file>clientSideFiltering_005fbackup_jsp.java</file>
    <line>176</line>
    <description><![CDATA[
clientSideFiltering_005fbackup_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):176
	<-
clientSideFiltering_005fbackup_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):89

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="89" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp"/>
    <endNode lineNo="176" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp"/>
  </finding>


  <finding id="182" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax.instructor</package>
    <class>clientSideFiltering_005fi_jsp</class>
    <file>clientSideFiltering_005fi_jsp.java</file>
    <line>89</line>
    <description><![CDATA[
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):89
	<-
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):89

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="89" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
    <endNode lineNo="89" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
  </finding>


  <finding id="183" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax.instructor</package>
    <class>clientSideFiltering_005fi_jsp</class>
    <file>clientSideFiltering_005fi_jsp.java</file>
    <line>173</line>
    <description><![CDATA[
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):173
	<-
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):89

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="89" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
    <endNode lineNo="173" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
  </finding>


  <finding id="185" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>clientSideFiltering_jsp</class>
    <file>clientSideFiltering_jsp.java</file>
    <line>89</line>
    <description><![CDATA[
clientSideFiltering_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):89
	<-
clientSideFiltering_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):89

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="89" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp"/>
    <endNode lineNo="89" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp"/>
  </finding>


  <finding id="184" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>clientSideFiltering_jsp</class>
    <file>clientSideFiltering_jsp.java</file>
    <line>176</line>
    <description><![CDATA[
clientSideFiltering_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):176
	<-
clientSideFiltering_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):89

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="89" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp"/>
    <endNode lineNo="176" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp"/>
  </finding>


  <finding id="222" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>378</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):378
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):374

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="374" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="378" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="224" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>378</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):378
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):375

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="375" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="378" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="220" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>408</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):408
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):414

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="414" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="408" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="204" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.PathBasedAccessControl</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>PathBasedAccessControl</class>
    <file>PathBasedAccessControl.java</file>
    <line>66</line>
    <description><![CDATA[
PathBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons):66
	<-
PathBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons):181

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="181" classFQN="org.owasp.webgoat.lessons.PathBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.PathBasedAccessControl"/>
    <endNode lineNo="66" classFQN="org.owasp.webgoat.lessons.PathBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.PathBasedAccessControl"/>
  </finding>


  <finding id="199" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.61</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>405</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):405
	<-
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):418

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="418" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
    <endNode lineNo="405" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="197" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.61</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>511</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):511
	<-
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):511

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="511" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
    <endNode lineNo="511" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="188" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.61</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.AbstractLesson</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>AbstractLesson</class>
    <file>AbstractLesson.java</file>
    <line>551</line>
    <description><![CDATA[
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):551
	<-
AbstractLesson.java (<Source Code>/org/owasp/webgoat/lessons):551

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="551" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
    <endNode lineNo="551" classFQN="org.owasp.webgoat.lessons.AbstractLesson" xFilePersistence="org.owasp.webgoat.lessons.AbstractLesson"/>
  </finding>


  <finding id="189" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.61</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.CrossSiteScripting</package>
    <class>CrossSiteScripting</class>
    <file>CrossSiteScripting.java</file>
    <line>118</line>
    <description><![CDATA[
CrossSiteScripting.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):118
	<-
CrossSiteScripting.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):118

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="118" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting"/>
    <endNode lineNo="118" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.CrossSiteScripting"/>
  </finding>


  <finding id="192" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.61</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.RoleBasedAccessControl</package>
    <class>RoleBasedAccessControl</class>
    <file>RoleBasedAccessControl.java</file>
    <line>190</line>
    <description><![CDATA[
RoleBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):190
	<-
RoleBasedAccessControl.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):190

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="190" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl"/>
    <endNode lineNo="190" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.RoleBasedAccessControl"/>
  </finding>


  <finding id="194" kind="PATH">
    <problemType>IO Stream Resource Leak</problemType>
    <problemTypeId>rl:IOStreamResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.61</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SQLInjection.SQLInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.SQLInjection</package>
    <class>SQLInjection</class>
    <file>SQLInjection.java</file>
    <line>261</line>
    <description><![CDATA[
SQLInjection.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):261
	<-
SQLInjection.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):261

An identified taint path for the problem type 'IO Stream Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="261" classFQN="org.owasp.webgoat.lessons.SQLInjection.SQLInjection" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.SQLInjection"/>
    <endNode lineNo="261" classFQN="org.owasp.webgoat.lessons.SQLInjection.SQLInjection" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.SQLInjection"/>
  </finding>


  <finding id="240" kind="PATH">
    <problemType>Socket Resource Leak</problemType>
    <problemTypeId>rl:SocketResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>592</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):592
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):591

An identified taint path for the problem type 'Socket Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="591" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="592" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="239" kind="PATH">
    <problemType>Socket Resource Leak</problemType>
    <problemTypeId>rl:SocketResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.Challenge2Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>Challenge2Screen</class>
    <file>Challenge2Screen.java</file>
    <line>595</line>
    <description><![CDATA[
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):595
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):591

An identified taint path for the problem type 'Socket Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="591" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="595" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
  </finding>


  <finding id="237" kind="PATH">
    <problemType>Socket Resource Leak</problemType>
    <problemTypeId>rl:SocketResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Interceptor</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Interceptor</class>
    <file>Interceptor.java</file>
    <line>112</line>
    <description><![CDATA[
Interceptor.java (<Source Code>/org/owasp/webgoat/util):112
	<-
Interceptor.java (<Source Code>/org/owasp/webgoat/util):88

An identified taint path for the problem type 'Socket Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="88" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
    <endNode lineNo="112" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
  </finding>


  <finding id="236" kind="PATH">
    <problemType>Socket Resource Leak</problemType>
    <problemTypeId>rl:SocketResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Interceptor</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Interceptor</class>
    <file>Interceptor.java</file>
    <line>112</line>
    <description><![CDATA[
Interceptor.java (<Source Code>/org/owasp/webgoat/util):112
	<-
Interceptor.java (<Source Code>/org/owasp/webgoat/util):88

An identified taint path for the problem type 'Socket Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="88" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
    <endNode lineNo="112" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
  </finding>


  <finding id="238" kind="PATH">
    <problemType>Socket Resource Leak</problemType>
    <problemTypeId>rl:SocketResourceLeak</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.util.Interceptor</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.util</package>
    <class>Interceptor</class>
    <file>Interceptor.java</file>
    <line>112</line>
    <description><![CDATA[
Interceptor.java (<Source Code>/org/owasp/webgoat/util):112
	<-
Interceptor.java (<Source Code>/org/owasp/webgoat/util):88

An identified taint path for the problem type 'Socket Resource Leak'
Information about matching pattern in source kind not available.

Information about matching pattern in sink kind not available.
]]></description>
    <startNode lineNo="88" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
    <endNode lineNo="112" classFQN="org.owasp.webgoat.util.Interceptor" xFilePersistence="org.owasp.webgoat.util.Interceptor"/>
  </finding>


  <finding id="244" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.GoatHillsFinancial</package>
    <class>DefaultLessonAction</class>
    <file>DefaultLessonAction.java</file>
    <line>89</line>
    <description><![CDATA[
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'HTTP Session': void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
  </finding>


  <finding id="246" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.52</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons.GoatHillsFinancial</package>
    <class>DefaultLessonAction</class>
    <file>DefaultLessonAction.java</file>
    <line>89</line>
    <description><![CDATA[
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'HTTP Session': void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
  </finding>


  <finding id="245" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.15</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>181</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):181
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

An embedded tainted value reaches the sink: class member 'WebSession.currentLanguage' (field 'currentLanguage' of class 'org.owasp.webgoat.session.WebSession')

Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'HTTP Session': void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <extraDescription><![CDATA[
An embedded tainted value reaches the sink: class member 'WebSession.currentLanguage' (field 'currentLanguage' of class 'org.owasp.webgoat.session.WebSession')]]></extraDescription>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="181" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="248" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.91</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>181</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):181
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):507

An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

An embedded tainted value reaches the sink: class member 'WebSession.message' (field 'message' of class 'org.owasp.webgoat.session.WebSession')

Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'HTTP Session': void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <extraDescription><![CDATA[
An embedded tainted value reaches the sink: class member 'WebSession.message' (field 'message' of class 'org.owasp.webgoat.session.WebSession')]]></extraDescription>
    <startNode lineNo="507" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="181" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="241" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>439</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):439
	<-
WebgoatProperties.java (<Source Code>/org/owasp/webgoat/session):49

An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

An embedded tainted value reaches the sink: class member 'WebSession.course.properties' (field 'properties' of class 'org.owasp.webgoat.session.Course',
embedded in field 'course' of class 'org.owasp.webgoat.session.WebSession')

Matching pattern in source kind 'Property and Environment Input': void java.util.Properties.load(java.io.InputStream)

Matching pattern in sink kind 'HTTP Session': void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <extraDescription><![CDATA[
An embedded tainted value reaches the sink: class member 'WebSession.course.properties' (field 'properties' of class 'org.owasp.webgoat.session.Course',
embedded in field 'course' of class 'org.owasp.webgoat.session.WebSession')]]></extraDescription>
    <startNode lineNo="49" classFQN="org.owasp.webgoat.session.WebgoatProperties" xFilePersistence="org.owasp.webgoat.session.WebgoatProperties"/>
    <endNode lineNo="439" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="243" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.13</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>181</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):181
	<-
WebgoatContext.java (<Source Code>/org/owasp/webgoat/session):119

An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

An embedded tainted value reaches the sink: class member 'WebSession.webgoatContext.defaultLanguage' (field 'defaultLanguage' of class 'org.owasp.webgoat.session.WebgoatContext',
embedded in field 'webgoatContext' of class 'org.owasp.webgoat.session.WebSession')

Matching pattern in source kind 'Property and Environment Input': static java.util.Map java.lang.System.getenv()

Matching pattern in sink kind 'HTTP Session': void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <extraDescription><![CDATA[
An embedded tainted value reaches the sink: class member 'WebSession.webgoatContext.defaultLanguage' (field 'defaultLanguage' of class 'org.owasp.webgoat.session.WebgoatContext',
embedded in field 'webgoatContext' of class 'org.owasp.webgoat.session.WebSession')]]></extraDescription>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.session.WebgoatContext" xFilePersistence="org.owasp.webgoat.session.WebgoatContext"/>
    <endNode lineNo="181" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="242" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.06</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>439</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):439
	<-
WebgoatContext.java (<Source Code>/org/owasp/webgoat/session):119

An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

An embedded tainted value reaches the sink: class member 'WebSession.webgoatContext.defaultLanguage' (field 'defaultLanguage' of class 'org.owasp.webgoat.session.WebgoatContext',
embedded in field 'webgoatContext' of class 'org.owasp.webgoat.session.WebSession')

Matching pattern in source kind 'Property and Environment Input': static java.util.Map java.lang.System.getenv()

Matching pattern in sink kind 'HTTP Session': void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <extraDescription><![CDATA[
An embedded tainted value reaches the sink: class member 'WebSession.webgoatContext.defaultLanguage' (field 'defaultLanguage' of class 'org.owasp.webgoat.session.WebgoatContext',
embedded in field 'webgoatContext' of class 'org.owasp.webgoat.session.WebSession')]]></extraDescription>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.session.WebgoatContext" xFilePersistence="org.owasp.webgoat.session.WebgoatContext"/>
    <endNode lineNo="439" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="247" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>1.60</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.HammerHead</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat</package>
    <class>HammerHead</class>
    <file>HammerHead.java</file>
    <line>181</line>
    <description><![CDATA[
HammerHead.java (<Source Code>/org/owasp/webgoat):181
	<-
LessonTracker.java (<Source Code>/org/owasp/webgoat/session):204

An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

An embedded tainted value reaches the sink: class member 'WebSession.message' (field 'message' of class 'org.owasp.webgoat.session.WebSession')

Matching pattern in source kind 'Property and Environment Input': void java.util.Properties.load(java.io.InputStream)

Matching pattern in sink kind 'HTTP Session': void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <extraDescription><![CDATA[
An embedded tainted value reaches the sink: class member 'WebSession.message' (field 'message' of class 'org.owasp.webgoat.session.WebSession')]]></extraDescription>
    <startNode lineNo="204" classFQN="org.owasp.webgoat.session.LessonTracker" xFilePersistence="org.owasp.webgoat.session.LessonTracker"/>
    <endNode lineNo="181" classFQN="org.owasp.webgoat.HammerHead" xFilePersistence="org.owasp.webgoat.HammerHead"/>
  </finding>


  <finding id="250" kind="PATH">
    <problemType>URL Redirection Abuse</problemType>
    <problemTypeId>xss:URLRedirectAbuse</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.General.redirect_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.General</package>
    <class>redirect_jsp</class>
    <file>redirect_jsp.java</file>
    <line>63</line>
    <description><![CDATA[
redirect_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/General):63
	<-
redirect_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/General):64

An identified taint path for the problem type 'URL Redirection Abuse'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'URL Redirection': void javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
]]></description>
    <startNode lineNo="64" classFQN="xanitizer.generatedFromJsp.lessons.General.redirect_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.General.redirect_jsp"/>
    <endNode lineNo="63" classFQN="xanitizer.generatedFromJsp.lessons.General.redirect_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.General.redirect_jsp"/>
  </finding>


  <finding id="251" kind="PATH">
    <problemType>URL Redirection Abuse</problemType>
    <problemTypeId>xss:URLRedirectAbuse</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.General.redirect_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.General</package>
    <class>redirect_jsp</class>
    <file>redirect_jsp.java</file>
    <line>63</line>
    <description><![CDATA[
redirect_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/General):63
	<-
redirect_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/General):65

An identified taint path for the problem type 'URL Redirection Abuse'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'URL Redirection': void javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
]]></description>
    <startNode lineNo="65" classFQN="xanitizer.generatedFromJsp.lessons.General.redirect_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.General.redirect_jsp"/>
    <endNode lineNo="63" classFQN="xanitizer.generatedFromJsp.lessons.General.redirect_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.General.redirect_jsp"/>
  </finding>


  <finding id="252" kind="PATH">
    <problemType>URL Redirection Abuse</problemType>
    <problemTypeId>xss:URLRedirectAbuse</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.General.redirect_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.General</package>
    <class>redirect_jsp</class>
    <file>redirect_jsp.java</file>
    <line>63</line>
    <description><![CDATA[
redirect_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/General):63
	<-
redirect_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/General):66

An identified taint path for the problem type 'URL Redirection Abuse'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'URL Redirection': void javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
]]></description>
    <startNode lineNo="66" classFQN="xanitizer.generatedFromJsp.lessons.General.redirect_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.General.redirect_jsp"/>
    <endNode lineNo="63" classFQN="xanitizer.generatedFromJsp.lessons.General.redirect_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.General.redirect_jsp"/>
  </finding>


  <finding id="249" kind="PATH">
    <problemType>URL Redirection Abuse</problemType>
    <problemTypeId>xss:URLRedirectAbuse</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.General.redirect_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.General</package>
    <class>redirect_jsp</class>
    <file>redirect_jsp.java</file>
    <line>63</line>
    <description><![CDATA[
redirect_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/General):63
	<-
redirect_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/General):63

An identified taint path for the problem type 'URL Redirection Abuse'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.http.HttpServletRequest.getContextPath()

Matching pattern in sink kind 'URL Redirection': void javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
]]></description>
    <startNode lineNo="63" classFQN="xanitizer.generatedFromJsp.lessons.General.redirect_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.General.redirect_jsp"/>
    <endNode lineNo="63" classFQN="xanitizer.generatedFromJsp.lessons.General.redirect_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.General.redirect_jsp"/>
  </finding>


  <finding id="260" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="271" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBCrossSiteScripting):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="259" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBSQLInjection.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBSQLInjection</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBSQLInjection):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.DBSQLInjection.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBSQLInjection.EditProfile_jsp"/>
  </finding>


  <finding id="264" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/GoatHillsFinancial):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.EditProfile_jsp"/>
  </finding>


  <finding id="267" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/RoleBasedAccessControl):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.EditProfile_jsp"/>
  </finding>


  <finding id="258" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.SQLInjection.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.SQLInjection</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/SQLInjection):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.SQLInjection.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.SQLInjection.EditProfile_jsp"/>
  </finding>


  <finding id="270" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="263" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBCrossSiteScripting):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="257" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBSQLInjection.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBSQLInjection</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBSQLInjection):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.DBSQLInjection.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBSQLInjection.ListStaff_jsp"/>
  </finding>


  <finding id="269" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/GoatHillsFinancial):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.ListStaff_jsp"/>
  </finding>


  <finding id="265" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/RoleBasedAccessControl):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.ListStaff_jsp"/>
  </finding>


  <finding id="266" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.SQLInjection.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.SQLInjection</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/SQLInjection):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.SQLInjection.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.SQLInjection.ListStaff_jsp"/>
  </finding>


  <finding id="268" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="272" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>71</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBCrossSiteScripting):71
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="71" classFQN="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="255" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBSQLInjection.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBSQLInjection</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBSQLInjection):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.DBSQLInjection.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBSQLInjection.ViewProfile_jsp"/>
  </finding>


  <finding id="262" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/GoatHillsFinancial):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.ViewProfile_jsp"/>
  </finding>


  <finding id="256" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/RoleBasedAccessControl):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.ViewProfile_jsp"/>
  </finding>


  <finding id="261" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.SQLInjection.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.SQLInjection</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/SQLInjection):72
	<-
DefaultLessonAction.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):199

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="199" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.DefaultLessonAction"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.SQLInjection.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.SQLInjection.ViewProfile_jsp"/>
  </finding>


  <finding id="254" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.46</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):158

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="158" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="529" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):243

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="243" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="521" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):294

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="294" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="523" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):297

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="297" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="525" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):300

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="300" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="527" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):306

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="306" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="274" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
DatabaseUtilities.java (<Source Code>/org/owasp/webgoat/session):157

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="157" classFQN="org.owasp.webgoat.session.DatabaseUtilities" xFilePersistence="org.owasp.webgoat.session.DatabaseUtilities"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="276" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):222

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="222" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="278" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):225

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="225" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="280" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):228

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="228" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="282" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):240

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="240" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="253" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.24</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
MaliciousFileExecution.java (<Source Code>/org/owasp/webgoat/lessons):158

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="158" classFQN="org.owasp.webgoat.lessons.MaliciousFileExecution" xFilePersistence="org.owasp.webgoat.lessons.MaliciousFileExecution"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="558" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):100

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="100" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="560" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):101

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="101" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="562" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="564" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):107

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="107" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="566" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):108

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="108" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="568" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):109

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="109" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="570" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):110

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="110" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="572" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):111

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="111" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="555" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="557" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):99

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="99" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="530" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):225

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="225" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="532" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):226

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="226" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="273" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.18</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
DatabaseUtilities.java (<Source Code>/org/owasp/webgoat/session):157

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="157" classFQN="org.owasp.webgoat.session.DatabaseUtilities" xFilePersistence="org.owasp.webgoat.session.DatabaseUtilities"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="275" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.18</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):222

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="222" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="277" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.18</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):225

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="225" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="279" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.18</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):228

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="228" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="281" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.18</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):240

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="240" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="284" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.13</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):340

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="340" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="528" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.05</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):243

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="243" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="520" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.05</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):294

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="294" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="522" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.05</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):297

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="297" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="524" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.05</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):300

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="300" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="526" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.05</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
CSRF.java (<Source Code>/org/owasp/webgoat/lessons):306

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="306" classFQN="org.owasp.webgoat.lessons.CSRF" xFilePersistence="org.owasp.webgoat.lessons.CSRF"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="328" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="470" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="399" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="359" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="419" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="379" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="501" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="450" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="308" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="329" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="400" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="471" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="360" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="420" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="380" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="502" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="451" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="309" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="336" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="478" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="407" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="367" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="427" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="387" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="509" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="458" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="316" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="338" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="480" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="409" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="369" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="429" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="389" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="511" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="460" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="318" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="335" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="477" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="406" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="366" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="426" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="386" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="508" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="457" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="315" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="340" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="482" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="411" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="371" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="431" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="391" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="513" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="462" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="320" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="332" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="474" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="403" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="363" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="423" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="383" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="505" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="454" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="312" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="343" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="485" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="414" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="374" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="434" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="394" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="516" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="465" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="323" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="346" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="417" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="488" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="377" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="437" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="397" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="519" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="468" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="326" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="297" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>133</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):133
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):92

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="92" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="133" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="301" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>133</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):133
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):93

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="93" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="133" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="490" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>133</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):133
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):94

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="94" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="133" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="494" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>133</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):133
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):95

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="95" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="133" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="348" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>133</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):133
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):171

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="171" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="133" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="352" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>133</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):133
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):172

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="172" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="133" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="439" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>133</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):133
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):206

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="206" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="133" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="443" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>133</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):133
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):207

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="207" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="133" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="286" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>133</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):133
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):210

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="210" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="133" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="290" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>133</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):133
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):211

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="211" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="133" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="345" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="487" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="416" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="376" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="436" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="396" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="518" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="467" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="325" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="344" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="486" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="415" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="375" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="435" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="395" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="517" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="466" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="324" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="333" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="404" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="475" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="364" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="424" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="384" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="506" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="455" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="313" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="298" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):92

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="92" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="302" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):93

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="93" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="491" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):94

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="94" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="305" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):94

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="94" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="495" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):95

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="95" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="498" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):96

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="96" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="349" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):171

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="171" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="353" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):172

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="172" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="356" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):173

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="173" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="440" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):206

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="206" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="444" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):207

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="207" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="447" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):208

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="208" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="287" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):210

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="210" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="291" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):211

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="211" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="294" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):212

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="212" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="296" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):92

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="92" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="300" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):93

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="93" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="304" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):94

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="94" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="489" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):94

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="94" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="493" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):95

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="95" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="497" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):96

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="96" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="347" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):171

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="171" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="351" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):172

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="172" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="355" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):173

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="173" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="438" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):206

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="206" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="442" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):207

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="207" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="446" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):208

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="208" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="285" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):210

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="210" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="289" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):211

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="211" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="293" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>96</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):96
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):212

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="212" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="96" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="299" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):92

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="92" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="303" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):93

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="93" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="492" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):94

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="94" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="306" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):94

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="94" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="496" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):95

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="95" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="499" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ListStaff.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):96

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="96" classFQN="org.owasp.webgoat.lessons.SQLInjection.ListStaff" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ListStaff"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="350" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):171

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="171" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="354" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):172

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="172" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="357" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):173

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="173" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.Login" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="441" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):206

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="206" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="445" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):207

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="207" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="448" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/DBSQLInjection):208

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="208" classFQN="org.owasp.webgoat.lessons.DBSQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.DBSQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="288" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):210

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="210" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="292" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):211

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="211" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="295" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
Login.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):212

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="212" classFQN="org.owasp.webgoat.lessons.SQLInjection.Login" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.Login"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="327" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="469" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="398" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="358" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="418" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="378" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="500" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="449" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="307" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="330" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="472" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="401" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="361" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="421" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="381" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="503" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="452" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="310" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="337" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="479" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="408" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="368" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="428" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="388" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="510" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="459" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="317" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="339" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="410" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="481" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="370" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="430" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="390" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="512" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="461" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="319" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="334" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="405" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="476" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="365" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="425" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="385" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="507" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="456" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="314" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="341" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="412" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="483" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="372" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="432" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="392" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="514" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="463" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="321" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="331" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="473" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="402" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="362" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="422" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="382" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="504" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="453" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="311" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="342" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="413" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="484" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="373" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="433" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="393" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="515" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="464" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="322" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="577" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="583" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="589" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="579" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="585" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="581" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="591" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="587" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="575" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="576" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):89

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="89" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.EditProfile"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="582" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.EditProfile"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="588" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
EditProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):91

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="91" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.EditProfile"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="578" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):132

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="132" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.FindProfile"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="584" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
FindProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):163

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="163" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.FindProfile"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="580" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/CrossSiteScripting):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.CrossSiteScripting.ViewProfile"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="590" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):112

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="112" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="586" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/RoleBasedAccessControl):119

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="119" classFQN="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.RoleBasedAccessControl.ViewProfile"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="574" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/GoatHillsFinancial):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.GoatHillsFinancial.ViewProfile"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="559" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):100

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="100" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="561" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):101

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="101" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="563" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):102

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="102" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="565" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):107

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="107" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="567" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):108

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="108" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="569" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):109

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="109" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="571" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):110

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="110" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="573" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):111

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="111" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="554" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):98

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="98" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="556" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
BackDoors.java (<Source Code>/org/owasp/webgoat/lessons):99

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="99" classFQN="org.owasp.webgoat.lessons.BackDoors" xFilePersistence="org.owasp.webgoat.lessons.BackDoors"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="531" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):225

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="225" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="533" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):226

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="226" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="535" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="536" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="543" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="545" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="542" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="547" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="539" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="550" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="553" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="552" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="551" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="540" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="534" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="537" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="544" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="546" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="541" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="548" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="538" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="549" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="593" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="592" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
ViewProfile.java (<Source Code>/org/owasp/webgoat/lessons/SQLInjection):161

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="161" classFQN="org.owasp.webgoat.lessons.SQLInjection.ViewProfile" xFilePersistence="org.owasp.webgoat.lessons.SQLInjection.ViewProfile"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="283" kind="PATH">
    <problemType>XSS Stored</problemType>
    <problemTypeId>xss:XSSFromDb</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.93</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
StoredXss.java (<Source Code>/org/owasp/webgoat/lessons):340

An identified taint path for the problem type 'XSS Stored'
Matching pattern in source kind 'Database Read': java.lang.String java.sql.ResultSet.getString(int)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="340" classFQN="org.owasp.webgoat.lessons.StoredXss" xFilePersistence="org.owasp.webgoat.lessons.StoredXss"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="598" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.SearchStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>SearchStaff_jsp</class>
    <file>SearchStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):72
	<-
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):67

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="67" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.SearchStaff_jsp"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.SearchStaff_jsp"/>
  </finding>


  <finding id="599" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.SearchStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting</package>
    <class>SearchStaff_jsp</class>
    <file>SearchStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBCrossSiteScripting):72
	<-
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBCrossSiteScripting):67

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="67" classFQN="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.SearchStaff_jsp"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBCrossSiteScripting.SearchStaff_jsp"/>
  </finding>


  <finding id="600" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.DBSQLInjection.SearchStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.DBSQLInjection</package>
    <class>SearchStaff_jsp</class>
    <file>SearchStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBSQLInjection):72
	<-
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/DBSQLInjection):67

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="67" classFQN="xanitizer.generatedFromJsp.lessons.DBSQLInjection.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBSQLInjection.SearchStaff_jsp"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.DBSQLInjection.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.DBSQLInjection.SearchStaff_jsp"/>
  </finding>


  <finding id="601" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.SearchStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.GoatHillsFinancial</package>
    <class>SearchStaff_jsp</class>
    <file>SearchStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/GoatHillsFinancial):72
	<-
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/GoatHillsFinancial):67

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="67" classFQN="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.SearchStaff_jsp"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.GoatHillsFinancial.SearchStaff_jsp"/>
  </finding>


  <finding id="602" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.SearchStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl</package>
    <class>SearchStaff_jsp</class>
    <file>SearchStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/RoleBasedAccessControl):72
	<-
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/RoleBasedAccessControl):67

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="67" classFQN="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.SearchStaff_jsp"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.RoleBasedAccessControl.SearchStaff_jsp"/>
  </finding>


  <finding id="603" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.SQLInjection.SearchStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.SQLInjection</package>
    <class>SearchStaff_jsp</class>
    <file>SearchStaff_jsp.java</file>
    <line>72</line>
    <description><![CDATA[
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/SQLInjection):72
	<-
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/SQLInjection):67

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="67" classFQN="xanitizer.generatedFromJsp.lessons.SQLInjection.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.SQLInjection.SearchStaff_jsp"/>
    <endNode lineNo="72" classFQN="xanitizer.generatedFromJsp.lessons.SQLInjection.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.SQLInjection.SearchStaff_jsp"/>
  </finding>


  <finding id="594" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax.instructor</package>
    <class>clientSideFiltering_005fi_jsp</class>
    <file>clientSideFiltering_005fi_jsp.java</file>
    <line>155</line>
    <description><![CDATA[
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):155
	<-
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):70

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="70" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
    <endNode lineNo="155" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
  </finding>


  <finding id="596" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>eval_jsp</class>
    <file>eval_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
eval_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):94
	<-
eval_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):68

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="68" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp"/>
  </finding>


  <finding id="595" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>eval_jsp</class>
    <file>eval_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
eval_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):98
	<-
eval_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):68

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="68" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp"/>
  </finding>


  <finding id="597" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>eval_jsp</class>
    <file>eval_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
eval_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):98
	<-
eval_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):69

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="69" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.eval_jsp"/>
  </finding>


  <finding id="636" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.90</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>300</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):300
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):485

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="485" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="300" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="607" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.80</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.SilentTransactions</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>SilentTransactions</class>
    <file>SilentTransactions.java</file>
    <line>89</line>
    <description><![CDATA[
SilentTransactions.java (<Source Code>/org/owasp/webgoat/lessons):89
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="89" classFQN="org.owasp.webgoat.lessons.SilentTransactions" xFilePersistence="org.owasp.webgoat.lessons.SilentTransactions"/>
  </finding>


  <finding id="627" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.71</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>318</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):318
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="318" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="624" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>4.61</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>279</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):279
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="279" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="628" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>289</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):289
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):567

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="567" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="289" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="631" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>289</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):289
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):581

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="581" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="289" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="605" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>304</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):304
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="304" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="632" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):581

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="581" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="637" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
UncheckedEmail.java (<Source Code>/org/owasp/webgoat/lessons):165

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'More Web Protocol Input': java.lang.String javax.mail.Message.getSubject()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="165" classFQN="org.owasp.webgoat.lessons.UncheckedEmail" xFilePersistence="org.owasp.webgoat.lessons.UncheckedEmail"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="639" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.39</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
UncheckedEmail.java (<Source Code>/org/owasp/webgoat/lessons):170

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'More Web Protocol Input': java.lang.Object javax.mail.Part.getContent()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="170" classFQN="org.owasp.webgoat.lessons.UncheckedEmail" xFilePersistence="org.owasp.webgoat.lessons.UncheckedEmail"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="611" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>171</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):171
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="171" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="618" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>185</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):185
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="185" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="623" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>238</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):238
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="238" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="612" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>240</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):240
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="240" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="619" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>242</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):242
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="242" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="609" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>246</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):246
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="246" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="622" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>248</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):248
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="248" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="613" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>250</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):250
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="250" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="648" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>320</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):320
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="320" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="643" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>320</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):320
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):507

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="507" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="320" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="642" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):507

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="507" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="606" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.26</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="645" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.26</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):1060

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="1060" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="608" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>266</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):266
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="266" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="614" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.19</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="633" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.18</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):581

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="581" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="638" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.18</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
UncheckedEmail.java (<Source Code>/org/owasp/webgoat/lessons):165

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'More Web Protocol Input': java.lang.String javax.mail.Message.getSubject()

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="165" classFQN="org.owasp.webgoat.lessons.UncheckedEmail" xFilePersistence="org.owasp.webgoat.lessons.UncheckedEmail"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="640" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.18</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
UncheckedEmail.java (<Source Code>/org/owasp/webgoat/lessons):170

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'More Web Protocol Input': java.lang.Object javax.mail.Part.getContent()

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="170" classFQN="org.owasp.webgoat.lessons.UncheckedEmail" xFilePersistence="org.owasp.webgoat.lessons.UncheckedEmail"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="646" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.13</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):793

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="793" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="629" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.13</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):567

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="567" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="625" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.13</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="604" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.11</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):615

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="615" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="641" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.11</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):507

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="507" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="644" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.05</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):1060

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="1060" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="626" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>3.05</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
WebSession.java (<Source Code>/org/owasp/webgoat/session):818

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.security.Principal javax.servlet.http.HttpServletRequest.getUserPrincipal()

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="818" classFQN="org.owasp.webgoat.session.WebSession" xFilePersistence="org.owasp.webgoat.session.WebSession"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="621" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.99</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="610" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.94</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>279</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):279
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="279" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="647" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.93</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
Challenge2Screen.java (<Source Code>/org/owasp/webgoat/lessons):793

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="793" classFQN="org.owasp.webgoat.lessons.Challenge2Screen" xFilePersistence="org.owasp.webgoat.lessons.Challenge2Screen"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="630" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.93</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):567

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="567" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="663" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="652" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="653" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="667" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="654" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>94</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):94
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="94" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="655" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="650" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>102</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):102
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="102" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="659" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>110</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):110
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="110" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="651" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>118</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):118
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="118" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="658" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>139</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):139
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="139" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="665" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>143</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):143
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="143" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="656" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>153</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):153
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="153" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="666" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="668" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>76</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):76
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="76" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="657" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="669" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>80</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):80
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="80" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="673" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>82</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):82
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="82" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="661" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>84</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):84
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="84" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="670" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>86</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):86
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="86" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="662" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>90</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):90
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="90" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="660" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>98</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):98
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="98" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="649" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.89</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>100</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):100
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="100" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="620" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.83</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>EditProfile_jsp</class>
    <file>EditProfile_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
EditProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.EditProfile_jsp"/>
  </finding>


  <finding id="617" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.83</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ListStaff_jsp</class>
    <file>ListStaff_jsp.java</file>
    <line>74</line>
    <description><![CDATA[
ListStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):74
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="74" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ListStaff_jsp"/>
  </finding>


  <finding id="616" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.83</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>Login_jsp</class>
    <file>Login_jsp.java</file>
    <line>70</line>
    <description><![CDATA[
Login_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):70
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="70" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.Login_jsp"/>
  </finding>


  <finding id="615" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.83</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.SearchStaff_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>SearchStaff_jsp</class>
    <file>SearchStaff_jsp.java</file>
    <line>78</line>
    <description><![CDATA[
SearchStaff_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):78
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="78" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.SearchStaff_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.SearchStaff_jsp"/>
  </finding>


  <finding id="664" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.83</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>107</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):107
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="107" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="671" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.83</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>124</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):124
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="124" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="672" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.83</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.CrossSiteScripting</package>
    <class>ViewProfile_jsp</class>
    <file>ViewProfile_jsp.java</file>
    <line>141</line>
    <description><![CDATA[
ViewProfile_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/CrossSiteScripting):141
	<-
ParameterParser.java (<Source Code>/org/owasp/webgoat/session):674

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="674" classFQN="org.owasp.webgoat.session.ParameterParser" xFilePersistence="org.owasp.webgoat.session.ParameterParser"/>
    <endNode lineNo="141" classFQN="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.CrossSiteScripting.ViewProfile_jsp"/>
  </finding>


  <finding id="634" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.47</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.main_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp</package>
    <class>main_jsp</class>
    <file>main_jsp.java</file>
    <line>337</line>
    <description><![CDATA[
main_jsp.java (<Source Code>/xanitizer/generatedFromJsp):337
	<-
HttpSplitting.java (<Source Code>/org/owasp/webgoat/lessons):66

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.http.HttpServletRequest.getContextPath()

Matching pattern in sink kind 'XSS - Servlet Response Output': void javax.servlet.jsp.JspWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="66" classFQN="org.owasp.webgoat.lessons.HttpSplitting" xFilePersistence="org.owasp.webgoat.lessons.HttpSplitting"/>
    <endNode lineNo="337" classFQN="xanitizer.generatedFromJsp.main_jsp" xFilePersistence="xanitizer.generatedFromJsp.main_jsp"/>
  </finding>


  <finding id="635" kind="PATH">
    <problemType>XSS Reflected</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>2.32</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.session.Screen</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.session</package>
    <class>Screen</class>
    <file>Screen.java</file>
    <line>227</line>
    <description><![CDATA[
Screen.java (<Source Code>/org/owasp/webgoat/session):227
	<-
HttpSplitting.java (<Source Code>/org/owasp/webgoat/lessons):66

An identified taint path for the problem type 'XSS Reflected'
Matching pattern in source kind 'Servlet Request Input': java.lang.String javax.servlet.http.HttpServletRequest.getContextPath()

Matching pattern in sink kind 'XSS - Generic Output Used for Response': void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="66" classFQN="org.owasp.webgoat.lessons.HttpSplitting" xFilePersistence="org.owasp.webgoat.lessons.HttpSplitting"/>
    <endNode lineNo="227" classFQN="org.owasp.webgoat.session.Screen" xFilePersistence="org.owasp.webgoat.session.Screen"/>
  </finding>


  <finding id="678" kind="PATH">
    <problemType>XXE: Disallow Doc - Xerces 2 only</problemType>
    <problemTypeId>xxe:DisallowDoc</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSAXInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSAXInjection</class>
    <file>WsSAXInjection.java</file>
    <line>161</line>
    <description><![CDATA[
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):161
	<-
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):158

An identified taint path for the problem type 'XXE: Disallow Doc - Xerces 2 only'
Matching pattern in source kind 'XML Parser': static org.xml.sax.XMLReader org.xml.sax.helpers.XMLReaderFactory.createXMLReader()

Matching pattern in sink kind 'XML Parser': void org.xml.sax.XMLReader.parse(org.xml.sax.InputSource)
]]></description>
    <startNode lineNo="158" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
    <endNode lineNo="161" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
  </finding>


  <finding id="677" kind="PATH">
    <problemType>XXE: Disallow Doc - Xerces 2 only</problemType>
    <problemTypeId>xxe:DisallowDoc</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XPATHInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XPATHInjection</class>
    <file>XPATHInjection.java</file>
    <line>145</line>
    <description><![CDATA[
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):145
	<-
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):141

An identified taint path for the problem type 'XXE: Disallow Doc - Xerces 2 only'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="141" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
    <endNode lineNo="145" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
  </finding>


  <finding id="674" kind="PATH">
    <problemType>XXE: Disallow Doc - Xerces 2 only</problemType>
    <problemTypeId>xxe:DisallowDoc</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>clientSideFiltering_005fbackup_jsp</class>
    <file>clientSideFiltering_005fbackup_jsp.java</file>
    <line>111</line>
    <description><![CDATA[
clientSideFiltering_005fbackup_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):111
	<-
clientSideFiltering_005fbackup_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):88

An identified taint path for the problem type 'XXE: Disallow Doc - Xerces 2 only'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="88" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp"/>
    <endNode lineNo="111" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp"/>
  </finding>


  <finding id="675" kind="PATH">
    <problemType>XXE: Disallow Doc - Xerces 2 only</problemType>
    <problemTypeId>xxe:DisallowDoc</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax.instructor</package>
    <class>clientSideFiltering_005fi_jsp</class>
    <file>clientSideFiltering_005fi_jsp.java</file>
    <line>108</line>
    <description><![CDATA[
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):108
	<-
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):88

An identified taint path for the problem type 'XXE: Disallow Doc - Xerces 2 only'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="88" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
    <endNode lineNo="108" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
  </finding>


  <finding id="676" kind="PATH">
    <problemType>XXE: Disallow Doc - Xerces 2 only</problemType>
    <problemTypeId>xxe:DisallowDoc</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>clientSideFiltering_jsp</class>
    <file>clientSideFiltering_jsp.java</file>
    <line>111</line>
    <description><![CDATA[
clientSideFiltering_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):111
	<-
clientSideFiltering_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):88

An identified taint path for the problem type 'XXE: Disallow Doc - Xerces 2 only'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="88" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp"/>
    <endNode lineNo="111" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp"/>
  </finding>


  <finding id="683" kind="PATH">
    <problemType>XXE: General Entities</problemType>
    <problemTypeId>xxe:GeneralEntities</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSAXInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSAXInjection</class>
    <file>WsSAXInjection.java</file>
    <line>161</line>
    <description><![CDATA[
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):161
	<-
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):158

An identified taint path for the problem type 'XXE: General Entities'
Matching pattern in source kind 'XML Parser': static org.xml.sax.XMLReader org.xml.sax.helpers.XMLReaderFactory.createXMLReader()

Matching pattern in sink kind 'XML Parser': void org.xml.sax.XMLReader.parse(org.xml.sax.InputSource)
]]></description>
    <startNode lineNo="158" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
    <endNode lineNo="161" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
  </finding>


  <finding id="682" kind="PATH">
    <problemType>XXE: General Entities</problemType>
    <problemTypeId>xxe:GeneralEntities</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XPATHInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XPATHInjection</class>
    <file>XPATHInjection.java</file>
    <line>145</line>
    <description><![CDATA[
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):145
	<-
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):141

An identified taint path for the problem type 'XXE: General Entities'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="141" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
    <endNode lineNo="145" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
  </finding>


  <finding id="679" kind="PATH">
    <problemType>XXE: General Entities</problemType>
    <problemTypeId>xxe:GeneralEntities</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>clientSideFiltering_005fbackup_jsp</class>
    <file>clientSideFiltering_005fbackup_jsp.java</file>
    <line>111</line>
    <description><![CDATA[
clientSideFiltering_005fbackup_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):111
	<-
clientSideFiltering_005fbackup_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):88

An identified taint path for the problem type 'XXE: General Entities'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="88" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp"/>
    <endNode lineNo="111" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp"/>
  </finding>


  <finding id="680" kind="PATH">
    <problemType>XXE: General Entities</problemType>
    <problemTypeId>xxe:GeneralEntities</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax.instructor</package>
    <class>clientSideFiltering_005fi_jsp</class>
    <file>clientSideFiltering_005fi_jsp.java</file>
    <line>108</line>
    <description><![CDATA[
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):108
	<-
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):88

An identified taint path for the problem type 'XXE: General Entities'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="88" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
    <endNode lineNo="108" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
  </finding>


  <finding id="681" kind="PATH">
    <problemType>XXE: General Entities</problemType>
    <problemTypeId>xxe:GeneralEntities</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>clientSideFiltering_jsp</class>
    <file>clientSideFiltering_jsp.java</file>
    <line>111</line>
    <description><![CDATA[
clientSideFiltering_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):111
	<-
clientSideFiltering_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):88

An identified taint path for the problem type 'XXE: General Entities'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="88" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp"/>
    <endNode lineNo="111" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp"/>
  </finding>


  <finding id="688" kind="PATH">
    <problemType>XXE: Param Entities</problemType>
    <problemTypeId>xxe:ParamEntities</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.WsSAXInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>WsSAXInjection</class>
    <file>WsSAXInjection.java</file>
    <line>161</line>
    <description><![CDATA[
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):161
	<-
WsSAXInjection.java (<Source Code>/org/owasp/webgoat/lessons):158

An identified taint path for the problem type 'XXE: Param Entities'
Matching pattern in source kind 'XML Parser': static org.xml.sax.XMLReader org.xml.sax.helpers.XMLReaderFactory.createXMLReader()

Matching pattern in sink kind 'XML Parser': void org.xml.sax.XMLReader.parse(org.xml.sax.InputSource)
]]></description>
    <startNode lineNo="158" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
    <endNode lineNo="161" classFQN="org.owasp.webgoat.lessons.WsSAXInjection" xFilePersistence="org.owasp.webgoat.lessons.WsSAXInjection"/>
  </finding>


  <finding id="687" kind="PATH">
    <problemType>XXE: Param Entities</problemType>
    <problemTypeId>xxe:ParamEntities</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>org.owasp.webgoat.lessons.XPATHInjection</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>org.owasp.webgoat.lessons</package>
    <class>XPATHInjection</class>
    <file>XPATHInjection.java</file>
    <line>145</line>
    <description><![CDATA[
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):145
	<-
XPATHInjection.java (<Source Code>/org/owasp/webgoat/lessons):141

An identified taint path for the problem type 'XXE: Param Entities'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="141" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
    <endNode lineNo="145" classFQN="org.owasp.webgoat.lessons.XPATHInjection" xFilePersistence="org.owasp.webgoat.lessons.XPATHInjection"/>
  </finding>


  <finding id="684" kind="PATH">
    <problemType>XXE: Param Entities</problemType>
    <problemTypeId>xxe:ParamEntities</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>clientSideFiltering_005fbackup_jsp</class>
    <file>clientSideFiltering_005fbackup_jsp.java</file>
    <line>111</line>
    <description><![CDATA[
clientSideFiltering_005fbackup_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):111
	<-
clientSideFiltering_005fbackup_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):88

An identified taint path for the problem type 'XXE: Param Entities'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="88" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp"/>
    <endNode lineNo="111" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_005fbackup_jsp"/>
  </finding>


  <finding id="685" kind="PATH">
    <problemType>XXE: Param Entities</problemType>
    <problemTypeId>xxe:ParamEntities</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax.instructor</package>
    <class>clientSideFiltering_005fi_jsp</class>
    <file>clientSideFiltering_005fi_jsp.java</file>
    <line>108</line>
    <description><![CDATA[
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):108
	<-
clientSideFiltering_005fi_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax/instructor):88

An identified taint path for the problem type 'XXE: Param Entities'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="88" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
    <endNode lineNo="108" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.instructor.clientSideFiltering_005fi_jsp"/>
  </finding>


  <finding id="686" kind="PATH">
    <problemType>XXE: Param Entities</problemType>
    <problemTypeId>xxe:ParamEntities</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Security: Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <xFilePersistence>xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp</xFilePersistence>
    <reviewed>Not Reviewed</reviewed>
    <date>2016-07-01 16:42:25 - new</date>
    <package>xanitizer.generatedFromJsp.lessons.Ajax</package>
    <class>clientSideFiltering_jsp</class>
    <file>clientSideFiltering_jsp.java</file>
    <line>111</line>
    <description><![CDATA[
clientSideFiltering_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):111
	<-
clientSideFiltering_jsp.java (<Source Code>/xanitizer/generatedFromJsp/lessons/Ajax):88

An identified taint path for the problem type 'XXE: Param Entities'
Matching pattern in source kind 'XML Parser XXE Extension': javax.xml.xpath.XPath javax.xml.xpath.XPathFactory.newXPath()

Matching pattern in sink kind 'XML Parser': java.lang.Object javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)
]]></description>
    <startNode lineNo="88" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp"/>
    <endNode lineNo="111" classFQN="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp" xFilePersistence="xanitizer.generatedFromJsp.lessons.Ajax.clientSideFiltering_jsp"/>
  </finding>
</XanitizerFindingsList>
